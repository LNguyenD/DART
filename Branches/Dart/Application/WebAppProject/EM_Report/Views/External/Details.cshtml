@model EM_Report.Domain.External_Group
@using EM_Report.Helpers;
@using EM_Report.Common.Utilities;
@using EM_Report.Repositories;
@{
    ViewBag.Title = "External Group";
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Master.cshtml";
}
@functions {  
	public bool IsNew()
	{
		return (Model != null && Model.External_GroupId > 0) ? false : true;
	}

	public string AddButtonText()
	{
		return IsNew() ? "add" : "save";
	}
}
<div class="wrapper">
    <div class="w_100p">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="formWrap">  
                @Html.Hidden("action")
			    @if (!IsNew())
               {
				    @Html.HiddenFor(e => e.External_GroupId)
				    @Html.HiddenFor(e => e.Owner)
               }                                   
                <h1>@(IsNew() ? "External Group List Add" : "External Group List Edit")</h1>
                @Html.Partial("_ShowMessage")
                <div class="formInline">
                    <label>External Group Name</label>                    
                    @Html.TextBoxFor(e => e.Name, new { id = "txtName", name = "txtName", @class = "Text" })
					@Html.ValidationMessageFor(e => e.Name) 
                </div>   
                <div class="clear"></div>             
                <div class="formInline">
                    <label>Description</label>
                    @Html.TextAreaFor(e => e.Description, new { id = "txtDescription", @class = "Text" })
					@Html.ValidationMessageFor(e => e.Description) 
                </div>
                <div class="clear"></div>
                <div class="formInline">
                    <label>Status</label>
                    @Html.DropDownListFor(e => e.Status, new SelectList(ViewBag.cboStatus, "Value", "Text"))
                </div>                
                <div class="clear"></div>
                @if (!IsNew())
                {
                    <div class="formInline">
                        <label>Create Date</label>                        
                        @Html.TextBoxFor(e => e.Create_Date, "{0:dd/MM/yyyy}", new { @class = "Text Disabled", @readonly = true })
                    </div>
                    <div class="clear"></div>
                    <div class="formInline">
                        <label>Created By</label>                        
                        @Html.TextBoxFor(e => e.OwnerName, new { @class = "Text Disabled", @readonly = true })
                    </div>      
                    <div class="clear"></div>
                }
                <div class="formInline formInlineBtn">   
                    @if (Login.AuthorizeSystemPermission(ResourcesHelper.System_Report, ResourcesHelper.Permission_Add))
                    {
                    <span class="btnPurple"><input type="button" onclick="actionClick('save', false);" value="Save" /></span>
                    }  
                    <span class="btnPurple"><input type="button" onclick="window.location=('@Url.Action("Index", "External")')" value="Back to List" /></span> 
                </div>
                <div class="clear"></div>
            </div>
        }
    </div>  
</div>
