@model EM_Report.Domain.Organisation_Levels
@using EM_Report.Common.Utilities;
@using EM_Report.Helpers;
@using EM_Report.Domain;
@{
    ViewBag.Title = "Level Details";
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Master.cshtml";
}
@functions {
    public bool IsNew()
    {
        return (Model != null && Model.LevelId > 0) ? false : true;
    }
}
<div class="wrapper">
    <div class="w_100p">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="formWrap">
                @Html.Hidden("action")
                @if (!IsNew())
                {
                    @Html.HiddenFor(e => e.LevelId)
                    @Html.HiddenFor(e => e.Sort)
                }
                <h1>@(IsNew() ? "Add Organisation Role Level" : "Edit Organisation Role Level")</h1>
                @Html.Partial("_ShowMessage")
                <div class="formInline">
                    <label>Level Name</label>
                    @Html.TextBoxFor(e => e.Name, new { id = "txtName", name = "txtName", @class = "Text" })
                    <span class="field-validation-error" style="display: none">*</span>
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>Description</label>
                    @Html.TextAreaFor(e => e.Description, new { id = "txtDescription", @class = "Text" })
                    @Html.ValidationMessageFor(e => e.Description)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>System</label>
                    @if (Model != null && Model.LevelId > 0)
                    {
                        @Html.Hidden("IsEditStatus", Model.LevelId);
                        @Html.DropDownListFor(e => e.SystemId, (SelectList)ViewBag.cboSystemSite, Model.SystemId)
                    }
                    else
                    {
                        <div>
                            <table cellspacing="0" cellpadding="0" style="float: left;">
                                <tr>
                                    @foreach (var s in (List<Systems>)ViewBag.chkSystemSite)
                                    {
                                        <td>
                                            <input type="checkbox" value="0" name="chkSystem_@(s.Name)" id="chkSystem_@(s.Name)" />
                                        </td>
                                        <td>
                                            <span>@(s.Name == "EML" ? "WCNSW" : s.Name == "HEM" ? "Hospitality" : s.Name)</span>
                                        </td>
                                    }
                                </tr>
                            </table>
                            <span class="field-validation-error" style="margin-left: 10px; display: none;">*</span>
                        </div>
                    }
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>Status</label>
                    @Html.DropDownListFor(e => e.Status, new SelectList(ViewBag.cboStatus, "Value", "Text"))
                </div>
                <div class="clear">
                </div>
                @if (!IsNew())
                {
                    <div class="formInline">
                        @Html.Hidden("secondList")
                        <label>
                            Current Organisation Of Level</label>
                        <div style="height: auto; overflow: hidden;">
                            <ul id="lstSecondList" class="list-full">
                                @if (((IEnumerable<Organisation_Roles>)ViewBag.RoleList).IsNullOrEmpty())
                                {
                                    <li><span>No item found!</span></li>
                                }
                                else
                                {
                                    foreach (var item in (IEnumerable<Organisation_Roles>)ViewBag.RoleList)
                                    {
                                    <li><span>+ @item.Name</span> </li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                    <div class="clear">
                    </div>
                    <div class="formInline">
                        <label>Create Date</label>
                        @Html.TextBoxFor(e => e.Create_Date, new { @class = "Text Disabled", @readonly = true })
                    </div>
                    <div class="clear">
                    </div>
                    <div class="formInline">
                        <label>Created By</label>
                        @Html.TextBoxFor(e => e.OwnerName, new { @class = "Text Disabled", @readonly = true })
                    </div>       
                    <div class="clear">
                    </div>         
                }
                <div class="formInline formInlineBtn">
                    @if (Login.AuthorizeSystemPermission(ResourcesHelper.System_Group, ResourcesHelper.Permission_Add))
                    {
                        <span class="btnPurple">
                        <input type="button" name="btnSave" value="Save" onclick="SubmitLevel();" /></span>
                    }
                    <span class="btnPurple">
                    <input type="button" value="Back To List" onclick="window.location = ('@Url.Action("index", "organisation_level", new { systemid = Request["systemid"] })')" /></span>
                </div>
                <div class="clear">
                </div>
            </div>
        }
    </div>
</div>
<script type="text/javascript" language="javascript">
    function SubmitLevel() {
        if (isValidRequiredSystem() == true) {
            actionClick('save', false);
        }
    }

    function isValidRequiredSystem() {
        var isValid = true;

        if ($("#txtName").val() == "") {
            $("#txtName").addClass("input-validation-error");
            $("#txtName").parent().parent().parent().parent().next().show();
            isValid = false;
        }
        else {
            $("#txtName").parent().parent().parent().parent().next().hide();
        }

        if ($("#IsEditStatus").val() == undefined) {
            if ($("#chkSystem_HEM").is(':checked') == false && $("#chkSystem_TMF").is(':checked') == false && $("#chkSystem_EML").is(':checked') == false) {
                $("#chkSystem_HEM").parent().parent().parent().parent().parent().parent().parent().parent().next().show();
                isValid = false;
            }
            else {
                $("#chkSystem_HEM").parent().parent().parent().parent().parent().parent().parent().parent().next().hide();
            }
        }

        return isValid;
    }
</script>
