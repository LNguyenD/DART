---------------------------------------------------------- 
------------------- SchemaChange 
---------------------------------------------------------- 
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\Dart_SchemaChange.sql  
--------------------------------  
---Update old data with mapping given by harry for agency, sub, policy_no---
--update TMF_RTW set AgencyName=tmfwebrep.dbo.udf_GetAgencyNameByPolicyNo(POLICY_NO)
--,Sub_Category=tmfwebrep.dbo.udf_GetSubCategoryByPolicyNo(POLICY_NO)--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\Dart_SchemaChange.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\Dashboard_Favours.sql  
--------------------------------  
/****** Object:  Table [dbo].[Dashboard_Favours]    Script Date: 09/23/2013 11:45:13 ******/
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Dashboard_Favours]') AND type in (N'U'))
	CREATE TABLE [dbo].[Dashboard_Favours](
		[FavourId] [int] IDENTITY(1,1) NOT NULL,
		[Name] [nvarchar](256) NOT NULL,
		[Url] [nvarchar](300) NOT NULL,
		[UserId] [int] NOT NULL,
		[Status] [smallint] NULL,
		[Create_Date] [datetime] NULL,
		[Owner] [int] NULL,
		[UpdatedBy] [int] NULL,
	 CONSTRAINT [PK_Dashboard_Favour] PRIMARY KEY CLUSTERED 
	(
		[FavourId] ASC
	)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
	) ON [PRIMARY]
ELSE
	-- Update Users table schema
	IF COL_LENGTH('Dashboard_Favours','Is_Landing_Page') IS NULL
	BEGIN	
		ALTER TABLE [dbo].[Dashboard_Favours]
		ADD Is_Landing_Page bit NULL	
	END	
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\Dashboard_Favours.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\Dashboard_Graph_Description.sql  
--------------------------------  
/****** Object:  Table [dbo].[Dashboard_Graph_Description]    Script Date: 09/23/2013 11:49:29 ******/
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Dashboard_Graph_Description]') AND type in (N'U'))
	CREATE TABLE [dbo].[Dashboard_Graph_Description](
		[DescriptionId] [int] IDENTITY(1,1) NOT NULL,
		[SystemId] [int] NOT NULL,
		[Type] [varchar](50) NOT NULL,
		[Description] [nvarchar](4000) NOT NULL,
		[Status] [smallint] NULL,
		[Create_Date] [datetime] NULL,
		[Owner] [int] NULL,
		[UpdatedBy] [int] NULL,
	 CONSTRAINT [PK_Dashboard_Graph_Description] PRIMARY KEY CLUSTERED 
	(
		[DescriptionId] ASC
	)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
	) ON [PRIMARY]

	GO

SET ANSI_PADDING OFF
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\Dashboard_Graph_Description.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\Dashboard_TimeAccess.sql  
--------------------------------  
/****** Object:  Table [dbo].[Dashboard_TimeAccess]    Script Date: 09/23/2013 11:50:02 ******/
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Dashboard_TimeAccess]') AND type in (N'U'))
	CREATE TABLE [dbo].[Dashboard_TimeAccess](
		[Id] [int] IDENTITY(1,1) NOT NULL,
		[DashboardId] [int] NOT NULL,
		[DashboardLevelId] [int] NOT NULL,
		[UserId] [int] NOT NULL,
		[StartTime] [datetime] NOT NULL,
		[EndTime] [datetime] NOT NULL,
		[Status] [smallint] NULL,
		[Create_Date] [datetime] NULL,
		[Owner] [int] NULL,
		[UpdatedBy] [int] NULL,
	 CONSTRAINT [PK_TimeAccessCalculator] PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
	) ON [PRIMARY]
ELSE
	BEGIN
		DELETE FROM [dbo].[Dashboard_TimeAccess]
		
		IF COL_LENGTH('Dashboard_TimeAccess','DashboardId') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[Dashboard_TimeAccess]
			DROP COLUMN DashboardId
		END
		IF COL_LENGTH('Dashboard_TimeAccess','DashboardLevelId') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[Dashboard_TimeAccess]
			DROP COLUMN DashboardLevelId
		END
		IF COL_LENGTH('Dashboard_TimeAccess','Url') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[Dashboard_TimeAccess]
			ADD Url varchar (256) null
		END
	END
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\Dashboard_TimeAccess.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\Dashboard_Traffic_Light_Rules.sql  
--------------------------------  
/****** Object:  Table [dbo].[Dashboard_Traffic_Light_Rules]    Script Date: 11/04/2013 14:59:51 ******/
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Dashboard_Traffic_Light_Rules]') AND type in (N'U'))
	BEGIN
		CREATE TABLE [dbo].[Dashboard_Traffic_Light_Rules](
			[Id] [int] IDENTITY(1,1) NOT NULL,
			[SystemId] [int] NOT NULL,
			[DashboardType] [varchar](50) NULL,
			[Type] [varchar](20) NULL,
			[Value] [varchar](20) NULL,
			[Sub_Value] [varchar](256) NULL,
			[Measure] [int] NULL,
			[Name] [varchar](50) NULL,
			[Color] [varchar](50) NOT NULL,
			[Description] [varchar](256) NULL,
			[ImageUrl] [varchar](256) NULL,
			[FromValue] [float] NULL,
			[ToValue] [float] NULL,
			[Status] [smallint] NULL,
			[Create_Date] [datetime] NULL,
			[Owner] [int] NULL,
			[UpdatedBy] [int] NULL,
		 CONSTRAINT [PK_Dashboard_Traffic_Light_Rules] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
		) ON [PRIMARY]
	END
GO

SET ANSI_PADDING OFF
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\Dashboard_Traffic_Light_Rules.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\EML_AWC.sql  
--------------------------------  
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EML_AWC]') AND type in (N'U'))	
	BEGIN
		CREATE TABLE [dbo].[EML_AWC](
			[Id] [int] IDENTITY(1,1) NOT NULL,
			[Time_ID] [datetime] NOT NULL,
			[Claim_no] [varchar](19) NULL,
			[Team] [varchar](20) NULL,
			[Case_manager] [varchar](81) NULL,
			[Date_of_Injury] [datetime] NULL,
			[create_date] [datetime]  DEFAULT GETDATE(),		
			[POLICY_NO] [char](19) NULL,
			[EMPL_SIZE] [varchar](256) NULL,
			[Cert_Type] [varchar](256) NULL,
			[Med_cert_From] [datetime] NULL,
			[Med_cert_To] [datetime] NULL,
			[Account_Manager] [varchar](256) NULL,
			[Cell_no] [tinyint] NULL,
			[Portfolio] [varchar](256) NULL
		 CONSTRAINT [PK_EML_AWC_ID] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
		) ON [PRIMARY]		
	END
ELSE
	BEGIN	
		IF COL_LENGTH('EML_AWC','EMPL_SIZE') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_AWC]
			ADD EMPL_SIZE nchar(2) null
		END
		IF COL_LENGTH('EML_AWC','Cert_Type') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_AWC]
			ADD Cert_Type varchar(256) null
		END	
		IF COL_LENGTH('EML_AWC','Med_cert_From') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_AWC]
			ADD Med_cert_From datetime null
		END	
		IF COL_LENGTH('EML_AWC','Med_cert_To') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_AWC]
			ADD Med_cert_To datetime null
		END	
		IF COL_LENGTH('EML_AWC','Account_Manager') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_AWC]
			ADD Account_Manager varchar(256) null
		END	
		IF COL_LENGTH('EML_AWC','Cell_no') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_AWC]
			ADD Cell_no tinyint null
		END
		IF COL_LENGTH('EML_AWC','Portfolio') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_AWC]
			ADD Portfolio varchar(256) null
		END
		IF COL_LENGTH('EML_AWC','Group_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_AWC]
			DROP COLUMN Group_
		END
		IF COL_LENGTH('EML_AWC','Team_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_AWC]
			DROP COLUMN Team_
		END
		IF COL_LENGTH('EML_AWC','Case_manager_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_AWC]
			DROP COLUMN Case_manager_
		END
		IF COL_LENGTH('EML_AWC','AgencyName') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_AWC]
			DROP COLUMN AgencyName
		END
		IF COL_LENGTH('EML_AWC','Sub_Category') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_AWC]
			DROP COLUMN Sub_Category
		END
		IF COL_LENGTH('EML_AWC','Agency_Id') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_AWC]
			DROP COLUMN Agency_Id
		END
		IF COL_LENGTH('EML_AWC','Group') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_AWC]
			DROP COLUMN [Group]
		END
	END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\EML_AWC.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\EML_AWC_Projections.sql  
--------------------------------  
/****** Object:  Table [dbo].[EML_AWC_Projections]    Script Date: 07/08/2013 08:24:30 ******/
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EML_AWC_Projections]') AND type in (N'U'))	
	BEGIN
		CREATE TABLE [dbo].[EML_AWC_Projections](
			[Id] [int] IDENTITY(1,1) NOT NULL,
			[Unit_Type] [varchar](20) NOT NULL,
			[Unit_Name] [varchar](256) NOT NULL,
			[Type] [varchar](20) NOT NULL,
			[Time_Id] [datetime] NOT NULL,
			[Projection] [float] NOT NULL,
		 CONSTRAINT [PK_EML_AWC_Projections] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
		) ON [PRIMARY]
	END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\EML_AWC_Projections.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\EML_Portfolio.sql  
--------------------------------  
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EML_Portfolio]') AND type in (N'U'))	
	BEGIN
		CREATE TABLE [dbo].[EML_Portfolio](				
			[Id] [int] IDENTITY(1,1) NOT NULL,
			[Team] [varchar](20) NULL,
			[Case_Manager] [varchar](81) NULL,
			[Policy_No] [char](19) NULL,
			[EMPL_SIZE] [varchar](256) NULL,			
			[Account_Manager] [varchar](256) NULL,			
			[Portfolio] [varchar](256) NULL,
			
			[Reporting_Date] [datetime] NOT NULL,			
			[Claim_No] [varchar](19) NULL,			
			[WIC_Code] [varchar](50) NULL,
			[Company_Name] [varchar](256) NULL,
			[Worker_Name] [varchar](256) NULL,
			[Employee_Number] [varchar](256) NULL,
			[Worker_Phone_Number] [varchar](256) NULL,
			[Claims_Officer_Name] [varchar](256) NULL,
			[Date_Of_Birth] [datetime] NULL,
			[Date_Of_Injury] [datetime] NULL,
			[Date_Of_Notification] [datetime] NULL,
			[Notification_Lag] [int] NULL,
			[Entered_Lag] [int] NULL,
			[Claim_Liability_Indicator_Group] [varchar](256) NULL,
			[Investigation_Incurred] [money] NULL,
			[Total_Paid] [money] NULL,			
			
			[Is_Time_Lost] [bit] NULL,	
			[Claim_Closed_Flag] [nchar](1)  NULL,	
			[Date_Claim_Entered] [datetime] NULL,	
			[Date_Claim_Closed] [datetime] NULL,
			[Date_Claim_Received] [datetime] NULL,
			[Date_Claim_Reopened] [datetime] NULL,			
			[Result_Of_Injury_Code] [int] NULL,			
			[WPI] [float] NULL,			
			[Common_Law] [bit] NULL,
			[Total_Recoveries] [float] NULL,			
			[Is_Working] [bit] NULL, ---1-->At Work,0 -->Not At Work
			[Physio_Paid] [float] NULL,
			[Chiro_Paid] [float] NULL,
			[Massage_Paid] [float] NULL,
			[Osteopathy_Paid] [float] NULL,
			[Acupuncture_Paid] [float] NULL,
			[Create_Date] [datetime]  DEFAULT GETDATE(),
			[Is_Stress] [bit] NULL,
			[Is_Inactive_Claims] [bit] NULL,
			[Is_Medically_Discharged] [bit] NULL,
			[Is_Exempt] [bit] NULL,
			[Is_Reactive] [bit] NULL,
			[Is_Medical_Only] [bit] NULL,
			[Is_D_D] [bit] NULL,
			[NCMM_Actions_This_Week] [varchar](256) NULL,
			[NCMM_Actions_Next_Week] [varchar](256) NULL,
			[HoursPerWeek] [numeric](5, 2) NULL,
			[Is_Industrial_Deafness] [bit] NULL,
			[Rehab_Paid] [float] NULL,
			
			[Action_Required] [nchar](1) NULL,
			[RTW_Impacting] [nchar](1) NULL,
			[Weeks_In] [int] NULL,
			[Weeks_Band] [varchar] (256) NULL,
			[Hindsight] [varchar] (256) NULL,
			[Active_Weekly] [nchar](1) NULL,
			[Active_Medical] [nchar](1) NULL,
			[Cost_Code] [char] (16) NULL,
			[Cost_Code2] [char] (16) NULL,
			[CC_Injury] [varchar] (256) NULL,
			[CC_Current] [varchar] (256) NULL,
			[Med_Cert_Status_This_Week] [varchar] (20) NULL,
			[Med_Cert_Status_Next_Week] [varchar] (20) NULL,
			[Capacity] [varchar] (256) NULL,
			[Entitlement_Weeks] [numeric](5, 1) NULL,
			[Med_Cert_Status_Prev_1_Week] [varchar](20) NULL,
			[Med_Cert_Status_Prev_2_Week] [varchar](20) NULL,
			[Med_Cert_Status_Prev_3_Week] [varchar](20) NULL,
			[Med_Cert_Status_Prev_4_Week] [varchar](20) NULL,
			[Is_Last_Month] [bit] NULL,
			IsPreClosed [bit] NULL,
			IsPreOpened [bit] NULL
		 CONSTRAINT [PK_EML_Portfolio_ID] PRIMARY KEY CLUSTERED
		(
			[Id] ASC
		)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
		) ON [PRIMARY]
		
	END
ELSE
	-- Update Users table schema
	IF COL_LENGTH('EML_Portfolio','Is_Last_Month') IS NULL
	BEGIN	
		ALTER TABLE [dbo].[EML_Portfolio]
		ADD Is_Last_Month bit NULL	
	END	
	IF COL_LENGTH('EML_Portfolio','Agency_Name') IS NOT NULL
	BEGIN	
		ALTER TABLE [dbo].[EML_Portfolio]
		DROP COLUMN Agency_Name
	END
	IF COL_LENGTH('EML_Portfolio','Sub_Category') IS NOT NULL
	BEGIN	
		ALTER TABLE [dbo].[EML_Portfolio]
		DROP COLUMN Sub_Category
	END
	IF COL_LENGTH('EML_Portfolio','Agency_Id') IS NOT NULL
	BEGIN	
		ALTER TABLE [dbo].[EML_Portfolio]
		DROP COLUMN Agency_Id
	END
	IF COL_LENGTH('EML_Portfolio','Group') IS NOT NULL
	BEGIN	
		ALTER TABLE [dbo].[EML_Portfolio]
		DROP COLUMN [Group]
	END
	IF COL_LENGTH('EML_Portfolio','IsPreClosed') IS NULL
	BEGIN	
		ALTER TABLE [dbo].[EML_Portfolio]
		ADD IsPreClosed bit NULL	
	END	
	IF COL_LENGTH('EML_Portfolio','IsPreOpened') IS NULL
	BEGIN	
		ALTER TABLE [dbo].[EML_Portfolio]
		ADD IsPreOpened bit NULL	
	END	
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\EML_Portfolio.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\EML_RTW.sql  
--------------------------------  
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EML_RTW]') AND type in (N'U'))	
	BEGIN
		CREATE TABLE [dbo].[EML_RTW](
			[Id] [int] IDENTITY(1,1) NOT NULL,
			[Remuneration_Start] [datetime] NULL,
			[Remuneration_End] [datetime] NULL,
			[Measure_months] [bigint] NULL,
			[Team] [varchar](20) NULL,
			[Case_manager] [varchar](81) NULL,
			[Claim_no] [varchar](20) NULL,
			[DTE_OF_INJURY] [datetime] NULL,
			[POLICY_NO] [char](19) NULL,
			[LT] [float] NULL,
			[WGT] [float] NULL,
			[EMPL_SIZE] [varchar](256) NULL,
			[Weeks_paid][float] NULL,
			[create_date] [datetime]  DEFAULT GETDATE(),
			[Measure] [int] NULL,
			[Cert_Type] [varchar](256) NULL,
			[Med_cert_From] [datetime] NULL,
			[Med_cert_To] [datetime] NULL,
			[Account_Manager] [varchar](256) NULL,
			[Cell_no] [tinyint] NULL,
			[Portfolio] [varchar](256) NULL,
			[Stress] [varchar](256) NULL,
			[Liability_Status] [varchar](256) NULL,
			[cost_code] [varchar](256) NULL,
			[cost_code2] [varchar](256) NULL,
			[Claim_Closed_flag] [varchar] (256) NULL
		 CONSTRAINT [PK_EML_RTW_MEASURE] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
		) ON [PRIMARY]		
	END
ELSE
	BEGIN
		IF COL_LENGTH('EML_RTW','Cert_Type') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			ADD Cert_Type varchar(256) null
		END	
		IF COL_LENGTH('EML_RTW','Med_cert_From') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			ADD Med_cert_From datetime null
		END	
		IF COL_LENGTH('EML_RTW','Med_cert_To') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			ADD Med_cert_To datetime null
		END	
		IF COL_LENGTH('EML_RTW','Account_Manager') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			ADD Account_Manager varchar(256) null
		END	
		IF COL_LENGTH('EML_RTW','Cell_no') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			ADD Cell_no tinyint null
		END
		IF COL_LENGTH('EML_RTW','Portfolio') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			ADD Portfolio varchar(256) null
		END
		
		IF COL_LENGTH('EML_RTW','Stress') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			ADD Stress varchar(256) null
		END	
		IF COL_LENGTH('EML_RTW','Liability_Status') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			ADD Liability_Status varchar(256) null
		END	
		IF COL_LENGTH('EML_RTW','cost_code') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			ADD cost_code varchar(256) null
		END	
		IF COL_LENGTH('EML_RTW','cost_code2') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			ADD cost_code2 varchar(256) null
		END	
		IF COL_LENGTH('EML_RTW','Claim_Closed_flag') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			ADD Claim_Closed_flag varchar(256) null
		END	
		IF COL_LENGTH('EML_RTW','Group_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			DROP COLUMN Group_
		END
		IF COL_LENGTH('EML_RTW','Team_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			DROP COLUMN Team_
		END
		IF COL_LENGTH('EML_RTW','Case_manager_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			DROP COLUMN Case_manager_
		END
		IF COL_LENGTH('EML_RTW','AgencyName') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			DROP COLUMN AgencyName
		END
		IF COL_LENGTH('EML_RTW','Sub_Category') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			DROP COLUMN Sub_Category
		END
		IF COL_LENGTH('EML_RTW','Agency_Id') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			DROP COLUMN Agency_Id
		END
		IF COL_LENGTH('EML_RTW','Group') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW]
			DROP COLUMN [Group]
		END
	END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\EML_RTW.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\EML_RTW_Target_Base.sql  
--------------------------------  
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EML_RTW_Target_Base]') AND type in (N'U'))	
	BEGIN
		CREATE TABLE [dbo].[EML_RTW_Target_Base](
			[Id] [int] IDENTITY(1,1) NOT NULL,
			[Type] [varchar](20) NOT NULL,
			[Value] [varchar](256) NULL,
			[Sub_Value] [varchar](256) NULL,
			[Measure] [int] NULL,
			[Target] [float] NULL,
			[Base] [float] NULL,
			[UpdatedBy] [int] NULL,
			[Create_Date] [datetime] NULL,
			[Status] [smallint] NULL,
			[Remuneration] varchar(20) NULL
		 CONSTRAINT [PK_EML_RTW_Target_Base] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
		) ON [PRIMARY]
	END
ELSE
	BEGIN	
		IF COL_LENGTH('EML_RTW_Target_Base','Remuneration') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[EML_RTW_Target_Base]
			ADD Remuneration nvarchar(20) null
		END		
	END	

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\EML_RTW_Target_Base.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\EML_SIW.sql  
--------------------------------  
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EML_SIW]') AND type in (N'U'))
BEGIN
	CREATE TABLE [dbo].[EML_SIW](
		[Claim_no] [varchar](20) NULL
	) ON [PRIMARY]
	
	-- INSERT DATA
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'107672016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'108301016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'112062016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'114079016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'129066016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'138561016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'144549016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'154794016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'154925016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'155159016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'158578016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'162143016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'162625016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'162819016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'163788016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'164337016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'167311016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'175780016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'178215016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'183512016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'186829016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'186897016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'189373016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'189796016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'190347016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'191194016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'194408016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'196294016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'197100016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'201222016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'201259016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'201503016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'203539016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'206119016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'207514016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'209481016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'211845016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'212677016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'213724016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'216016016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'216269016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'216332016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'217731016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'217790016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'218554016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'218904016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'219024016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'221955016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'223565016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'230118016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'232716016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'232858016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'233002016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'233063016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'265699016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'272124122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'871099016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'912289016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'941722016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'954221016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'964101016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'2162946122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'3005566122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'95881468122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'97723597122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'97738938122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'97919288122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'98060033122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'98070748122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'98160530122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'98179214122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'101425420122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'101431308122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'338001070122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'388000805122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'2MAB0097326122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'2MCF0082209122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'2MLN0096236122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'930018A016')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'C0048468122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'O1029105122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'O6005782122')
	INSERT [dbo].[EML_SIW] ([Claim_no]) VALUES (N'O8000270122')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\EML_SIW.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\HEM_AWC.sql  
--------------------------------  
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[HEM_AWC]') AND type in (N'U'))	
	BEGIN
		CREATE TABLE [dbo].[HEM_AWC](
			[Id] [int] IDENTITY(1,1) NOT NULL,
			[Time_ID] [datetime] NOT NULL,
			[Claim_no] [varchar](19) NULL,
			[Team] [varchar](20) NULL,
			[Case_manager] [varchar](81) NULL,
			[Date_of_Injury] [datetime] NULL,
			[create_date] [datetime]  DEFAULT GETDATE(),		
			[POLICY_NO] [char](19) NULL,
			[EMPL_SIZE] [varchar](256) NULL,
			[Cert_Type] [varchar](256) NULL,
			[Med_cert_From] [datetime] NULL,
			[Med_cert_To] [datetime] NULL,
			[Account_Manager] [varchar](256) NULL,
			[Cell_no] [tinyint] NULL,
			[Portfolio] [varchar](256) NULL
		 CONSTRAINT [PK_HEM_AWC_ID] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
		) ON [PRIMARY]	
		
	END
ELSE
	BEGIN	
		IF COL_LENGTH('HEM_AWC','EMPL_SIZE') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_AWC]
			ADD EMPL_SIZE nchar(2) null
		END
		IF COL_LENGTH('HEM_AWC','Cert_Type') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_AWC]
			ADD Cert_Type varchar(256) null
		END	
		IF COL_LENGTH('HEM_AWC','Med_cert_From') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_AWC]
			ADD Med_cert_From datetime null
		END	
		IF COL_LENGTH('HEM_AWC','Med_cert_To') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_AWC]
			ADD Med_cert_To datetime null
		END	
		IF COL_LENGTH('HEM_AWC','Account_Manager') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_AWC]
			ADD Account_Manager varchar(256) null
		END
		IF COL_LENGTH('HEM_AWC','Cell_no') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_AWC]
			ADD Cell_no tinyint null
		END
		IF COL_LENGTH('HEM_AWC','Portfolio') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_AWC]
			ADD Portfolio varchar(256) null
		END
		IF COL_LENGTH('HEM_AWC','Group_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_AWC]
			DROP COLUMN Group_
		END
		IF COL_LENGTH('HEM_AWC','Team_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_AWC]
			DROP COLUMN Team_
		END
		IF COL_LENGTH('HEM_AWC','Case_manager_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_AWC]
			DROP COLUMN Case_manager_
		END
		IF COL_LENGTH('HEM_AWC','AgencyName') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_AWC]
			DROP COLUMN AgencyName
		END
		IF COL_LENGTH('HEM_AWC','Sub_Category') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_AWC]
			DROP COLUMN Sub_Category
		END
		IF COL_LENGTH('HEM_AWC','Agency_Id') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_AWC]
			DROP COLUMN Agency_Id
		END
		IF COL_LENGTH('HEM_AWC','Group') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_AWC]
			DROP COLUMN [Group]
		END
	END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\HEM_AWC.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\HEM_AWC_Projections.sql  
--------------------------------  
/****** Object:  Table [dbo].[HEM_AWC_Projections]    Script Date: 07/08/2013 08:24:30 ******/
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[HEM_AWC_Projections]') AND type in (N'U'))	
	BEGIN
		CREATE TABLE [dbo].[HEM_AWC_Projections](
			[Id] [int] IDENTITY(1,1) NOT NULL,
			[Unit_Type] [varchar](20) NOT NULL,
			[Unit_Name] [varchar](256) NOT NULL,
			[Type] [varchar](20) NOT NULL,
			[Time_Id] [datetime] NOT NULL,
			[Projection] [float] NOT NULL,
		 CONSTRAINT [PK_HEM_AWC_Projections] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
		) ON [PRIMARY]
	END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\HEM_AWC_Projections.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\HEM_Portfolio.sql  
--------------------------------  
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[HEM_Portfolio]') AND type in (N'U'))	
	BEGIN
		CREATE TABLE [dbo].[HEM_Portfolio](				
			[Id] [int] IDENTITY(1,1) NOT NULL,
			[Team] [varchar](20) NULL,
			[Case_Manager] [varchar](81) NULL,
			[Policy_No] [char](19) NULL,
			[EMPL_SIZE] [varchar](256) NULL,			
			[Account_Manager] [varchar](256) NULL,			
			[Portfolio] [varchar](256) NULL,
			
			[Reporting_Date] [datetime] NOT NULL,			
			[Claim_No] [varchar](19) NULL,			
			[WIC_Code] [varchar](50) NULL,
			[Company_Name] [varchar](256) NULL,
			[Worker_Name] [varchar](256) NULL,
			[Employee_Number] [varchar](256) NULL,
			[Worker_Phone_Number] [varchar](256) NULL,
			[Claims_Officer_Name] [varchar](256) NULL,
			[Date_Of_Birth] [datetime] NULL,
			[Date_Of_Injury] [datetime] NULL,
			[Date_Of_Notification] [datetime] NULL,
			[Notification_Lag] [int] NULL,
			[Entered_Lag] [int] NULL,
			[Claim_Liability_Indicator_Group] [varchar](256) NULL,
			[Investigation_Incurred] [money] NULL,
			[Total_Paid] [money] NULL,			
			
			[Is_Time_Lost] [bit] NULL,	
			[Claim_Closed_Flag] [nchar](1)  NULL,	
			[Date_Claim_Entered] [datetime] NULL,	
			[Date_Claim_Closed] [datetime] NULL,
			[Date_Claim_Received] [datetime] NULL,
			[Date_Claim_Reopened] [datetime] NULL,			
			[Result_Of_Injury_Code] [int] NULL,			
			[WPI] [float] NULL,			
			[Common_Law] [bit] NULL,
			[Total_Recoveries] [float] NULL,			
			[Is_Working] [bit] NULL, ---1-->At Work,0 -->Not At Work
			[Physio_Paid] [float] NULL,
			[Chiro_Paid] [float] NULL,
			[Massage_Paid] [float] NULL,
			[Osteopathy_Paid] [float] NULL,
			[Acupuncture_Paid] [float] NULL,
			[Create_Date] [datetime]  DEFAULT GETDATE(),
			[Is_Stress] [bit] NULL,
			[Is_Inactive_Claims] [bit] NULL,
			[Is_Medically_Discharged] [bit] NULL,
			[Is_Exempt] [bit] NULL,
			[Is_Reactive] [bit] NULL,
			[Is_Medical_Only] [bit] NULL,
			[Is_D_D] [bit] NULL,
			[NCMM_Actions_This_Week] [varchar](256) NULL,
			[NCMM_Actions_Next_Week] [varchar](256) NULL,
			[HoursPerWeek] [numeric](5, 2) NULL,
			[Is_Industrial_Deafness] [bit] NULL,
			[Rehab_Paid] [float] NULL,
			
			[Action_Required] [nchar](1) NULL,
			[RTW_Impacting] [nchar](1) NULL,
			[Weeks_In] [int] NULL,
			[Weeks_Band] [varchar] (256) NULL,
			[Hindsight] [varchar] (256) NULL,
			[Active_Weekly] [nchar](1) NULL,
			[Active_Medical] [nchar](1) NULL,
			[Cost_Code] [char] (16) NULL,
			[Cost_Code2] [char] (16) NULL,
			[CC_Injury] [varchar] (256) NULL,
			[CC_Current] [varchar] (256) NULL,
			[Med_Cert_Status_This_Week] [varchar] (20) NULL,
			[Med_Cert_Status_Next_Week] [varchar] (20) NULL,
			[Capacity] [varchar] (256) NULL,
			[Entitlement_Weeks] [numeric](5, 1) NULL,
			[Med_Cert_Status_Prev_1_Week] [varchar](20) NULL,
			[Med_Cert_Status_Prev_2_Week] [varchar](20) NULL,
			[Med_Cert_Status_Prev_3_Week] [varchar](20) NULL,
			[Med_Cert_Status_Prev_4_Week] [varchar](20) NULL,
			[Is_Last_Month] [bit] NULL,
			IsPreClosed [bit] NULL,
			IsPreOpened [bit] NULL
		 CONSTRAINT [PK_HEM_Portfolio_ID] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
		) ON [PRIMARY]
		
	END
ELSE
	-- Update Users table schema
	IF COL_LENGTH('HEM_Portfolio','Is_Last_Month') IS NULL
	BEGIN	
		ALTER TABLE [dbo].[HEM_Portfolio]
		ADD Is_Last_Month bit NULL	
	END
	IF COL_LENGTH('HEM_Portfolio','Agency_Name') IS NOT NULL
	BEGIN	
		ALTER TABLE [dbo].[HEM_Portfolio]
		DROP COLUMN Agency_Name
	END
	IF COL_LENGTH('HEM_Portfolio','Sub_Category') IS NOT NULL
	BEGIN	
		ALTER TABLE [dbo].[HEM_Portfolio]
		DROP COLUMN Sub_Category
	END
	IF COL_LENGTH('HEM_Portfolio','Agency_Id') IS NOT NULL
	BEGIN	
		ALTER TABLE [dbo].[HEM_Portfolio]
		DROP COLUMN Agency_Id
	END
	IF COL_LENGTH('HEM_Portfolio','Group') IS NOT NULL
	BEGIN	
		ALTER TABLE [dbo].[HEM_Portfolio]
		DROP COLUMN [Group]
	END
	IF COL_LENGTH('HEM_Portfolio','IsPreClosed') IS NULL
	BEGIN	
		ALTER TABLE [dbo].[HEM_Portfolio]
		ADD IsPreClosed bit NULL	
	END	
	IF COL_LENGTH('HEM_Portfolio','IsPreOpened') IS NULL
	BEGIN	
		ALTER TABLE [dbo].[HEM_Portfolio]
		ADD IsPreOpened bit NULL	
	END	
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\HEM_Portfolio.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\HEM_RTW.sql  
--------------------------------  
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[HEM_RTW]') AND type in (N'U'))	
	BEGIN
		CREATE TABLE [dbo].[HEM_RTW](
			[Id] [int] IDENTITY(1,1) NOT NULL,
			[Remuneration_Start] [datetime] NULL,
			[Remuneration_End] [datetime] NULL,
			[Measure_months] [bigint] NULL,
			[Team] [varchar](20) NULL,
			[Case_manager] [varchar](81) NULL,
			[Claim_no] [varchar](20) NULL,
			[DTE_OF_INJURY] [datetime] NULL,
			[POLICY_NO] [char](19) NULL,
			[LT] [float] NULL,
			[WGT] [float] NULL,
			[EMPL_SIZE] [varchar](256) NULL,
			[Weeks_paid][float] NULL,
			[create_date] [datetime]  DEFAULT GETDATE(),
			[Measure] [int] NULL,
			[Cert_Type] [varchar](256) NULL,
			[Med_cert_From] [datetime] NULL,
			[Med_cert_To] [datetime] NULL,
			[Account_Manager] [varchar](256) NULL,
			[Cell_no] [tinyint] NULL,
			[Portfolio] [varchar](256) NULL,
			[Stress] [varchar](256) NULL,
			[Liability_Status] [varchar](256) NULL,
			[cost_code] [varchar](256) NULL,
			[cost_code2] [varchar](256) NULL,
			[Claim_Closed_flag] [varchar] (256) NULL
		 CONSTRAINT [PK_HEM_RTW_MEASURE] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
		) ON [PRIMARY]	
		
	END
ELSE
	BEGIN
		IF COL_LENGTH('HEM_RTW','Cert_Type') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			ADD Cert_Type varchar(256) null
		END	
		IF COL_LENGTH('HEM_RTW','Med_cert_From') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			ADD Med_cert_From datetime null
		END	
		IF COL_LENGTH('HEM_RTW','Med_cert_To') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			ADD Med_cert_To datetime null
		END	
		IF COL_LENGTH('HEM_RTW','Account_Manager') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			ADD Account_Manager varchar(256) null
		END	
		IF COL_LENGTH('HEM_RTW','Cell_no') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			ADD Cell_no tinyint null
		END
		IF COL_LENGTH('HEM_RTW','Portfolio') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			ADD Portfolio varchar(256) null
		END
		
		IF COL_LENGTH('HEM_RTW','Stress') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			ADD Stress varchar(256) null
		END	
		IF COL_LENGTH('HEM_RTW','Liability_Status') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			ADD Liability_Status varchar(256) null
		END	
		IF COL_LENGTH('HEM_RTW','cost_code') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			ADD cost_code varchar(256) null
		END	
		IF COL_LENGTH('HEM_RTW','cost_code2') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			ADD cost_code2 varchar(256) null
		END	
		IF COL_LENGTH('HEM_RTW','Claim_Closed_flag') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			ADD Claim_Closed_flag varchar(256) null
		END	
		IF COL_LENGTH('HEM_RTW','Group_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			DROP COLUMN Group_
		END
		IF COL_LENGTH('HEM_RTW','Team_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			DROP COLUMN Team_
		END
		IF COL_LENGTH('HEM_RTW','Case_manager_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			DROP COLUMN Case_manager_
		END
		IF COL_LENGTH('HEM_RTW','AgencyName') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			DROP COLUMN AgencyName
		END
		IF COL_LENGTH('HEM_RTW','Sub_Category') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			DROP COLUMN Sub_Category
		END
		IF COL_LENGTH('HEM_RTW','Agency_Id') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			DROP COLUMN Agency_Id
		END
		IF COL_LENGTH('HEM_RTW','Group') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW]
			DROP COLUMN [Group]
		END
	END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\HEM_RTW.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\HEM_RTW_Target_Base.sql  
--------------------------------  
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[HEM_RTW_Target_Base]') AND type in (N'U'))	
	BEGIN
			CREATE TABLE [dbo].[HEM_RTW_Target_Base](
			[Id] [int] IDENTITY(1,1) NOT NULL,
			[Type] [varchar](20) NOT NULL,
			[Value] [varchar](256) NULL,
			[Sub_Value] [varchar](256) NULL,
			[Measure] [int] NULL,
			[Target] [float] NULL,
			[Base] [float] NULL,
			[UpdatedBy] [int] NULL,
			[Create_Date] [datetime] NULL,
			[Status] [smallint] NULL,
			[Remuneration] varchar(20) NULL
		 CONSTRAINT [PK_HEM_RTW_Target_Base] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
		) ON [PRIMARY]		
	END
ELSE
	BEGIN	
		IF COL_LENGTH('HEM_RTW_Target_Base','Remuneration') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[HEM_RTW_Target_Base]
			ADD Remuneration nvarchar(20) null
		END		
	END	


GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\HEM_RTW_Target_Base.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\TMF_Agencies_Sub_Category.sql  
--------------------------------  
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TMF_Agencies_Sub_Category]') AND type in (N'U'))
BEGIN
	CREATE TABLE [dbo].[TMF_Agencies_Sub_Category](
		[Id] [int] IDENTITY(1,1) NOT NULL,
		[AgencyId] [varchar](20) NULL,
		[AgencyName] [char](20) NULL,
		[Sub_Category] [varchar](256) NULL,
		[POLICY_NO] [char](19) NULL,
		[Group] [varchar](50) NULL,
	 CONSTRAINT [PK_TMF_Agencies_Sub_Category] PRIMARY KEY CLUSTERED
	(
		[Id] ASC
	)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
	) ON [PRIMARY]

	-- INSERT DATA
	SET IDENTITY_INSERT [dbo].[TMF_Agencies_Sub_Category] ON
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2791, N'10010', N'OTHER               ', N'THE LEGISLATURE', N'WC900321           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2792, N'10015', N'OTHER               ', N'CABINET OFFICE', N'WC900331           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2793, N'10015', N'OTHER               ', N'CABINET OFFICE', N'WC900772           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2794, N'10020', N'OTHER               ', N'DEPARTMENT OF PREMIER AND CABINET', N'WC900275           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2795, N'10020', N'OTHER               ', N'PUBLIC EMPLOYMENT OFFICE', N'WC900665           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2796, N'10025', N'OTHER               ', N'PARLIAMENTARY COUNSEL''S OFFICE', N'WC900773           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2797, N'10035', N'OTHER               ', N'INDEPENDENT PRICING AND REGULATORY TRIBUNAL', N'WC900547           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2798, N'10045', N'OTHER               ', N'INDEPENDENT COMMISSION AGAINST CORRUPTION', N'WC900327           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2799, N'10050', N'OTHER               ', N'NSW OMBUDSMAN', N'WC900305           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2800, N'10052', N'OTHER               ', N'PUBLIC SERVICE COMMISSION', N'T10083             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2801, N'10060', N'OTHER               ', N'NSW ELECTORAL COMMISSION', N'WC900311           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2802, N'10065', N'OTHER               ', N'NSW CRIME COMMISSION', N'WC900310           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2803, N'10069', N'OTHER               ', N'DEPARTMENT OF URBAN AFFAIRS', N'WC900306           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2804, N'10069', N'OTHER               ', N'MINISTRY OF URBAN INFRASTRUCTURE MANAGEM', N'WC900695           ', N'Miscellaneous')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2805, N'10090', N'OTHER               ', N'SOUTHERN METROPOLITIAN DEVELOP', N'WC900397           ', N'Miscellaneous')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2806, N'10090', N'OTHER               ', N'WESTERN SYDNEY DEVELOPMENTAL DISABILITY', N'WC900398           ', N'Miscellaneous')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2807, N'10142', N'OTHER               ', N'WORLD YOUTH DAY COORDINATION', N'MWJ3333309         ', N'Miscellaneous')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2808, N'10250', N'POLICE              ', N'SOUTH WEST METRO', N'MWJ3333297         ', N'7')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2809, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900264           ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2810, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900332           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2811, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900537           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2812, N'10250', N'POLICE              ', N'OPERATIONAL SUPPORT', N'WC900538           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2813, N'10250', N'POLICE              ', N'NORTHERN REGION', N'WC900539           ', N'7')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2814, N'10250', N'POLICE              ', N'NORTH-WEST REGION', N'WC900540           ', N'7')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2815, N'10250', N'POLICE              ', N'SOUTHERN REGION', N'WC900541           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2816, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900542           ', N'7')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2817, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900543           ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2818, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900544           ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2819, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900631           ', N'7')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2820, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900720           ', N'7')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2821, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900721           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2822, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900722           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2823, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900723           ', N'7')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2824, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900724           ', N'7')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2825, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900725           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2826, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900726           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2827, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900727           ', N'7')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2828, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900728           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2829, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900729           ', N'7')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2830, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900730           ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2831, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900731           ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2832, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900732           ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2833, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900733           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2834, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900734           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2835, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900735           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2836, N'10250', N'POLICE              ', N'CENTRAL METROPOLITAN', N'WC900854           ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2837, N'10250', N'POLICE              ', N'NORTH WEST METRO', N'WC900855           ', N'7')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2838, N'10250', N'POLICE              ', N'NORTHERN REGION', N'WC900856           ', N'7')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2839, N'10250', N'POLICE              ', N'SOUTHERN REGION', N'WC900857           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2840, N'10250', N'POLICE              ', N'SPECIALIST OPERATIONS', N'WC900859           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2841, N'10250', N'POLICE              ', N'OPERATIONS SUPPORT', N'WC900860           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2842, N'10250', N'POLICE              ', N'POLICE - OTHER', N'WC900861           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2843, N'10250', N'POLICE              ', N'WESTERN REGION', N'WC900862           ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2844, N'10255', N'POLICE              ', N'POLICE - OTHER', N'WC900630           ', N'7')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2845, N'10260', N'OTHER               ', N'SES', N'WC900266           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2846, N'10260', N'OTHER               ', N'SES', N'WC900477           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2847, N'10265', N'OTHER               ', N'SES', N'T10082             ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2848, N'10270', N'OTHER               ', N'DCS', N'WC900276           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2849, N'10270', N'OTHER               ', N'DCS', N'WC900592           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2850, N'10270', N'OTHER               ', N'DCS', N'WC900593           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2851, N'10270', N'OTHER               ', N'DCS', N'WC900594           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2852, N'10270', N'OTHER               ', N'DCS', N'WC900595           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2853, N'10270', N'OTHER               ', N'DCS', N'WC900596           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2854, N'10270', N'OTHER               ', N'DCS', N'WC900597           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2855, N'10270', N'OTHER               ', N'DCS', N'WC900789           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2856, N'10270', N'OTHER               ', N'DCS', N'WC900790           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2857, N'10275', N'OTHER               ', N'DJJ', N'WC900536           ', N'5')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2858, N'10280', N'OTHER               ', N'DEPARTMENT OF LOCAL GOVERNMENT', N'WC900302           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2859, N'10305', N'OTHER               ', N'LPMA-STRATEGIC LANDS', N'MWJ3333319         ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2860, N'10305', N'OTHER               ', N'LPMA - HUNTER DEVELOPMENT CORP', N'MWJ3333320         ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2861, N'10305', N'OTHER               ', N'WASTE ASSET MANAGEMENT CORPORATION', N'T10067             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2862, N'10305', N'OTHER               ', N'LAND PROPERTY INFORMATION', N'WC900746           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2863, N'10305', N'OTHER               ', N'LAND AND PROPERTY MANAGEMENT AUTHORITY', N'WC900871           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2864, N'10355', N'FIRE                ', N'FIRE AND RESCUE NSW', N'WC900263           ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2865, N'10355', N'FIRE                ', N'FIRE - OTHER', N'T10116             ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2866, N'10355', N'FIRE                ', N'FIRE - OTHER', N'T10117             ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2867, N'10355', N'FIRE                ', N'FIRE - OTHER', N'T10118             ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2868, N'10355', N'FIRE                ', N'FIRE - OTHER', N'T10119             ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2869, N'10355', N'FIRE                ', N'FIRE - OTHER', N'T10120             ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2870, N'10355', N'FIRE                ', N'FIRE - OTHER', N'T10121             ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2871, N'10355', N'FIRE                ', N'METROPOLITAN', N'T10122             ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2872, N'10355', N'FIRE                ', N'METROPOLITAN', N'T10123             ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2873, N'10355', N'FIRE                ', N'METROPOLITAN', N'T10124             ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2874, N'10355', N'FIRE                ', N'METROPOLITAN', N'T10125             ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2875, N'10355', N'FIRE                ', N'REGIONAL', N'T10126             ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2876, N'10355', N'FIRE                ', N'REGIONAL', N'T10127             ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2877, N'10355', N'FIRE                ', N'REGIONAL', N'T10128             ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2878, N'10355', N'FIRE                ', N'FIRE - OTHER', N'T10129             ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2879, N'10355', N'FIRE                ', N'FIRE - OTHER', N'T10130             ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2880, N'10355', N'FIRE                ', N'FIRE - OTHER', N'T10131             ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2881, N'10405', N'FIRE                ', N'DEPARTMENT OF RURAL FIRE SERVICES', N'WC900265           ', N'8')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2882, N'10460', N'OTHER               ', N'THE DEPARTMENT FOR WOMEN', N'WC900599           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2883, N'10475', N'OTHER               ', N'REDFERN WATERLOO AUTHORITY', N'WC900907           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2884, N'10500', N'OTHER               ', N'DEPARTMENT OF PLANNING', N'MWJ3333294         ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2885, N'10500', N'OTHER               ', N'HERITAGE OFFICE', N'WC900694           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2886, N'10594', N'OTHER               ', N'INFRASTRUCTURE NSW', N'T10087             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2887, N'10597', N'OTHER               ', N'DEVELOPMENT AUTHORITY', N'T10084             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2888, N'10644', N'OTHER               ', N'TRANSGRID', N'T10132             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2889, N'15506', N'OTHER               ', N'THE AUDIT OFFICE OF NSW', N'WC900288           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2890, N'15513', N'OTHER               ', N'CORPORATION SOLE', N'WC900795           ', N'3')
	
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2891, N'15523', N'OTHER               ', N'LAND AND PROPERTY INFORMATION', N'WC900317           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2892, N'15524', N'OTHER               ', N'LUNA PARK RESERVE TRUST', N'WC900565           ', N'Miscellaneous')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2893, N'15549', N'OTHER               ', N'VALUER GENERAL S OFFICE', N'WC900318           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2894, N'15595', N'OTHER               ', N'LPMA - STATE PROPERTY AUTHORITY', N'MWJ3333303         ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2895, N'15596', N'OTHER               ', N'BARANGAROO DELIVERY AUTHORITY', N'MWJ3333315         ', N'Miscellaneous')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2896, N'15851', N'OTHER               ', N'ANZAC MEMORIAL TRUST', N'WC900576           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2897, N'15864', N'OTHER               ', N'NATIONAL TRUST OF AUSTRALIA (NSW)', N'WC900608           ', N'Miscellaneous')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2898, N'15864', N'OTHER               ', N'NATIONAL TRUST OF AUSTRALIA (NSW)', N'WC900611           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2899, N'20608', N'OTHER               ', N'CITY WEST HOUSING', N'WC900633           ', N'Miscellaneous')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2900, N'20653', N'OTHER               ', N'SYDNEY HARBOUR FORESHORE AUTHORITY', N'WC900291           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2901, N'20653', N'OTHER               ', N'SYDNEY HARBOUR FORESHORE AUTHORITY', N'WC900415           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2902, N'20653', N'OTHER               ', N'SYDNEY HARBOUR FORESHORE AUTHORITY', N'WC900775           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2903, N'25664', N'OTHER               ', N'COBBORA HOLDING COMPANY PTY LTD', N'T10068             ', N'Miscellaneous')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2904, N'10090J', N'HEALTH              ', N'SYDNEY CHILDREN''S HOSPITAL NETWORK', N'T10029             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2905, N'10090J', N'HEALTH              ', N'SYDNEY CHILDREN''S HOSPITAL NETWORK', N'T10078             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2906, N'10090J', N'HEALTH              ', N'SYDNEY CHILDREN''S HOSPITAL NETWORK', N'WC900246           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2907, N'10090J', N'HEALTH              ', N'SYDNEY CHILDREN''S HOSPITAL NETWORK', N'WC900675           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2908, N'10090K', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900060           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2909, N'10090K', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900186           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2910, N'10090K', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900202           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2911, N'10090K', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900338           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2912, N'10090K', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900354           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2913, N'10090K', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900362           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2914, N'10090K', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900370           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2915, N'10090K', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900376           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2916, N'10090K', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900489           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2917, N'10090L', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900180           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2918, N'10090L', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900188           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2919, N'10090L', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900355           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2920, N'10090L', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900357           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2921, N'10090L', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900369           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2922, N'10090L', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900473           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2923, N'10090L', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900490           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2924, N'10090R', N'HEALTH              ', N'ST VINCENT LOCAL HEALTH NETWORK', N'T10022             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2925, N'10090R', N'HEALTH              ', N'ST VINCENT LOCAL HEALTH NETWORK', N'T10024             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2926, N'10090R', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900034           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2927, N'10090R', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900241           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2928, N'10090R', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900340           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2929, N'10090R', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900356           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2930, N'10090R', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900359           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2931, N'10090R', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'WC900472           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2932, N'10090R', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900488           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2933, N'10090R', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900494           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2934, N'10090R', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900525           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2935, N'10090R', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900531           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2936, N'10090R', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900821           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2937, N'10090S', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900385           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2938, N'10090S', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900471           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2939, N'10090S', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900486           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2940, N'10090S', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900605           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2941, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10017             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2942, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10018             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2943, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10019             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2944, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10020             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2945, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10021             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2946, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10028             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2947, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10032             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2948, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10033             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2949, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10034             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2950, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10041             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2951, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10042             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2952, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10043             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2953, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10044             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2954, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10045             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2955, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10046             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2956, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10047             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2957, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10048             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2958, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'T10049             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2959, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900352           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2960, N'10090Y', N'HEALTH              ', N'HEALTH SUPPORT SERVICES', N'WC900375           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2961, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'T10058             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2962, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'T10076             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2963, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900007           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2964, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900008           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2965, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900010           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2966, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900011           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2967, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900059           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2968, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900074           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2969, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900230           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2970, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900235           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2971, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900245           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2972, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900252           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2973, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900366           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2974, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900371           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2975, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900386           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2976, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900422           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2977, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900451           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2978, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900530           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2979, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900577           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2980, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900662           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2981, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900702           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2982, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900780           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2983, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900816           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2984, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'WC900817           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2985, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'T10092             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2986, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'T10095             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2987, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'T10096             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2988, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'T10133             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2989, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'T10134             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2990, N'15090A', N'HEALTH              ', N'SYDNEY LOCAL HEALTH DISTRICT', N'T10135             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2991, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'T10014             ', N'2')
	
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2992, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'T10059             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2993, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'T10077             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2994, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900051           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2995, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900052           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2996, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900053           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2997, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900054           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2998, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900055           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (2999, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900056           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3000, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900228           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3001, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900233           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3002, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900238           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3003, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900372           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3004, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900390           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3005, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900436           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3006, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900437           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3007, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900499           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3008, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900500           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3009, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900501           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3010, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900533           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3011, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900534           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3012, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'WC900686           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3013, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'T10093             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3014, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'T10094             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3015, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'T10097             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3016, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'T10136             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3017, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'T10137             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3018, N'15090B', N'HEALTH              ', N'SOUTH WEST SYDNEY HEALTH DISTRICT', N'T10138             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3019, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10057             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3020, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900013           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3021, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900014           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3022, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900015           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3023, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900016           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3024, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900017           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3025, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900057           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3026, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900058           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3027, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900079           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3028, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900082           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3029, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900232           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3030, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900240           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3031, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900392           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3032, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900674           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3033, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900676           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3034, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900677           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3035, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900678           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3036, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10110             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3037, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10111             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3038, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10112             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3039, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10113             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3040, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10114             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3041, N'15090C', N'HEALTH              ', N'SOUTH EASTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10115             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3042, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'T10030             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3043, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'T10056             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3044, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'WC900033           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3045, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'WC900035           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3046, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'WC900036           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3047, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'WC900037           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3048, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'WC900038           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3049, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'WC900039           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3050, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'WC900040           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3051, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'WC900041           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3052, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'WC900193           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3053, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'WC900440           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3054, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'WC900452           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3055, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'WC900749           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3056, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'WC900818           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3057, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'WC900819           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3058, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'WC900820           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3059, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'WC900822           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3060, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'T10104             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3061, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'T10105             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3062, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'T10106             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3063, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'T10107             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3064, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'T10108             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3065, N'15090D', N'HEALTH              ', N'ILLAWARRA SHOALHAVEN LOCAL HEALTH DISTRICT', N'T10109             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3066, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10010             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3067, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10011             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3068, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10012             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3069, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10013             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3070, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10038             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3071, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10039             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3072, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10040             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3073, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10060             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3074, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10073             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3075, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10075             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3076, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'T10086             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3077, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900068           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3078, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900069           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3079, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900070           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3080, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900083           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3081, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900239           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3082, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900377           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3083, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900391           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3084, N'15090E', N'HEALTH              ', N'WESTERN SYDNEY LOCAL HEALTH DISTRICT', N'WC900684           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3085, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'T10037             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3086, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'T10061             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3087, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'T10062             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3088, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'T10063             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3089, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'T10064             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3090, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'T10072             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3091, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'T10074             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3092, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'T10080             ', N'3')
	
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3093, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'T10081             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3094, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'T10085             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3095, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'WC900061           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3096, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'WC900062           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3097, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'WC900063           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3098, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'WC900064           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3099, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'WC900065           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3100, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'WC900066           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3101, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'WC900085           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3102, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'WC900171           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3103, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'WC900178           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3104, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'WC900445           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3105, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'WC900446           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3106, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'WC900528           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3107, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'WC900529           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3108, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'WC900546           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3109, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'WC900910           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3110, N'15090F', N'HEALTH              ', N'NEPEAN BLUE MOUNTAINS LOCAL HEALTH DISTRICT', N'WC900911           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3111, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'T10054             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3112, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'T10069             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3113, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900090           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3114, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900091           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3115, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900092           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3116, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900094           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3117, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900095           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3118, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900096           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3119, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900097           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3120, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900098           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3121, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900099           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3122, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900100           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3123, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900101           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3124, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900102           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3125, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900103           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3126, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900104           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3127, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900105           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3128, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900106           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3129, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900107           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3130, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900108           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3131, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900109           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3132, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900110           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3133, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900111           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3134, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900113           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3135, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900114           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3136, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900159           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3137, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900170           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3138, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900187           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3139, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900191           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3140, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900197           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3141, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900199           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3142, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900204           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3143, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900226           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3144, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900341           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3145, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900655           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3146, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900777           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3147, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'WC900794           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3148, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'T10101             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3149, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'T10102             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3150, N'15090J', N'HEALTH              ', N'MURRUMBIDGEE LOCAL HEALTH DISTRICT', N'T10103             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3151, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'T10055             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3152, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'WC900050           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3153, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'WC900189           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3154, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'WC900190           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3155, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'WC900192           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3156, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'WC900194           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3157, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'WC900195           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3158, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'WC900198           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3159, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'WC900200           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3160, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'WC900201           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3161, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'WC900203           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3162, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'WC900227           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3163, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'WC900229           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3164, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'WC900256           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3165, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'T10098             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3166, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'T10099             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3167, N'15090K', N'HEALTH              ', N'SOUTHERN NSW LOCAL HEALTH DISTRICT', N'T10100             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3168, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'T10065             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3169, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'T10088             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3170, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'T10089             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3171, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900116           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3172, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900117           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3173, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900119           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3174, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900120           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3175, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900121           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3176, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900122           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3177, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900123           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3178, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900124           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3179, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900125           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3180, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900126           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3181, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900127           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3182, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900130           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3183, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900131           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3184, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900132           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3185, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900133           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3186, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900136           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3187, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900137           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3188, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900138           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3189, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900160           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3190, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900161           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3191, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900162           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3192, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900163           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3193, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900164           ', N'3')
	
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3194, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900165           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3195, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900166           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3196, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900167           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3197, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900168           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3198, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900169           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3199, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900172           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3200, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900173           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3201, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900174           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3202, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900175           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3203, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900176           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3204, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900181           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3205, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900182           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3206, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900183           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3207, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900185           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3208, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900374           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3209, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900601           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3210, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900639           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3211, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900640           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3212, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900641           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3213, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900642           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3214, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900643           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3215, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900644           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3216, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900645           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3217, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900646           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3218, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900647           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3219, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900648           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3220, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900667           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3221, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900668           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3222, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900669           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3223, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900670           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3224, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900671           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3225, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900748           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3226, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900935           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3227, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900959           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3228, N'15090L', N'HEALTH              ', N'WESTERN NSW LOCAL DISTRICT', N'WC900975           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3229, N'15090M', N'HEALTH              ', N'FAR WEST LOCAL HEALTH DISTRICT', N'T10066             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3230, N'15090M', N'HEALTH              ', N'FAR WEST LOCAL HEALTH DISTRICT', N'WC900089           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3231, N'15090M', N'HEALTH              ', N'FAR WEST LOCAL HEALTH DISTRICT', N'WC900115           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3232, N'15090M', N'HEALTH              ', N'FAR WEST LOCAL HEALTH DISTRICT', N'WC900118           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3233, N'15090M', N'HEALTH              ', N'FAR WEST LOCAL HEALTH DISTRICT', N'WC900129           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3234, N'15090M', N'HEALTH              ', N'FAR WEST LOCAL HEALTH DISTRICT', N'WC900134           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3235, N'15090M', N'HEALTH              ', N'FAR WEST LOCAL HEALTH DISTRICT', N'WC900139           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3236, N'15090M', N'HEALTH              ', N'FAR WEST LOCAL HEALTH DISTRICT', N'WC900603           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3237, N'15090M', N'HEALTH              ', N'FAR WEST LOCAL HEALTH DISTRICT', N'WC900604           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3238, N'15090M', N'HEALTH              ', N'FAR WEST LOCAL HEALTH DISTRICT', N'WC900745           ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3239, N'15090M', N'HEALTH              ', N'FAR WEST LOCAL HEALTH DISTRICT', N'T10090             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3240, N'15090M', N'HEALTH              ', N'FAR WEST LOCAL HEALTH DISTRICT', N'T10091             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3241, N'15090R', N'HEALTH              ', N'CLINICAL SUPPORT CLUSTER', N'T10052             ', N'Miscellaneous')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3242, N'15090S', N'HEALTH              ', N'CLINICAL SUPPORT CLUSTER', N'T10053             ', N'Miscellaneous')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3243, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'T10023             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3244, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'T10025             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3245, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'T10026             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3246, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'T10027             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3247, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'T10050             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3248, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900080           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3249, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900196           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3250, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900259           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3251, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900345           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3252, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900349           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3253, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900441           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3254, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900444           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3255, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900502           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3256, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900503           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3257, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900504           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3258, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900535           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3259, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900654           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3260, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900673           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3261, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900679           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3262, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900751           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3263, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900776           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3264, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900778           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3265, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900779           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3266, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900783           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3267, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900793           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3268, N'15090U', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'WC900796           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3269, N'15090V', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'T10003             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3270, N'15090V', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'T10004             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3271, N'15090V', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'T10005             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3272, N'15090V', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'T10006             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3273, N'15090V', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'T10007             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3274, N'15090V', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'T10008             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3275, N'15090V', N'HEALTH              ', N'HEALTH REFORM TRANSITIONAL OFFICE', N'T10009             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3276, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'T10016             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3277, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'T10036             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3278, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'T10051             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3279, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'T10071             ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3280, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900339           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3281, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900342           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3282, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900343           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3283, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900346           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3284, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900348           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3285, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900365           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3286, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900383           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3287, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900384           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3288, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900435           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3289, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900450           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3290, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900474           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3291, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900487           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3292, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900523           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3293, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900586           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3294, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900602           ', N'2')
	
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3295, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900606           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3296, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900607           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3297, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900666           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3298, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900703           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3299, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900791           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3300, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900803           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3301, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900829           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3302, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900830           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3303, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900831           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3304, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900832           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3305, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900833           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3306, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900834           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3307, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900835           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3308, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900836           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3309, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900837           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3310, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900838           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3311, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900839           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3312, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900840           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3313, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900881           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3314, N'15090V', N'HEALTH              ', N'PATHOLOGY SERVICES', N'WC900906           ', N'2')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3315, N'15090W', N'HEALTH              ', N'ST VINCENT LOCAL HEALTH NETWORK', N'T10070             ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3316, N'15090W', N'HEALTH              ', N'ST VINCENT LOCAL HEALTH NETWORK', N'WC900078           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3317, N'15090W', N'HEALTH              ', N'ST VINCENT LOCAL HEALTH NETWORK', N'WC900081           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3318, N'15090W', N'HEALTH              ', N'ST VINCENT LOCAL HEALTH NETWORK', N'WC900249           ', N'1')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3319, N'15190C', N'HEALTH              ', N'ALBURY WODONGA HEALTH', N'T10035             ', N'3')
	INSERT [dbo].[TMF_Agencies_Sub_Category] ([Id], [AgencyId], [AgencyName], [Sub_Category], [POLICY_NO], [Group]) VALUES (3320, N'15190G', N'HEALTH              ', N'NSW SERVICE FOR THE TREATMENT AND REHABILITATION OF TORTURE AND TRAUMA SURVIVORS', N'T10079             ', N'1')
	SET IDENTITY_INSERT [dbo].[TMF_Agencies_Sub_Category] OFF
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\TMF_Agencies_Sub_Category.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\TMF_AWC.sql  
--------------------------------  
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TMF_AWC]') AND type in (N'U'))	
BEGIN
	IF COL_LENGTH('TMF_AWC','Group_') IS NULL
		BEGIN
			DROP TABLE TMF_AWC
		END	
END

IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TMF_AWC]') AND type in (N'U'))	
	BEGIN
		CREATE TABLE [dbo].[TMF_AWC](
		[Id] [int] IDENTITY(1,1) NOT NULL,
		[Time_ID] [datetime] NOT NULL,
		[Claim_no] [varchar](19) NULL,
		[Team] [varchar](20) NULL,
		[Case_manager] [varchar](81) NULL,
		[Date_of_Injury] [datetime] NULL,
		[create_date] [datetime]  DEFAULT GETDATE(),		
		[POLICY_NO] [char](19) NULL,
		[EMPL_SIZE] [varchar](256) NULL,
		[Cert_Type] [varchar](256) NULL,
		[Med_cert_From] [datetime] NULL,
		[Med_cert_To] [datetime] NULL,
		[Account_Manager] [varchar](256) NULL,
		[Cell_no] [tinyint] NULL,
		[Portfolio] [varchar](256) NULL
	 CONSTRAINT [PK_TMF_AWC_ID] PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
	) ON [PRIMARY]
	
	END
ELSE
	BEGIN		
		IF COL_LENGTH('TMF_AWC','Team') IS NULL
		BEGIN
			ALTER TABLE TMF_AWC
			ADD Team varchar(20) null
		END
		IF COL_LENGTH('TMF_AWC','Case_manager') IS NULL
		BEGIN
			ALTER TABLE TMF_AWC
			ADD Case_manager varchar(81) null
		END
		IF COL_LENGTH('TMF_AWC','POLICY_NO') IS NULL
		BEGIN
			ALTER TABLE TMF_AWC
			ADD POLICY_NO char(19) null
		END
		IF COL_LENGTH('TMF_AWC','Sub_Category') IS NULL
		BEGIN
			ALTER TABLE TMF_AWC
			ADD Sub_Category varchar(256) null
		END	
		IF COL_LENGTH('TMF_AWC','EMPL_SIZE') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_AWC]
			ADD EMPL_SIZE nchar(2) null
		END	
		IF COL_LENGTH('TMF_AWC','Cert_Type') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_AWC]
			ADD Cert_Type varchar(256) null
		END	
		IF COL_LENGTH('TMF_AWC','Med_cert_From') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_AWC]
			ADD Med_cert_From datetime null
		END	
		IF COL_LENGTH('TMF_AWC','Med_cert_To') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_AWC]
			ADD Med_cert_To datetime null
		END	
		IF COL_LENGTH('TMF_AWC','Account_Manager') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_AWC]
			ADD Account_Manager varchar(256) null
		END	
		IF COL_LENGTH('TMF_AWC','Cell_no') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_AWC]
			ADD Cell_no tinyint null
		END
		IF COL_LENGTH('TMF_AWC','Portfolio') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_AWC]
			ADD Portfolio varchar(256) null
		END
		IF COL_LENGTH('TMF_AWC','Group_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_AWC]
			DROP COLUMN Group_
		END
		IF COL_LENGTH('TMF_AWC','Team_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_AWC]
			DROP COLUMN Team_
		END
		IF COL_LENGTH('TMF_AWC','Case_manager_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_AWC]
			DROP COLUMN Case_manager_
		END
		IF COL_LENGTH('TMF_AWC','AgencyName') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_AWC]
			DROP COLUMN AgencyName
		END
		IF COL_LENGTH('TMF_AWC','Sub_Category') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_AWC]
			DROP COLUMN Sub_Category
		END
		IF COL_LENGTH('TMF_AWC','Agency_Id') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_AWC]
			DROP COLUMN Agency_Id
		END
		IF COL_LENGTH('TMF_AWC','Group') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_AWC]
			DROP COLUMN [Group]
		END
	END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\TMF_AWC.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\TMF_AWC_Projections.sql  
--------------------------------  
/****** Object:  Table [dbo].[TMF_AWC_Projections]    Script Date: 07/08/2013 08:24:30 ******/
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TMF_AWC_Projections]') AND type in (N'U'))	
BEGIN	
	CREATE TABLE [dbo].[TMF_AWC_Projections](
		[Id] [int] IDENTITY(1,1) NOT NULL,
		[Unit_Type] [varchar](20) NOT NULL,
		[Unit_Name] [varchar](256) NOT NULL,
		[Type] [varchar](20) NOT NULL,
		[Time_Id] [datetime] NOT NULL,
		[Projection] [float] NOT NULL,
	 CONSTRAINT [PK_TMF_AWC_Projections] PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
	) ON [PRIMARY]
	END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\TMF_AWC_Projections.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\TMF_Portfolio.sql  
--------------------------------  
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TMF_Portfolio]') AND type in (N'U'))	
	BEGIN
		CREATE TABLE [dbo].[TMF_Portfolio](				
			[Id] [int] IDENTITY(1,1) NOT NULL,
			[Team] [varchar](20) NULL,
			[Case_Manager] [varchar](81) NULL,
			[Policy_No] [char](19) NULL,
			[EMPL_SIZE] [varchar](256) NULL,			
			[Account_Manager] [varchar](256) NULL,			
			[Portfolio] [varchar](256) NULL,
			
			[Reporting_Date] [datetime] NOT NULL,			
			[Claim_No] [varchar](19) NULL,			
			[WIC_Code] [varchar](50) NULL,
			[Company_Name] [varchar](256) NULL,
			[Worker_Name] [varchar](256) NULL,
			[Employee_Number] [varchar](256) NULL,
			[Worker_Phone_Number] [varchar](256) NULL,
			[Claims_Officer_Name] [varchar](256) NULL,
			[Date_Of_Birth] [datetime] NULL,
			[Date_Of_Injury] [datetime] NULL,
			[Date_Of_Notification] [datetime] NULL,
			[Notification_Lag] [int] NULL,
			[Entered_Lag] [int] NULL,
			[Claim_Liability_Indicator_Group] [varchar](256) NULL,
			[Investigation_Incurred] [money] NULL,
			[Total_Paid] [money] NULL,			
			
			[Is_Time_Lost] [bit] NULL,	
			[Claim_Closed_Flag] [nchar](1)  NULL,	
			[Date_Claim_Entered] [datetime] NULL,	
			[Date_Claim_Closed] [datetime] NULL,
			[Date_Claim_Received] [datetime] NULL,
			[Date_Claim_Reopened] [datetime] NULL,			
			[Result_Of_Injury_Code] [int] NULL,			
			[WPI] [float] NULL,			
			[Common_Law] [bit] NULL,
			[Total_Recoveries] [float] NULL,			
			[Is_Working] [bit] NULL, ---1-->At Work,0 -->Not At Work
			[Physio_Paid] [float] NULL,
			[Chiro_Paid] [float] NULL,
			[Massage_Paid] [float] NULL,
			[Osteopathy_Paid] [float] NULL,
			[Acupuncture_Paid] [float] NULL,
			[Create_Date] [datetime]  DEFAULT GETDATE(),
			[Is_Stress] [bit] NULL,
			[Is_Inactive_Claims] [bit] NULL,
			[Is_Medically_Discharged] [bit] NULL,
			[Is_Exempt] [bit] NULL,
			[Is_Reactive] [bit] NULL,
			[Is_Medical_Only] [bit] NULL,
			[Is_D_D] [bit] NULL,
			[NCMM_Actions_This_Week] [varchar](256) NULL,
			[NCMM_Actions_Next_Week] [varchar](256) NULL,
			[HoursPerWeek] [numeric](5, 2) NULL,
			[Is_Industrial_Deafness] [bit] NULL,
			[Rehab_Paid] [float] NULL,
			
			[Action_Required] [nchar](1) NULL,
			[RTW_Impacting] [nchar](1) NULL,
			[Weeks_In] [int] NULL,
			[Weeks_Band] [varchar] (256) NULL,
			[Hindsight] [varchar] (256) NULL,
			[Active_Weekly] [nchar](1) NULL,
			[Active_Medical] [nchar](1) NULL,
			[Cost_Code] [char] (16) NULL,
			[Cost_Code2] [char] (16) NULL,
			[CC_Injury] [varchar] (256) NULL,
			[CC_Current] [varchar] (256) NULL,
			[Med_Cert_Status_This_Week] [varchar] (20) NULL,
			[Med_Cert_Status_Next_Week] [varchar] (20) NULL,
			[Capacity] [varchar] (256) NULL,
			[Entitlement_Weeks] [numeric](5, 1) NULL,
			[Med_Cert_Status_Prev_1_Week] [varchar](20) NULL,
			[Med_Cert_Status_Prev_2_Week] [varchar](20) NULL,
			[Med_Cert_Status_Prev_3_Week] [varchar](20) NULL,
			[Med_Cert_Status_Prev_4_Week] [varchar](20) NULL,
			[Is_Last_Month] [bit] NULL,
			IsPreClosed [bit] NULL,
			IsPreOpened [bit] NULL
		 CONSTRAINT [PK_TMF_Portfolio_ID] PRIMARY KEY CLUSTERED
		(
			[Id] ASC
		)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
		) ON [PRIMARY]
		
	END
ELSE
	-- Update Users table schema
	IF COL_LENGTH('TMF_Portfolio','Is_Last_Month') IS NULL
	BEGIN	
		ALTER TABLE [dbo].[TMF_Portfolio]
		ADD Is_Last_Month bit NULL	
	END
	IF COL_LENGTH('TMF_Portfolio','Agency_Name') IS NOT NULL
	BEGIN	
		ALTER TABLE [dbo].[TMF_Portfolio]
		DROP COLUMN Agency_Name
	END
	IF COL_LENGTH('TMF_Portfolio','Sub_Category') IS NOT NULL
	BEGIN	
		ALTER TABLE [dbo].[TMF_Portfolio]
		DROP COLUMN Sub_Category
	END
	IF COL_LENGTH('TMF_Portfolio','Agency_Id') IS NOT NULL
	BEGIN	
		ALTER TABLE [dbo].[TMF_Portfolio]
		DROP COLUMN Agency_Id
	END
	IF COL_LENGTH('TMF_Portfolio','Group') IS NOT NULL
	BEGIN	
		ALTER TABLE [dbo].[TMF_Portfolio]
		DROP COLUMN [Group]
	END
	IF COL_LENGTH('TMF_Portfolio','IsPreClosed') IS NULL
	BEGIN	
		ALTER TABLE [dbo].[TMF_Portfolio]
		ADD IsPreClosed bit NULL	
	END	
	IF COL_LENGTH('TMF_Portfolio','IsPreOpened') IS NULL
	BEGIN	
		ALTER TABLE [dbo].[TMF_Portfolio]
		ADD IsPreOpened bit NULL	
	END	
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\TMF_Portfolio.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\TMF_RTW.sql  
--------------------------------  
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TMF_RTW]') AND type in (N'U'))	
	BEGIN
		CREATE TABLE [dbo].[TMF_RTW](
			[Id] [int] IDENTITY(1,1) NOT NULL,
			[Remuneration_Start] [datetime] NULL,
			[Remuneration_End] [datetime] NULL,
			[Measure_months] [bigint] NULL,
			[Team] [varchar](20) NULL,
			[Case_manager] [varchar](81) NULL,
			[Claim_no] [varchar](20) NULL,
			[DTE_OF_INJURY] [datetime] NULL,
			[POLICY_NO] [char](19) NULL,
			[LT] [float] NULL,
			[WGT] [float] NULL,
			[EMPL_SIZE] [varchar](256) NULL,
			[Weeks_paid][float] NULL,
			[create_date] [datetime]  DEFAULT GETDATE(),
			[Measure] [int] NULL,
			[Cert_Type] [varchar](256) NULL,
			[Med_cert_From] [datetime] NULL,
			[Med_cert_To] [datetime] NULL,
			[Account_Manager] [varchar](256) NULL,
			[Cell_no] [tinyint] NULL,
			[Portfolio] [varchar](256) NULL,
			[Stress] [varchar](256) NULL,
			[Liability_Status] [varchar](256) NULL,
			[cost_code] [varchar](256) NULL,
			[cost_code2] [varchar](256) NULL,
			[Claim_Closed_flag] [varchar] (256) NULL
		 CONSTRAINT [PK_TMF_RTW_MEASURE] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
		) ON [PRIMARY]	
		
	END
ELSE
	BEGIN
		IF COL_LENGTH('TMF_RTW','Cert_Type') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			ADD Cert_Type varchar(256) null
		END	
		IF COL_LENGTH('TMF_RTW','Med_cert_From') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			ADD Med_cert_From datetime null
		END	
		IF COL_LENGTH('TMF_RTW','Med_cert_To') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			ADD Med_cert_To datetime null
		END	
		IF COL_LENGTH('TMF_RTW','Account_Manager') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			ADD Account_Manager varchar(256) null
		END	
		IF COL_LENGTH('TMF_RTW','Cell_no') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			ADD Cell_no tinyint null
		END
		IF COL_LENGTH('TMF_RTW','Portfolio') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			ADD Portfolio varchar(256) null
		END
		
		IF COL_LENGTH('TMF_RTW','Stress') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			ADD Stress varchar(256) null
		END	
		IF COL_LENGTH('TMF_RTW','Liability_Status') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			ADD Liability_Status varchar(256) null
		END	
		IF COL_LENGTH('TMF_RTW','cost_code') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			ADD cost_code varchar(256) null
		END	
		IF COL_LENGTH('TMF_RTW','cost_code2') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			ADD cost_code2 varchar(256) null
		END	
		IF COL_LENGTH('TMF_RTW','Claim_Closed_flag') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			ADD Claim_Closed_flag varchar(256) null
		END	
		IF COL_LENGTH('TMF_RTW','Group_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			DROP COLUMN Group_
		END
		IF COL_LENGTH('TMF_RTW','Team_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			DROP COLUMN Team_
		END
		IF COL_LENGTH('TMF_RTW','Case_manager_') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			DROP COLUMN Case_manager_
		END
		IF COL_LENGTH('TMF_RTW','AgencyName') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			DROP COLUMN AgencyName
		END
		IF COL_LENGTH('TMF_RTW','Sub_Category') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			DROP COLUMN Sub_Category
		END
		IF COL_LENGTH('TMF_RTW','Agency_Id') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			DROP COLUMN Agency_Id
		END
		IF COL_LENGTH('TMF_RTW','Group') IS NOT NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW]
			DROP COLUMN [Group]
		END
	END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\TMF_RTW.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\TMF_RTW_Target_Base.sql  
--------------------------------  
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TMF_RTW_Target_Base]') AND type in (N'U'))	
	BEGIN
		CREATE TABLE [dbo].[TMF_RTW_Target_Base](
			[Id] [int] IDENTITY(1,1) NOT NULL,
			[Type] [varchar](20) NOT NULL,
			[Value] [varchar](256) NULL,
			[Sub_Value] [varchar](256) NULL,
			[Measure] [int] NULL,
			[Target] [float] NULL,
			[Base] [float] NULL,
			[UpdatedBy] [int] NULL,
			[Create_Date] [datetime] NULL,
			[Status] [smallint] NULL,
			[Remuneration] varchar(20)
		 CONSTRAINT [PK_TMF_RTW_Target_Base] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
		) ON [PRIMARY]	
	END
ELSE
	BEGIN	
		IF COL_LENGTH('TMF_RTW_Target_Base','Remuneration') IS NULL
		BEGIN	
			ALTER TABLE [dbo].[TMF_RTW_Target_Base]
			ADD Remuneration nvarchar(20) null
		END		
	END	


GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\TMF_RTW_Target_Base.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\WOW_Portfolio.sql  
--------------------------------  
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[WOW_Portfolio]') AND type in (N'U'))	
BEGIN
	CREATE TABLE [dbo].[WOW_Portfolio](
		[Id] [int] IDENTITY(1,1) NOT NULL,
		[Case_Manager] [varchar](81) NULL,
		[Reporting_Date] [datetime] NOT NULL,
		[Claim_No] [varchar](19) NULL,
		[Company_Name] [varchar](256) NULL,
		[Worker_Name] [varchar](256) NULL,
		[Employee_Number] [varchar](256) NULL,
		[Worker_Phone_Number] [varchar](256) NULL,
		[Date_Of_Birth] [datetime] NULL,
		[Date_Of_Injury] [datetime] NULL,
		[Total_Paid] [money] NULL,
		[Date_Claim_Closed] [datetime] NULL,
		[Date_Claim_Received] [datetime] NULL,
		[Date_Claim_Reopened] [datetime] NULL,
		[Result_Of_Injury_Code] [int] NULL,
		[Create_Date] [datetime] NULL,
		[NCMM_Actions_This_Week] [varchar](256) NULL,
		[NCMM_Actions_Next_Week] [varchar](256) NULL,
		[Action_Required] [nchar](1) NULL,
		[Weeks_In] [int] NULL,
		[Weeks_Band] [varchar](256) NULL,
		[Hindsight] [varchar](256) NULL,
		[Is_Last_Month] [bit] NULL,
	 CONSTRAINT [PK_WOW_Portfolio] PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
	) ON [PRIMARY]
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\SchemaChange\WOW_Portfolio.sql  
--------------------------------  
---------------------------------------------------------- 
------------------- UserDefinedFunction 
---------------------------------------------------------- 
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_CPR_Overall.sql  
--------------------------------  
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[udf_CPR_Overall]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	DROP FUNCTION [dbo].[udf_CPR_Overall]
GO

/****** Object:  UserDefinedFunction [dbo].[udf_CPR_Overall]    Script Date: 08/01/2014 11:30:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

CREATE FUNCTION [dbo].[udf_CPR_Overall](@System varchar(20), @Type VARCHAR(20), @Is_Last_Month bit)
RETURNS @port_overall TABLE(
	[Value] [varchar](256) NULL,
	[SubValue] [varchar](256) NULL,
	[SubValue2] [varchar](256) NULL,
	[Claim_No] [varchar](19) NULL,
	[Date_Of_Injury] [datetime] NULL,
	[Claim_Liability_Indicator_Group] [varchar](256) NULL,
	[Is_Time_Lost] [bit] NULL,
	[Claim_Closed_Flag] [nchar](1) NULL,
	[Date_Claim_Entered] [datetime] NULL,
	[Date_Claim_Closed] [datetime] NULL,
	[Date_Claim_Received] [datetime] NULL,
	[Date_Claim_Reopened] [datetime] NULL,
	[Result_Of_Injury_Code] [int] NULL,
	[WPI] [float] NULL,
	[Common_Law] [bit] NULL,
	[Total_Recoveries] [float] NULL,
	[Med_Cert_Status] [varchar](20) NULL,
	[Is_Working] [bit] NULL,
	[Physio_Paid] [float] NULL,
	[Chiro_Paid] [float] NULL,
	[Massage_Paid] [float] NULL,
	[Osteopathy_Paid] [float] NULL,
	[Acupuncture_Paid] [float] NULL,
	[Is_Stress] [bit] NULL,
	[Is_Inactive_Claims] [bit] NULL,
	[Is_Medically_Discharged] [bit] NULL,
	[Is_Exempt] [bit] NULL,
	[Is_Reactive] [bit] NULL,
	[Is_Medical_Only] [bit] NULL,
	[Is_D_D] [bit] NULL,
	[NCMM_Actions_This_Week] [varchar](256) NULL,
	[NCMM_Actions_Next_Week] [varchar](256) NULL,
	[HoursPerWeek] [numeric](5, 2) NULL,
	[Is_Industrial_Deafness] [bit] NULL,
	[Rehab_Paid] [float] NULL,
	[IsPreClosed] [bit] NULL,
	[IsPreOpened] [bit] NULL)
AS
BEGIN	
	IF UPPER(@System) = 'TMF'
	BEGIN
		INSERT @port_overall
		SELECT Value=RTRIM(case when @Type='agency' then rtrim(isnull(sub.AgencyName,'Miscellaneous')) else dbo.udf_TMF_GetGroupByTeam(Team) end)
			,SubValue=RTRIM(case when @Type='agency' then rtrim(isnull(sub.Sub_Category,'Miscellaneous')) else [Team] end)
			,SubValue2=RTRIM([Claims_Officer_Name])
			,[Claim_No],[Date_Of_Injury],[Claim_Liability_Indicator_Group],[Is_Time_Lost]
			,[Claim_Closed_Flag],[Date_Claim_Entered],[Date_Claim_Closed],[Date_Claim_Received]
			,[Date_Claim_Reopened],[Result_Of_Injury_Code],[WPI],[Common_Law],[Total_Recoveries]
			,[Med_Cert_Status_This_Week],[Is_Working],[Physio_Paid],[Chiro_Paid],[Massage_Paid],[Osteopathy_Paid]
			,[Acupuncture_Paid],[Is_Stress],[Is_Inactive_Claims],[Is_Medically_Discharged],[Is_Exempt]
			,[Is_Reactive],[Is_Medical_Only],[Is_D_D],[NCMM_Actions_This_Week],[NCMM_Actions_Next_Week]
			,[HoursPerWeek],[Is_Industrial_Deafness],[Rehab_Paid],[IsPreClosed],[IsPreOpened]
			FROM TMF_Portfolio uv left join TMF_Agencies_Sub_Category sub on sub.POLICY_NO = uv.Policy_No
			WHERE ISNULL(Is_Last_Month, 0) = @Is_Last_Month
				AND Reporting_Date = (select MAX(Reporting_Date) from TMF_Portfolio)
	END
	ELSE IF UPPER(@System) = 'EML'
	BEGIN
		INSERT @port_overall
		SELECT Value=RTRIM(case when @Type='employer_size' then [EMPL_SIZE] when @Type='group' then dbo.udf_EML_GetGroupByTeam(Team) else [account_manager] end)
			,SubValue=RTRIM(case when @Type='group' then [Team] else [EMPL_SIZE] end)
			,SubValue2=RTRIM([Claims_Officer_Name])
			,[Claim_No],[Date_Of_Injury],[Claim_Liability_Indicator_Group],[Is_Time_Lost]
			,[Claim_Closed_Flag],[Date_Claim_Entered],[Date_Claim_Closed],[Date_Claim_Received]
			,[Date_Claim_Reopened],[Result_Of_Injury_Code],[WPI],[Common_Law],[Total_Recoveries]
			,[Med_Cert_Status_This_Week],[Is_Working],[Physio_Paid],[Chiro_Paid],[Massage_Paid],[Osteopathy_Paid]
			,[Acupuncture_Paid],[Is_Stress],[Is_Inactive_Claims],[Is_Medically_Discharged],[Is_Exempt]
			,[Is_Reactive],[Is_Medical_Only],[Is_D_D],[NCMM_Actions_This_Week],[NCMM_Actions_Next_Week]
			,[HoursPerWeek],[Is_Industrial_Deafness],[Rehab_Paid],[IsPreClosed],[IsPreOpened]
			FROM EML_Portfolio
			WHERE ISNULL(Is_Last_Month, 0) = @Is_Last_Month
				AND Reporting_Date = (select MAX(Reporting_Date) from EML_Portfolio)
	END
	ELSE IF UPPER(@System) = 'HEM'
	BEGIN
		INSERT @port_overall
		SELECT Value=RTRIM(case when @Type='account_manager' then [Account_Manager] when @Type = 'portfolio' then [portfolio] else dbo.udf_HEM_GetGroupByTeam(Team) end)
			,SubValue=RTRIM(case when @Type='account_manager' or @Type = 'portfolio' then [EMPL_SIZE] else [Team] end)
			,SubValue2=RTRIM([Claims_Officer_Name])
			,[Claim_No],[Date_Of_Injury],[Claim_Liability_Indicator_Group],[Is_Time_Lost]
			,[Claim_Closed_Flag],[Date_Claim_Entered],[Date_Claim_Closed],[Date_Claim_Received]
			,[Date_Claim_Reopened],[Result_Of_Injury_Code],[WPI],[Common_Law],[Total_Recoveries]
			,[Med_Cert_Status_This_Week],[Is_Working],[Physio_Paid],[Chiro_Paid],[Massage_Paid],[Osteopathy_Paid]
			,[Acupuncture_Paid],[Is_Stress],[Is_Inactive_Claims],[Is_Medically_Discharged],[Is_Exempt]
			,[Is_Reactive],[Is_Medical_Only],[Is_D_D],[NCMM_Actions_This_Week],[NCMM_Actions_Next_Week]
			,[HoursPerWeek],[Is_Industrial_Deafness],[Rehab_Paid],[IsPreClosed],[IsPreOpened]
			FROM HEM_Portfolio
			WHERE ISNULL(Is_Last_Month, 0) = @Is_Last_Month
				AND Reporting_Date = (select MAX(Reporting_Date) from HEM_Portfolio)
	END
	RETURN;
END
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_CPR_Overall.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_CPR_Raw.sql  
--------------------------------  
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[udf_CPR_Raw]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	DROP FUNCTION [dbo].[udf_CPR_Raw]
GO

/****** Object:  UserDefinedFunction [dbo].[udf_CPR_Raw]    Script Date: 08/01/2014 11:30:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

-- Period_Type: 1 = last month, 0 = last 2 weeks, -1 = other range
CREATE FUNCTION [dbo].[udf_CPR_Raw](@System varchar(20), @End_Date Datetime, @Period_Type smallint)

RETURNS @port_overall TABLE(
	[System] [nvarchar] (50) NULL,
	[Med_Cert_Status] [nvarchar] (50) NULL,	
	[Agency_Name] [nvarchar] (256) NULL,
	[Sub_Category] [nvarchar] (256) NULL,
	[Group] [nvarchar] (256) NULL,
	[Agency_Id] [nvarchar] (256) ,
	
	[Id] [int] NOT NULL,
	[Team] [varchar](20) NULL,
	[Case_Manager] [varchar](81) NULL,
	[Policy_No] [char](19) NULL,
	[EMPL_SIZE] [varchar](256) NULL,			
	[Account_Manager] [varchar](256) NULL,			
	[Portfolio] [varchar](256) NULL,
	
	[Reporting_Date] [datetime] NOT NULL,			
	[Claim_No] [varchar](19) NULL,			
	[WIC_Code] [varchar](50) NULL,
	[Company_Name] [varchar](256) NULL,
	[Worker_Name] [varchar](256) NULL,
	[Employee_Number] [varchar](256) NULL,
	[Worker_Phone_Number] [varchar](256) NULL,
	[Claims_Officer_Name] [varchar](256) NULL,
	[Date_Of_Birth] [datetime] NULL,
	[Date_Of_Injury] [datetime] NULL,
	[Date_Of_Notification] [datetime] NULL,
	[Notification_Lag] [int] NULL,
	[Entered_Lag] [int] NULL,
	[Claim_Liability_Indicator_Group] [varchar](256) NULL,
	[Investigation_Incurred] [money] NULL,
	[Total_Paid] [money] NULL,			
	
	[Is_Time_Lost] [bit] NULL,	
	[Claim_Closed_Flag] [nchar](1)  NULL,	
	[Date_Claim_Entered] [datetime] NULL,	
	[Date_Claim_Closed] [datetime] NULL,
	[Date_Claim_Received] [datetime] NULL,
	[Date_Claim_Reopened] [datetime] NULL,			
	[Result_Of_Injury_Code] [int] NULL,			
	[WPI] [float] NULL,			
	[Common_Law] [bit] NULL,
	[Total_Recoveries] [float] NULL,			
	[Is_Working] [bit] NULL, ---1-->At Work,0 -->Not At Work
	[Physio_Paid] [float] NULL,
	[Chiro_Paid] [float] NULL,
	[Massage_Paid] [float] NULL,
	[Osteopathy_Paid] [float] NULL,
	[Acupuncture_Paid] [float] NULL,
	[Create_Date] [datetime]  DEFAULT GETDATE(),
	[Is_Stress] [bit] NULL,
	[Is_Inactive_Claims] [bit] NULL,
	[Is_Medically_Discharged] [bit] NULL,
	[Is_Exempt] [bit] NULL,
	[Is_Reactive] [bit] NULL,
	[Is_Medical_Only] [bit] NULL,
	[Is_D_D] [bit] NULL,
	[NCMM_Actions_This_Week] [varchar](256) NULL,
	[NCMM_Actions_Next_Week] [varchar](256) NULL,
	[HoursPerWeek] [numeric](5, 2) NULL,
	[Is_Industrial_Deafness] [bit] NULL,
	[Rehab_Paid] [float] NULL,
	
	[Action_Required] [nchar](1) NULL,
	[RTW_Impacting] [nchar](1) NULL,
	[Weeks_In] [int] NULL,
	[Weeks_Band] [varchar] (256) NULL,
	[Hindsight] [varchar] (256) NULL,
	[Active_Weekly] [nchar](1) NULL,
	[Active_Medical] [nchar](1) NULL,
	[Cost_Code] [char] (16) NULL,
	[Cost_Code2] [char] (16) NULL,
	[CC_Injury] [varchar] (256) NULL,
	[CC_Current] [varchar] (256) NULL,
	[Med_Cert_Status_This_Week] [varchar] (20) NULL,
	[Med_Cert_Status_Next_Week] [varchar] (20) NULL,
	[Capacity] [varchar] (256) NULL,
	[Entitlement_Weeks] [numeric](5, 1) NULL,
	[Med_Cert_Status_Prev_1_Week] [varchar](20) NULL,
	[Med_Cert_Status_Prev_2_Week] [varchar](20) NULL,
	[Med_Cert_Status_Prev_3_Week] [varchar](20) NULL,
	[Med_Cert_Status_Prev_4_Week] [varchar](20) NULL,
	[Is_Last_Month] [bit] NULL,
	IsPreClosed [bit] NULL,
	IsPreOpened [bit] NULL,
	[Grouping] [nvarchar] (256) NULL
)
AS
BEGIN	
	IF UPPER(@System) = 'TMF'
	BEGIN
		INSERT @port_overall
		SELECT * from [dbo].[uv_PORT] where [system] = 'TMF'
			and	
					(
						CASE WHEN @Period_Type = -1
								THEN
									0
								ELSE
									@Period_Type
						END
					) = ISNULL(Is_Last_Month, 0)
					AND
					(
						CASE WHEN @Period_Type = -1
								THEN
									(select top 1 Reporting_Date from TMF_Portfolio
										where CONVERT(datetime, Reporting_Date, 101) 
											>= CONVERT(datetime, @End_Date, 101) order by Reporting_Date)
								ELSE
									(select MAX(Reporting_Date) from TMF_Portfolio)
						END
					) = Reporting_Date
	END
	ELSE IF UPPER(@System) = 'EML'
	BEGIN
		INSERT @port_overall
		SELECT * from [dbo].[uv_PORT] where [system] = 'EML'
			and	
					(
						CASE WHEN @Period_Type = -1
								THEN
									0
								ELSE
									@Period_Type
						END
					) = ISNULL(Is_Last_Month, 0)
					AND
					(
						CASE WHEN @Period_Type = -1
								THEN
									(select top 1 Reporting_Date from EML_Portfolio
										where CONVERT(datetime, Reporting_Date, 101) 
											>= CONVERT(datetime, @End_Date, 101) order by Reporting_Date)
								ELSE
									(select MAX(Reporting_Date) from EML_Portfolio)
						END
					) = Reporting_Date
	END
	ELSE IF UPPER(@System) = 'HEM'
	BEGIN
		INSERT @port_overall
		select * from [dbo].[uv_PORT] where [system] = 'HEM'
			and		
					(
						CASE WHEN @Period_Type = -1
								THEN
									0
								ELSE
									@Period_Type
						END
					) = ISNULL(Is_Last_Month, 0)
					AND
					(
						CASE WHEN @Period_Type = -1
								THEN
									(select top 1 Reporting_Date from HEM_Portfolio
										where CONVERT(datetime, Reporting_Date, 101) 
											>= CONVERT(datetime, @End_Date, 101) order by Reporting_Date)
								ELSE
									(select MAX(Reporting_Date) from HEM_Portfolio)
						END
					) = Reporting_Date
	END
	RETURN;
END
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_CPR_Raw.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_dashboard_EML_RTW_getTargetAndBase.sql  
--------------------------------  
/****** Object:  UserDefinedFunction [dbo].[udf_dashboard_EML_RTW_getTargetAndBase]    Script Date: 02/21/2013 11:06:46 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[udf_dashboard_EML_RTW_getTargetAndBase]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[udf_dashboard_EML_RTW_getTargetAndBase]
GO


/****** Object:  UserDefinedFunction [dbo].[udf_dashboard_EML_RTW_getTargetAndBase]    Script Date: 02/21/2013 11:06:46 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

create FUNCTION [dbo].[udf_dashboard_EML_RTW_getTargetAndBase](@rem_end datetime, @item varchar(20), @type varchar(20), @value varchar(20), @sub_value varchar(20), @measure int)
	returns FLOAT
as
BEGIN
	Declare @target float,@base float, @count int
	
	SELECT  @target = min(isnull(tb.[Target], 0)),@base = min(isnull(tb.[base], 0)),@count = count(*)
	FROM [EML_RTW_Target_Base] tb 
	WHERE 
	(([Type] = @type AND [Value] = @value)
	OR ([Value] = @value AND @value = 'eml'))
	AND ISNULL([Sub_Value], '') = ISNULL(@sub_value, '')
	AND [Measure] = @measure and Remuneration= (cast(year(@rem_end) AS varchar) 
                      + 'M' + CASE WHEN MONTH(@rem_end) <= 9 THEN '0' ELSE '' END 
                      + cast(month(@rem_end) AS varchar))	
	
	IF @COUNT = 0 OR @target = 0 OR @base = 0
	BEGIN		
		SELECT @target = min(tb.[Target]), @base = min(tb.[base])
		FROM [EML_RTW_Target_Base] tb 
		WHERE [Value] = 'eml'		
		AND [Measure] = @measure and Remuneration= (cast(year(@rem_end) AS varchar) 
                      + 'M' + CASE WHEN MONTH(@rem_end) <= 9 THEN '0' ELSE '' END 
                      + cast(month(@rem_end) AS varchar))						
	END
	
	IF @item = 'target' 
	BEGIN
		RETURN @target
	END 

	IF @item = 'base' 
	BEGIN
		RETURN @base
	END
	RETURN 0
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_dashboard_EML_RTW_getTargetAndBase.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_dashboard_HEM_RTW_getTargetAndBase.sql  
--------------------------------  
/****** Object:  UserDefinedFunction [dbo].[[udf_dashboard_HEM_RTW_getTargetAndBase]]    Script Date: 02/21/2013 11:06:46 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[udf_dashboard_HEM_RTW_getTargetAndBase]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[udf_dashboard_HEM_RTW_getTargetAndBase]
GO
/****** Object:  UserDefinedFunction [dbo].[udf_dashboard_HEM_RTW_getTargetAndBase]    Script Date: 01/27/2014 09:51:50 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

CREATE FUNCTION [dbo].[udf_dashboard_HEM_RTW_getTargetAndBase](@rem_end datetime, @item varchar(20), @type varchar(20), @value varchar(20), @sub_value varchar(20), @measure int)
	returns FLOAT
as
BEGIN
	Declare @target float,@base float, @count int
	
	SELECT  @target = min(isnull(tb.[Target], 0))
		   ,@base = min(isnull(tb.[base], 0))
		   ,@count = count(*)
	FROM [HEM_RTW_Target_Base] tb 
	WHERE (([Type] = @type AND [Value] = @value) OR ([Value] = @value AND @value = 'Hospitality'))
		   AND ISNULL([Sub_Value], '') = ISNULL(@sub_value, '')
			AND [Measure] = @measure and Remuneration= (cast(year(@rem_end) AS varchar) 
                      + 'M' + CASE WHEN MONTH(@rem_end) <= 9 THEN '0' ELSE '' END 
                      + cast(month(@rem_end) AS varchar))
	
	IF @COUNT = 0 OR @target = 0 OR @base = 0
	BEGIN		
		SELECT @target = min(tb.[Target]), @base = min(tb.[base])
		FROM [HEM_RTW_Target_Base] tb 
		WHERE [Value] = 'Hospitality'
		AND [Measure] = @measure and Remuneration= (cast(year(@rem_end) AS varchar) 
                      + 'M' + CASE WHEN MONTH(@rem_end) <= 9 THEN '0' ELSE '' END 
                      + cast(month(@rem_end) AS varchar))
	END
	
	IF @item = 'target' 
	BEGIN
		RETURN @target
	END 

	IF @item = 'base' 
	BEGIN
		RETURN @base
	END
	RETURN 0
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO

--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_dashboard_HEM_RTW_getTargetAndBase.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_dashboard_TMF_RTW_getTargetAndBase.sql  
--------------------------------  
/****** Object:  UserDefinedFunction [dbo].[udf_dashboard_TMF_RTW_getTargetAndBase]    Script Date: 02/21/2013 11:06:46 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[udf_dashboard_TMF_RTW_getTargetAndBase]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[udf_dashboard_TMF_RTW_getTargetAndBase]
GO


/****** Object:  UserDefinedFunction [dbo].[udf_dashboard_TMF_RTW_getTargetAndBase]    Script Date: 02/21/2013 11:06:46 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

create FUNCTION [dbo].[udf_dashboard_TMF_RTW_getTargetAndBase](@rem_end datetime, @item varchar(20), @type varchar(20), @value varchar(20), @sub_value varchar(20), @measure int)
	returns FLOAT
as
BEGIN
	Declare @target float,@base float, @count int
	
	SELECT @target = min(isnull(tb.[Target], 0)), @base = min(isnull(tb.[base], 0)), @count = count(*)
	FROM [TMF_RTW_Target_Base] tb 
	WHERE 
	(([Type] = @type AND [Value] = @value)
	OR ([Value] = @value AND @value = 'tmf'))
	AND ISNULL([Sub_Value], '') = ISNULL(@sub_value, '')
	AND [Measure] = @measure and Remuneration= (cast(year(@rem_end) AS varchar) 
                      + 'M' + CASE WHEN MONTH(@rem_end) <= 9 THEN '0' ELSE '' END 
                      + cast(month(@rem_end) AS varchar))
	
	IF @COUNT = 0 OR @target = 0 OR @base = 0
	BEGIN	
		
		SELECT @target = min(tb.[Target]), @base = min(tb.[base])
		FROM [TMF_RTW_Target_Base] tb 
		WHERE [Value] = 'tmf'		
		AND [Measure] = @measure and Remuneration= (cast(year(@rem_end) AS varchar) 
                      + 'M' + CASE WHEN MONTH(@rem_end) <= 9 THEN '0' ELSE '' END 
                      + cast(month(@rem_end) AS varchar))			
	END
	
	IF @item = 'target' 
	BEGIN
		RETURN @target
	END 

	IF @item = 'base' 
	BEGIN
		RETURN @base
	END
	RETURN 0
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_dashboard_TMF_RTW_getTargetAndBase.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_EML_AWC_Generate_Time_ID.sql  
--------------------------------  
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[udf_EML_AWC_Generate_Time_ID]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	DROP FUNCTION [dbo].[udf_EML_AWC_Generate_Time_ID]
GO

/****** Object:  UserDefinedFunction [dbo].[udf_EML_AWC_Generate_Time_ID]    Script Date: 12/30/2013 17:12:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

CREATE function [dbo].[udf_EML_AWC_Generate_Time_ID](@Type varchar(20),@WeeklyType varchar(20))
RETURNS TABLE 
AS
RETURN 
(	
    WITH temp AS
	(
		--SELECT CAST('01/01/' + cast(year(getdate()) AS varchar(4)) + ' 23:59' AS DATETIME) Time_Id
		--UNION ALL
		--SELECT DATEADD(m, 1, Time_Id)
		--FROM temp WHERE Time_Id < CAST('06/01/' + cast(year(getdate())+1 AS varchar(4)) + ' 23:59' AS DATETIME)
		SELECT CAST('01/01/' + cast(year(getdate()) AS varchar(4)) AS DATETIME) Time_Id
		UNION ALL
		SELECT DATEADD(m, 1, Time_Id)
		FROM temp WHERE Time_Id < CAST('06/01/' + cast(year(getdate())+1 AS varchar(4)) AS DATETIME)
	)

	select  [Type] =@Type
			,uv_Unit.Unit
			,uv_Unit.[Primary]
			,WeeklyType = @WeeklyType
			--,Time_Id =temp.Time_Id
			,Time_Id = dateadd(dd, -1, dateadd(mm, 1, temp.Time_Id)) + '23:59'
		    ,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' 
							+ RIGHT(datename(year, Time_Id), 2)
		    ,Actual = 0
		    ,Projection =(select ISNULL(sum(Projection), 0)
								 from dbo.eml_awc_Projections 
								 where [Type] =@WeeklyType 
								 and Unit_Type=@Type 
								 and RTRIM(Unit_Name)=uv_Unit.Unit 
								 and year(Time_Id)=Year(temp.Time_Id) 
								 and month(Time_Id)=month(temp.Time_Id))
	from temp
	cross join
	(
		SELECT  distinct 
			case 
				when @Type = 'eml' then 'EML'
				when @Type = 'employer_size' then RTRIM(Empl_Size)
				when @Type = 'account_manager' then RTRIM(Account_Manager)
				when @Type = 'team' then RTRIM(Team)
				when @Type = 'am_empl_size' then RTRIM(Empl_Size)
				else dbo.udf_EML_GetGroupByTeam(Team) end as Unit,
			case 
				when @Type = 'eml' then 'EML'
				when @Type = 'employer_size' then RTRIM(Empl_Size)
				when @Type = 'account_manager' then RTRIM(Account_Manager)
				when @Type = 'team' then dbo.udf_EML_GetGroupByTeam(Team)
				when @Type = 'am_empl_size' then RTRIM(Account_Manager)
				else dbo.udf_EML_GetGroupByTeam(Team) end as [Primary]
		FROM   eml_awc where RTRIM(Account_Manager) is not null
	) as uv_Unit
)

GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_EML_AWC_Generate_Time_ID.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_EML_GetGroupByTeam.sql  
--------------------------------  
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].udf_EML_GetGroupByTeam') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	DROP FUNCTION [dbo].udf_EML_GetGroupByTeam
GO

/****** Object:  UserDefinedFunction [dbo].udf_EML_GetGroupByTeam    Script Date: 01/05/2015 11:08:20 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

CREATE function [dbo].udf_EML_GetGroupByTeam(@Team varchar(20))
	returns varchar(20)	 
AS
	BEGIN
		RETURN CASE WHEN (RTRIM(ISNULL(@Team,''))='') OR (@Team NOT LIKE 'wcnsw%' or PATINDEX('WCNSW', RTRIM(@Team))>0)
						THEN 'Miscellaneous'
					WHEN PATINDEX('WCNSW%', @Team) = 0 
						THEN Left(UPPER(RTRIM(@Team)), 1) + Right(LOWER(RTRIM(@Team)), LEN(RTRIM(@Team))-1)
					WHEN RTRIM(@Team) = 'WCNSW'
						THEN 'WCNSW(Group)'
					ELSE SUBSTRING(Left(UPPER(RTRIM(@Team)), 1) + Right(LOWER(RTRIM(@Team)), LEN(RTRIM(@Team))-1), 1, 
							CASE WHEN PATINDEX('%[A-Z]%', SUBSTRING(RTRIM(@Team), 6, LEN(RTRIM(@Team)) - 5)) > 0 
									THEN (PATINDEX('%[A-Z]%', SUBSTRING(RTRIM(@Team), 6, LEN(RTRIM(@Team)) - 5)) + 4) 
								ELSE LEN(RTRIM(@Team))
							END)
				END
	END 
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_EML_GetGroupByTeam.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_GetAgencyNameByPolicyNo.sql  
--------------------------------  
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].udf_GetAgencyNameByPolicyNo') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].udf_GetAgencyNameByPolicyNo
GO

/****** Object:  UserDefinedFunction [dbo].udf_GetAgencyNameByPolicyNo    Script Date: 02/21/2013 11:08:20 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO
--select dbo.udf_GetAgencyNameByPolicyNo('gdfgdfg')
CREATE function [dbo].udf_GetAgencyNameByPolicyNo(@Policy_no char(19))
	returns char(20)
as
begin
	declare @AgencyName char(20)
	select @AgencyName =  AgencyName from dbo.TMF_Agencies_Sub_Category where Policy_no = @Policy_no	
	RETURN 	rtrim(isnull(@AgencyName,'Miscellaneous'))	
end

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON


GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_GetAgencyNameByPolicyNo.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_GetGroupByPolicyNo.sql  
--------------------------------  
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].udf_GetGroupByPolicyNo') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].udf_GetGroupByPolicyNo
GO

/****** Object:  UserDefinedFunction [dbo].udf_GetGroupByPolicyNo    Script Date: 02/21/2013 11:08:20 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO
--select dbo.udf_GetGroupByPolicyNo('fsdfsdf')
CREATE function [dbo].udf_GetGroupByPolicyNo(@Policy_no char(19))
	returns varchar(20)	 
AS
	BEGIN
		declare @Group char(20)
		select @Group =  [Group] from dbo.TMF_Agencies_Sub_Category where Policy_no = @Policy_no	
		RETURN 	rtrim(isnull(@Group,'Miscellaneous'))		
	END 
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON


GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_GetGroupByPolicyNo.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_GetSubCategoryByPolicyNo.sql  
--------------------------------  
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].udf_GetSubCategoryByPolicyNo') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].udf_GetSubCategoryByPolicyNo
GO

/****** Object:  UserDefinedFunction [dbo].udf_GetSubCategoryByPolicyNo    Script Date: 02/21/2013 11:08:20 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO
--select dbo.udf_GetSubCategoryByPolicyNo('fsdfsdf')
CREATE function [dbo].udf_GetSubCategoryByPolicyNo(@Policy_no char(19))
	returns varchar(256)
as
	BEGIN
		declare @sub_category varchar(256)
		select @sub_category =  sub_category from dbo.TMF_Agencies_Sub_Category where Policy_no = @Policy_no	
		RETURN 	rtrim(isnull(@sub_category,'Miscellaneous'))
	END 

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON


GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_GetSubCategoryByPolicyNo.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_HEM_AWC_Generate_Time_ID.sql  
--------------------------------  
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[udf_HEM_AWC_Generate_Time_ID]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	DROP FUNCTION [dbo].[udf_HEM_AWC_Generate_Time_ID]
GO

/****** Object:  UserDefinedFunction [dbo].[udf_HEM_AWC_Generate_Time_ID]    Script Date: 12/30/2013 17:12:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

CREATE function [dbo].[udf_HEM_AWC_Generate_Time_ID](@Type varchar(20),@WeeklyType varchar(20))
RETURNS TABLE 
AS
RETURN 
(	
    WITH temp AS
	(
		--SELECT CAST('01/01/' + cast(year(getdate()) AS varchar(4)) + ' 23:59' AS DATETIME) Time_Id
		--UNION ALL
		--SELECT DATEADD(m, 1, Time_Id)
		--FROM temp WHERE Time_Id < CAST('06/01/' + cast(year(getdate())+1 AS varchar(4)) + ' 23:59' AS DATETIME)
		SELECT CAST('01/01/' + cast(year(getdate()) AS varchar(4)) AS DATETIME) Time_Id
		UNION ALL
		SELECT DATEADD(m, 1, Time_Id)
		FROM temp WHERE Time_Id < CAST('06/01/' + cast(year(getdate())+1 AS varchar(4)) AS DATETIME)
	)

	select  [Type] =@Type
			,uv_Unit.Unit
			,uv_Unit.[Primary]
			,WeeklyType = @WeeklyType
			--,Time_Id =temp.Time_Id
			,Time_Id = dateadd(dd, -1, dateadd(mm, 1, temp.Time_Id)) + '23:59'
		    ,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' 
							+ RIGHT(datename(year, Time_Id), 2)
		    ,Actual = 0
		    ,Projection =(select ISNULL(sum(Projection), 0)
								 from dbo.hem_awc_Projections 
								 where [Type] =@WeeklyType 
								 and Unit_Type=@Type 
								 and RTRIM(Unit_Name)=uv_Unit.Unit 
								 and year(Time_Id)=Year(temp.Time_Id) 
								 and month(Time_Id)=month(temp.Time_Id))
	from temp
	cross join
	(
		SELECT  distinct 
			case 
				when @Type = 'hem' then 'HEM'
				when @Type = 'portfolio' then RTRIM(Portfolio)
				when @Type = 'account_manager' then RTRIM(Account_Manager)
				when @Type = 'team' then RTRIM(Team)
				when @Type = 'am_empl_size' then RTRIM(Empl_Size)
				when @Type = 'portfolio_empl_size' then RTRIM(Empl_Size)
				else dbo.udf_HEM_GetGroupByTeam(Team) end as Unit,
			case 
				when @Type = 'hem' then 'HEM'
				when @Type = 'portfolio' then RTRIM(Portfolio)
				when @Type = 'account_manager' then RTRIM(Account_Manager)
				when @Type = 'team' then dbo.udf_HEM_GetGroupByTeam(Team)
				when @Type = 'am_empl_size' then RTRIM(Account_Manager)
				when @Type = 'portfolio_empl_size' then RTRIM(Portfolio)
				else dbo.udf_HEM_GetGroupByTeam(Team) end as [Primary]
		FROM   hem_awc 
	) as uv_Unit
)

GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_HEM_AWC_Generate_Time_ID.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_HEM_GetGroupByTeam.sql  
--------------------------------  
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].udf_HEM_GetGroupByTeam') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	DROP FUNCTION [dbo].udf_HEM_GetGroupByTeam
GO

/****** Object:  UserDefinedFunction [dbo].udf_HEM_GetGroupByTeam    Script Date: 02/21/2013 11:08:20 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

CREATE function [dbo].udf_HEM_GetGroupByTeam(@Team varchar(20))
	returns varchar(20)	 
AS
	BEGIN
		RETURN CASE WHEN (RTRIM(ISNULL(@Team,''))='') OR @Team NOT LIKE 'hosp%'
						THEN 'Miscellaneous'
				WHEN PATINDEX('HEM%', @Team) = 0 
					THEN Left(UPPER(RTRIM(@Team)), 1) + Right(LOWER(RTRIM(@Team)), LEN(RTRIM(@Team))-1)
				ELSE SUBSTRING(Left(UPPER(RTRIM(@Team)), 1) + Right(LOWER(RTRIM(@Team)), LEN(RTRIM(@Team))-1), 1, 
						CASE WHEN PATINDEX('%[A-Z]%', SUBSTRING(RTRIM(@Team), 4, LEN(RTRIM(@Team)) - 3)) > 0 
								THEN (PATINDEX('%[A-Z]%', SUBSTRING(RTRIM(@Team), 4, LEN(RTRIM(@Team)) - 3)) + 2) 
							ELSE LEN(RTRIM(@Team))
						END)
				END
	END 
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_HEM_GetGroupByTeam.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_PORT_Overall.sql  
--------------------------------  
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[udf_PORT_Overall]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	DROP FUNCTION [dbo].[udf_PORT_Overall]
GO

/****** Object:  UserDefinedFunction [dbo].[udf_PORT_Overall]    Script Date: 08/01/2014 11:30:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

-- Period_Type: 1 = last month, 0 = last 2 weeks, -1 = other range
CREATE FUNCTION [dbo].[udf_PORT_Overall](@System varchar(20), @Type VARCHAR(20), @End_Date Datetime, @Period_Type smallint)
RETURNS @port_overall TABLE(
	[Value] [varchar](256) NULL,
	[SubValue] [varchar](256) NULL,
	[SubValue2] [varchar](256) NULL,
	[Claim_No] [varchar](19) NULL,
	[Date_Of_Injury] [datetime] NULL,
	[Claim_Liability_Indicator_Group] [varchar](256) NULL,
	[Is_Time_Lost] [bit] NULL,
	[Claim_Closed_Flag] [nchar](1) NULL,
	[Date_Claim_Entered] [datetime] NULL,
	[Date_Claim_Closed] [datetime] NULL,
	[Date_Claim_Received] [datetime] NULL,
	[Date_Claim_Reopened] [datetime] NULL,
	[Result_Of_Injury_Code] [int] NULL,
	[WPI] [float] NULL,
	[Common_Law] [bit] NULL,
	[Total_Recoveries] [float] NULL,
	[Med_Cert_Status] [varchar](20) NULL,
	[Is_Working] [bit] NULL,
	[Physio_Paid] [float] NULL,
	[Chiro_Paid] [float] NULL,
	[Massage_Paid] [float] NULL,
	[Osteopathy_Paid] [float] NULL,
	[Acupuncture_Paid] [float] NULL,
	[Is_Stress] [bit] NULL,
	[Is_Inactive_Claims] [bit] NULL,
	[Is_Medically_Discharged] [bit] NULL,
	[Is_Exempt] [bit] NULL,
	[Is_Reactive] [bit] NULL,
	[Is_Medical_Only] [bit] NULL,
	[Is_D_D] [bit] NULL,
	[NCMM_Actions_This_Week] [varchar](256) NULL,
	[NCMM_Actions_Next_Week] [varchar](256) NULL,
	[HoursPerWeek] [numeric](5, 2) NULL,
	[Is_Industrial_Deafness] [bit] NULL,
	[Rehab_Paid] [float] NULL,
	[IsPreClosed] [bit] NULL,
	[IsPreOpened] [bit] NULL)
AS
BEGIN	
	IF UPPER(@System) = 'TMF'
	BEGIN
		INSERT @port_overall
		SELECT Value=(case when @Type='agency' then rtrim(isnull(sub.AgencyName,'Miscellaneous')) else dbo.udf_TMF_GetGroupByTeam(Team) end)
			,SubValue=(case when @Type='agency' then rtrim(isnull(sub.Sub_Category,'Miscellaneous')) else [Team] end)
			,SubValue2=[Claims_Officer_Name]
			,[Claim_No],[Date_Of_Injury],[Claim_Liability_Indicator_Group],[Is_Time_Lost]
			,[Claim_Closed_Flag],[Date_Claim_Entered],[Date_Claim_Closed],[Date_Claim_Received]
			,[Date_Claim_Reopened],[Result_Of_Injury_Code],[WPI],[Common_Law],[Total_Recoveries]
			,[Med_Cert_Status_This_Week],[Is_Working],[Physio_Paid],[Chiro_Paid],[Massage_Paid],[Osteopathy_Paid]
			,[Acupuncture_Paid],[Is_Stress],[Is_Inactive_Claims],[Is_Medically_Discharged],[Is_Exempt]
			,[Is_Reactive],[Is_Medical_Only],[Is_D_D],[NCMM_Actions_This_Week],[NCMM_Actions_Next_Week]
			,[HoursPerWeek],[Is_Industrial_Deafness],[Rehab_Paid],[IsPreClosed],[IsPreOpened]
			FROM TMF_Portfolio uv left join TMF_Agencies_Sub_Category sub on sub.POLICY_NO = uv.Policy_No
			WHERE	
					(
						CASE WHEN @Period_Type = -1
								THEN
									0
								ELSE
									@Period_Type
						END
					) = ISNULL(Is_Last_Month, 0)
					AND
					(
						CASE WHEN @Period_Type = -1
								THEN
									(select top 1 Reporting_Date from TMF_Portfolio
										where CONVERT(datetime, Reporting_Date, 101) 
											>= CONVERT(datetime, @End_Date, 101) order by Reporting_Date)
								ELSE
									(select MAX(Reporting_Date) from TMF_Portfolio)
						END
					) = Reporting_Date
	END
	ELSE IF UPPER(@System) = 'EML'
	BEGIN
		INSERT @port_overall
		SELECT Value=(case when @Type='employer_size' then [EMPL_SIZE] when @Type='group' then dbo.udf_EML_GetGroupByTeam(Team) else [account_manager] end)
			,SubValue=(case when @Type='group' then [Team] else [EMPL_SIZE] end)
			,SubValue2=[Claims_Officer_Name]
			,[Claim_No],[Date_Of_Injury],[Claim_Liability_Indicator_Group],[Is_Time_Lost]
			,[Claim_Closed_Flag],[Date_Claim_Entered],[Date_Claim_Closed],[Date_Claim_Received]
			,[Date_Claim_Reopened],[Result_Of_Injury_Code],[WPI],[Common_Law],[Total_Recoveries]
			,[Med_Cert_Status_This_Week],[Is_Working],[Physio_Paid],[Chiro_Paid],[Massage_Paid],[Osteopathy_Paid]
			,[Acupuncture_Paid],[Is_Stress],[Is_Inactive_Claims],[Is_Medically_Discharged],[Is_Exempt]
			,[Is_Reactive],[Is_Medical_Only],[Is_D_D],[NCMM_Actions_This_Week],[NCMM_Actions_Next_Week]
			,[HoursPerWeek],[Is_Industrial_Deafness],[Rehab_Paid],[IsPreClosed],[IsPreOpened]
			FROM EML_Portfolio
			WHERE	
					(
						CASE WHEN @Period_Type = -1
								THEN
									0
								ELSE
									@Period_Type
						END
					) = ISNULL(Is_Last_Month, 0)
					AND
					(
						CASE WHEN @Period_Type = -1
								THEN
									(select top 1 Reporting_Date from EML_Portfolio
										where CONVERT(datetime, Reporting_Date, 101) 
											>= CONVERT(datetime, @End_Date, 101) order by Reporting_Date)
								ELSE
									(select MAX(Reporting_Date) from EML_Portfolio)
						END
					) = Reporting_Date
	END
	ELSE IF UPPER(@System) = 'HEM'
	BEGIN
		INSERT @port_overall
		SELECT Value=(case when @Type='account_manager' then [Account_Manager] when @Type = 'portfolio' then [portfolio] else dbo.udf_HEM_GetGroupByTeam(Team) end)
			,SubValue=(case when @Type='account_manager' or @Type = 'portfolio' then [EMPL_SIZE] else [Team] end)
			,SubValue2=[Claims_Officer_Name]
			,[Claim_No],[Date_Of_Injury],[Claim_Liability_Indicator_Group],[Is_Time_Lost]
			,[Claim_Closed_Flag],[Date_Claim_Entered],[Date_Claim_Closed],[Date_Claim_Received]
			,[Date_Claim_Reopened],[Result_Of_Injury_Code],[WPI],[Common_Law],[Total_Recoveries]
			,[Med_Cert_Status_This_Week],[Is_Working],[Physio_Paid],[Chiro_Paid],[Massage_Paid],[Osteopathy_Paid]
			,[Acupuncture_Paid],[Is_Stress],[Is_Inactive_Claims],[Is_Medically_Discharged],[Is_Exempt]
			,[Is_Reactive],[Is_Medical_Only],[Is_D_D],[NCMM_Actions_This_Week],[NCMM_Actions_Next_Week]
			,[HoursPerWeek],[Is_Industrial_Deafness],[Rehab_Paid],[IsPreClosed],[IsPreOpened]
			FROM HEM_Portfolio
			WHERE	
					(
						CASE WHEN @Period_Type = -1
								THEN
									0
								ELSE
									@Period_Type
						END
					) = ISNULL(Is_Last_Month, 0)
					AND
					(
						CASE WHEN @Period_Type = -1
								THEN
									(select top 1 Reporting_Date from HEM_Portfolio
										where CONVERT(datetime, Reporting_Date, 101) 
											>= CONVERT(datetime, @End_Date, 101) order by Reporting_Date)
								ELSE
									(select MAX(Reporting_Date) from HEM_Portfolio)
						END
					) = Reporting_Date
	END
	RETURN;
END
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_PORT_Overall.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_TMF_AWC_Generate_Time_ID.sql  
--------------------------------  
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[udf_TMF_AWC_Generate_Time_ID]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	DROP FUNCTION [dbo].[udf_TMF_AWC_Generate_Time_ID]
GO

/****** Object:  UserDefinedFunction [dbo].[udf_TMF_AWC_Generate_Time_ID]    Script Date: 12/30/2013 17:12:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

CREATE function [dbo].[udf_TMF_AWC_Generate_Time_ID](@Type varchar(20),@WeeklyType varchar(20))
RETURNS TABLE 
AS
RETURN 
(   
    WITH temp AS 
	(
		--SELECT CAST('01/01/' + cast(year(getdate()) AS varchar(4)) + ' 23:59' AS DATETIME) Time_Id
		--UNION ALL
		--SELECT DATEADD(m, 1, Time_Id)
		--FROM temp WHERE Time_Id < CAST('06/01/' + cast(year(getdate())+1 AS varchar(4)) + ' 23:59' AS DATETIME)
		SELECT CAST('01/01/' + cast(year(getdate()) AS varchar(4)) AS DATETIME) Time_Id
		UNION ALL
		SELECT DATEADD(m, 1, Time_Id)
		FROM temp WHERE Time_Id < CAST('06/01/' + cast(year(getdate())+1 AS varchar(4)) AS DATETIME)
	)

	select  [Type] =@Type
			,uv_Unit.Unit
			,uv_Unit.[Primary]
			,WeeklyType = @WeeklyType
			--,Time_Id =temp.Time_Id
			,Time_Id = dateadd(dd, -1, dateadd(mm, 1, temp.Time_Id)) + '23:59'
		    ,Month_Year = LEFT(datename(month, Time_Id), 3) + '- ' 
							+ RIGHT(datename(year, Time_Id), 2)
		    ,Actual = 0
		    ,Projection =(select ISNULL(sum(Projection), 0)
								 from dbo.tmf_awc_Projections 
								 where [Type] =@WeeklyType 
								 and Unit_Type=@Type 
								 and RTRIM(Unit_Name)=uv_Unit.Unit 
								 and year(Time_Id)=Year(temp.Time_Id) 
								 and month(Time_Id)=month(temp.Time_Id))
	from temp
	cross join
	(
		SELECT  distinct 
		case
			when @Type = 'tmf' then 'TMF' 
			when @Type = 'agency' then RTRIM(ISNULL(sub.AgencyName,'Miscellaneous'))
			when @Type = 'sub_category' then RTRIM(ISNULL(sub.Sub_Category,'Miscellaneous'))
			when @Type = 'team' then RTRIM(Team)
			else dbo.udf_TMF_GetGroupByTeam(Team) end as Unit,
		case 
			when @Type = 'tmf' then 'TMF'
			when @Type = 'agency' then RTRIM(ISNULL(sub.AgencyName,'Miscellaneous'))
			when @Type = 'sub_category' then RTRIM(ISNULL(sub.AgencyName,'Miscellaneous'))
			when @Type = 'team' then dbo.udf_TMF_GetGroupByTeam(Team)
			else dbo.udf_TMF_GetGroupByTeam(Team) end as [Primary]
		from TMF_AWC awc left join TMF_Agencies_Sub_Category sub on awc.POLICY_NO = sub.POLICY_NO
	) as uv_Unit	
)
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_TMF_AWC_Generate_Time_ID.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_TMF_GetGroupByTeam.sql  
--------------------------------  
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].udf_TMF_GetGroupByTeam') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].udf_TMF_GetGroupByTeam
GO

/****** Object:  UserDefinedFunction [dbo].udf_TMF_GetGroupByTeam    Script Date: 02/21/2013 11:08:20 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

CREATE function [dbo].udf_TMF_GetGroupByTeam(@Team varchar(20))
	returns varchar(20)	 
AS
	BEGIN
		DECLARE @strReturn varchar(20)
		
		IF RTRIM(ISNULL(@Team, '')) = ''
		BEGIN
			SET @strReturn = 'Miscellaneous'
		END
		ELSE
		BEGIN
			SET @strReturn= REPLACE(@Team,'tmf','')
		END
			
		SELECT @strReturn =(case when PATINDEX('%[A-Z]%',@strReturn) >=2 
									then SUBSTRING(@strReturn,1,PATINDEX('%[A-Z]%',@strReturn)-1)
		ELSE @strReturn end)
		
		RETURN (case when PATINDEX('%[A-Z]%',@strReturn) <1
					then RTRIM(@strReturn) else 'Miscellaneous' 
				end)
	END 
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_TMF_GetGroupByTeam.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current_Add_Missing_Group.sql  
--------------------------------  
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[udf_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current_Add_Missing_Group]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	DROP FUNCTION [dbo].[udf_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current_Add_Missing_Group]
GO

/****** Object:  UserDefinedFunction [dbo].[udf_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current_Add_Missing_Group]    Script Date: 12/30/2013 17:12:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

CREATE function [dbo].[udf_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current_Add_Missing_Group]()
RETURNS TABLE 
AS
RETURN 
(	
    select * from 
	(
	select Month_period =1
	union select Month_period =3
	union select Month_period =6
	union select Month_period =12
	) as tmp1
	cross join
	(

	select Measure_months =13
	union select Measure_months =26
	union select Measure_months =52
	union select Measure_months =78
	union select Measure_months =104) as tmp2

	cross join
	(
	select [type]='group'  ,Agency_Group  ='4' ,LT=0,WGT  =0   ,AVGDURN   =0   ,[Target] = 0
	union select [type]='group'  ,Agency_Group  ='6' ,LT=0,WGT  =0   ,AVGDURN   =0   ,[Target] = 0
	union select [type]='group'  ,Agency_Group  ='9' ,LT=0,WGT  =0   ,AVGDURN   =0   ,[Target] = 0
	
	union 
	select distinct [type]='agency' 
		   ,rtrim(isnull(sub.AgencyName,'Miscellaneous')) as Agency_Group
		   ,LT = 0
		   ,WGT = 0
		   ,AVGDURN = 0
		   ,[Target] = 0
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO 
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
	   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
	   
	union 
	select distinct [type]='agency' 
		   ,'POLICE & FIRE' as Agency_Group
		   ,LT = 0
		   ,WGT = 0
		   ,AVGDURN = 0
		   ,[Target] = 0
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO 
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
	   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11) 
	   and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Police','Fire')
	   
	union 
	select distinct [type]='agency' 
		   ,'HEALTH & OTHER' as Agency_Group
		   ,LT = 0
		   ,WGT = 0
		   ,AVGDURN = 0
		   ,[Target] = 0
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO 
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
	   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)  
	   and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Health','Other')   
	   
	union 
	select distinct [type]='agency' 
		   ,'TMF' as Agency_Group
		   ,LT = 0
		   ,WGT = 0
		   ,AVGDURN = 0
		   ,[Target] = 0
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO 
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
	   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)     
	
	union   
	select distinct [type]='group' 
		   ,'TMF' as Agency_Group
		   ,LT = 0
		   ,WGT = 0
		   ,AVGDURN = 0
		   ,[Target] = 0
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO 
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
	   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)    
	) as tmp3
)

GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current_Add_Missing_Group.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_Whole_EML_Generate_Years.sql  
--------------------------------  
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[udf_Whole_EML_Generate_Years]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	DROP FUNCTION [dbo].[udf_Whole_EML_Generate_Years]
GO

/****** Object:  UserDefinedFunction [dbo].[udf_Whole_EML_Generate_Years]    Script Date: 12/30/2013 17:12:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

CREATE function [dbo].[udf_Whole_EML_Generate_Years](@Type varchar(20))
RETURNS TABLE 
AS
RETURN 
(	
    WITH temp AS
	(
		SELECT CAST(CAST(MONTH(getdate()) as varchar(2)) + '/01/2005 23:59' as Datetime) Time_Id
		UNION ALL
		SELECT DATEADD(YEAR,1, Time_Id)
		FROM temp WHERE year(Time_Id) < YEAR(getdate()) - 1
	)
	select  [UnitType] =@Type
			,uv_Unit.Unit
			,uv_Unit.[Primary]
			,Transaction_Year = temp.Time_Id
		    ,[Type] = 'Actual'
		    ,No_of_Active_Weekly_Claims = 0
	from temp
	cross join
	(
		SELECT  distinct 
			case 
				when @Type = 'eml' then 'EML'
				when @Type = 'employer_size' then RTRIM(Empl_Size)
				when @Type = 'account_manager' then RTRIM(Account_Manager)
				when @Type = 'team' then RTRIM(Team)
				when @Type = 'am_empl_size' then RTRIM(Empl_Size)
				else dbo.udf_EML_GetGroupByTeam(Team) end as Unit,
			case 
				when @Type = 'eml' then 'EML'
				when @Type = 'employer_size' then RTRIM(Empl_Size)
				when @Type = 'account_manager' then RTRIM(Account_Manager)
				when @Type = 'team' then dbo.udf_EML_GetGroupByTeam(Team)
				when @Type = 'am_empl_size' then RTRIM(Account_Manager)
				else dbo.udf_EML_GetGroupByTeam(Team) end as [Primary]
		FROM   eml_awc where RTRIM(Account_Manager) is not null
	) as uv_Unit
)

GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_Whole_EML_Generate_Years.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_Whole_HEM_Generate_Years.sql  
--------------------------------  
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[udf_Whole_HEM_Generate_Years]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	DROP FUNCTION [udf_Whole_HEM_Generate_Years]
GO

/****** Object:  UserDefinedFunction [dbo].[udf_Whole_HEM_Generate_Years]    Script Date: 12/30/2013 17:12:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

CREATE function [dbo].[udf_Whole_HEM_Generate_Years](@Type varchar(20))
RETURNS TABLE 
AS
RETURN 
(	
    WITH temp AS
	(
		SELECT CAST(CAST(MONTH(getdate()) as varchar(2)) + '/01/2005 23:59' as Datetime) Time_Id
		UNION ALL
		SELECT DATEADD(YEAR,1, Time_Id)
		FROM temp WHERE year(Time_Id) < YEAR(getdate()) - 1
	)
	select  [UnitType] =@Type
			,uv_Unit.Unit
			,uv_Unit.[Primary]
			,Transaction_Year = temp.Time_Id
		    ,[Type] = 'Actual'
		    ,No_of_Active_Weekly_Claims = 0
	from temp
	cross join
	(
		SELECT  distinct 
			case 
				when @Type = 'hem' then 'HEM'
				when @Type = 'portfolio' then RTRIM(Portfolio)
				when @Type = 'account_manager' then RTRIM(Account_Manager)
				when @Type = 'team' then RTRIM(Team)
				when @Type = 'am_empl_size' then RTRIM(Empl_Size)
				when @Type = 'portfolio_empl_size' then RTRIM(Empl_Size)
				else dbo.udf_HEM_GetGroupByTeam(Team) end as Unit,
			case 
				when @Type = 'hem' then 'HEM'
				when @Type = 'portfolio' then RTRIM(Portfolio)
				when @Type = 'account_manager' then RTRIM(Account_Manager)
				when @Type = 'team' then dbo.udf_HEM_GetGroupByTeam(Team)
				when @Type = 'am_empl_size' then RTRIM(Account_Manager)
				when @Type = 'portfolio_empl_size' then RTRIM(Portfolio)
				else dbo.udf_HEM_GetGroupByTeam(Team) end as [Primary]
		FROM   hem_awc 
	) as uv_Unit
)

GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_Whole_HEM_Generate_Years.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_Whole_TMF_Generate_Years.sql  
--------------------------------  
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[udf_Whole_TMF_Generate_Years]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
	DROP FUNCTION [dbo].[udf_Whole_TMF_Generate_Years]
GO

/****** Object:  UserDefinedFunction [dbo].[udf_Whole_TMF_Generate_Years]    Script Date: 12/30/2013 17:12:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

CREATE function [dbo].[udf_Whole_TMF_Generate_Years](@Type varchar(20))
RETURNS TABLE 
AS
RETURN 
(   
    WITH temp AS 
	(
		SELECT CAST(CAST(MONTH(getdate()) as varchar(2)) + '/01/2005 23:59' as Datetime) Time_Id
		UNION ALL
		SELECT DATEADD(YEAR,1, Time_Id)
		FROM temp WHERE year(Time_Id) < YEAR(getdate()) - 1
	)

	select  [UnitType] =@Type
			,uv_Unit.Unit
			,uv_Unit.[Primary]
			,Transaction_Date = temp.Time_Id
		    ,[Type] = 'Actual'
		    ,No_of_Active_Weekly_Claims = 0
	from temp
	cross join
	(
		SELECT  distinct 
		case
			when @Type = 'tmf' then 'TMF' 
			when @Type = 'agency' then RTRIM(ISNULL(sub.AgencyName,'Miscellaneous'))
			when @Type = 'sub_category' then RTRIM(ISNULL(sub.Sub_Category,'Miscellaneous'))
			when @Type = 'team' then RTRIM(Team)
			else dbo.udf_TMF_GetGroupByTeam(Team) end as Unit,
		case 
			when @Type = 'tmf' then 'TMF'
			when @Type = 'agency' then RTRIM(ISNULL(sub.AgencyName,'Miscellaneous'))
			when @Type = 'sub_category' then RTRIM(ISNULL(sub.AgencyName,'Miscellaneous'))
			when @Type = 'team' then dbo.udf_TMF_GetGroupByTeam(Team)
			else dbo.udf_TMF_GetGroupByTeam(Team) end as [Primary]
		from TMF_AWC awc left join TMF_Agencies_Sub_Category sub on awc.POLICY_NO = sub.POLICY_NO
	) as uv_Unit	
)
GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\UserDefinedFunction\udf_Whole_TMF_Generate_Years.sql  
--------------------------------  
---------------------------------------------------------- 
------------------- View 
---------------------------------------------------------- 
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_CPR_Raw.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_CPR_Raw')
	DROP VIEW [dbo].[uv_CPR_Raw]
GO
CREATE VIEW [dbo].[uv_CPR_Raw]
AS
	SELECT  System='TMF'
			,Med_Cert_Status=Med_Cert_Status_This_Week
			,[Group] = dbo.udf_TMF_GetGroupByTeam(Team)
			,rtrim(isnull(sub.AgencyName,'Miscellaneous')) as Agency_Name
			,rtrim(isnull(sub.Sub_Category,'Miscellaneous')) as Sub_Category
			,sub.AgencyId as Agency_Id
			,uv.*
			,[Grouping] = case when rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Health', 'Other')
								then 'HEALTH & OTHER'
							when rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Police', 'Fire')
								then 'POLICE & FIRE'
							else ''
						end
		FROM dbo.TMF_Portfolio uv left join TMF_Agencies_Sub_Category sub on sub.POLICY_NO = uv.Policy_No
		WHERE Reporting_Date = (select max(reporting_date) from dbo.TMF_Portfolio)
		 
	UNION ALL
	
	SELECT  System='HEM'
			,Med_Cert_Status=Med_Cert_Status_This_Week
			,[Group] = dbo.udf_HEM_GetGroupByTeam(Team)
			,Agency_Name = ''
			,Sub_Category=''
			,Agency_Id = ''
			,*
			,[Grouping] = case when RTRIM(Portfolio) in ('Accommodation', 'Pubs, Taverns and Bars')
								then 'Hotel'
							else ''
						end 
		FROM dbo.HEM_Portfolio
		WHERE Reporting_Date = (select max(reporting_date) from dbo.HEM_Portfolio)
	
	UNION ALL
	
	SELECT  System='EML'
			,Med_Cert_Status=Med_Cert_Status_This_Week
			,[Group] = dbo.udf_EML_GetGroupByTeam(Team)
			,Agency_Name = ''
			,Sub_Category=''
			,Agency_Id = ''
			,*
			,[Grouping] = ''
		FROM dbo.EML_Portfolio
		WHERE Reporting_Date = (select max(reporting_date) from dbo.EML_Portfolio)
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_CPR_Raw.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_AWC_Raw_Data.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_EML_AWC_Raw_Data')
	DROP VIEW [dbo].[uv_EML_AWC_Raw_Data]
GO
CREATE VIEW [dbo].[uv_EML_AWC_Raw_Data] 
AS
SELECT    Time_ID
		, Claim_no
		, Team
		, [Group] = dbo.udf_EML_GetGroupByTeam(Team)
		, Sub_Category = ''
		, Employer_Size = RTRIM(Empl_Size)
		, Date_of_Injury
		,Cert_Type
		,Med_cert_From
		,Med_cert_To
		,Account_Manager
		,Portfolio
		,Cell_no
FROM    dbo.EML_AWC
WHERE    (Time_ID >= DATEADD(mm, - 2,DATEADD(yy, DATEDIFF(yy,0,GETDATE()), 0)))
                          
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_AWC_Raw_Data.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_AWC_Weekly_Open_1_2.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_EML_AWC_Weekly_Open_1_2')
	DROP VIEW [dbo].[uv_EML_AWC_Weekly_Open_1_2]
GO
CREATE VIEW [dbo].[uv_EML_AWC_Weekly_Open_1_2] 
AS	
	---EML---
	SELECT  [Type] = 'EML'
			,Unit = 'EML'
			,[Primary] = 'EML'
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2)
			,Actual = (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
						FROM	EML_AWC EML_AWC1
						WHERE   EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) AND EML_AWC.Time_ID 
								AND Year(EML_AWC1.Date_of_injury) = Year(eml_awc.Time_ID) - 1
									AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc)							
						)
			,Projection =  (SELECT ISNULL(sum(Projection), 0)
								FROM	dbo.EML_AWC_Projections
								WHERE   [Type] = '1-2' AND Unit_Type = 'eml' 										
										AND year(Time_Id) = Year(EML_AWC.Time_Id) 
										AND month(Time_Id)= month(EML_AWC.Time_Id))
	FROM    dbo.udf_EML_AWC_Generate_Time_ID('eml','1-2') eml_awc
	
	UNION ALL
	---Employer size---
	SELECT  [Type] = 'employer_size'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2)
			,Actual = (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
						FROM	EML_AWC EML_AWC1
						WHERE   RTRIM(Empl_Size) = RTRIM(EML_AWC.[Primary]) 
								AND EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) AND EML_AWC.Time_ID 
								AND Year(EML_AWC1.Date_of_injury) = Year(eml_awc.Time_ID) - 1
									AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc)								
						)
			,Projection =  (SELECT ISNULL(sum(Projection), 0)
								FROM	dbo.EML_AWC_Projections
								WHERE   [Type] = '1-2' AND Unit_Type = 'employer_size' 
										AND RTRIM(Unit_Name) = RTRIM(EML_AWC.[Primary]) 
										AND year(Time_Id) = Year(EML_AWC.Time_Id) 
										AND month(Time_Id)= month(EML_AWC.Time_Id))
	FROM    dbo.udf_EML_AWC_Generate_Time_ID('employer_size','1-2') eml_awc
	
	---Group---
	UNION ALL
	SELECT  [Type] = 'group'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 						  
			,Actual = (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
						FROM	EML_AWC EML_AWC1
						WHERE   dbo.udf_EML_GetGroupByTeam(Team) = RTRIM(EML_AWC.Unit)
								AND NOT EXISTS(SELECT   1
												FROM	EML_AWC EML_AWC2
												WHERE   EML_AWC2.claim_no = EML_AWC1.claim_no 
														AND EML_AWC2.time_id =(SELECT   max(time_Id)
																				FROM    EML_AWC EML_AWC3
																				WHERE   EML_AWC3.claim_no = EML_AWC1.claim_no 
																						AND EML_AWC3.time_id BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) AND  EML_AWC.Time_ID
																				) 
														AND dbo.udf_EML_GetGroupByTeam(EML_AWC2.Team) <> dbo.udf_EML_GetGroupByTeam(EML_AWC1.Team)
												)
								AND EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2,EML_AWC.Time_ID) AND EML_AWC.Time_ID 
								AND Year(EML_AWC1.Date_of_injury) = Year(eml_awc.Time_ID) - 1
								AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc)								
						)
			,Projection =(SELECT	ISNULL(sum(Projection), 0)
							FROM    dbo.EML_AWC_Projections
							WHERE   [Type] = '1-2' AND Unit_Type = 'group' 
									AND RTRIM(Unit_Name) = RTRIM(EML_AWC.Unit) 
									AND year(Time_Id) = Year(EML_AWC.Time_Id) 
									AND month(Time_Id)= month(EML_AWC.Time_Id)
							)
	FROM    dbo.udf_EML_AWC_Generate_Time_ID('group','1-2') eml_awc	
	
	---Account manager---
	UNION ALL
	SELECT  [Type] = 'account_manager'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 						  
			,Actual = (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
						FROM	EML_AWC EML_AWC1
						WHERE   RTRIM([Account_Manager]) = RTRIM(EML_AWC.[Primary]) 
								AND NOT EXISTS(SELECT   1
												FROM	EML_AWC EML_AWC2
												WHERE   EML_AWC2.claim_no = EML_AWC1.claim_no 
														AND EML_AWC2.time_id =(SELECT   max(time_Id)
																				FROM    EML_AWC EML_AWC3
																				WHERE   EML_AWC3.claim_no = EML_AWC1.claim_no 
																						AND EML_AWC3.time_id BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) AND  EML_AWC.Time_ID
																				) 
														AND EML_AWC2.[Account_Manager] <> EML_AWC1.[Account_Manager]
												)
								AND EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2,EML_AWC.Time_ID) AND EML_AWC.Time_ID 
								AND Year(EML_AWC1.Date_of_injury) = Year(eml_awc.Time_ID) - 1
								AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc)							
						)
			,Projection =(SELECT	ISNULL(sum(Projection), 0)
							FROM    dbo.EML_AWC_Projections
							WHERE   [Type] = '1-2' AND Unit_Type = 'account_manager' 
									AND RTRIM(Unit_Name) = RTRIM(EML_AWC.[Primary]) 
									AND year(Time_Id) = Year(EML_AWC.Time_Id) 
									AND month(Time_Id)= month(EML_AWC.Time_Id)
							)
	FROM    dbo.udf_EML_AWC_Generate_Time_ID('account_manager','1-2') eml_awc
	
	---Team---
	UNION ALL
	SELECT  [Type] = 'team'
			,Unit = Unit
			,[Primary] = RTRIM([Primary])
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 						
			,Actual = (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
								FROM	EML_AWC EML_AWC1
								WHERE   Team = EML_AWC.Unit 
										AND dbo.udf_EML_GetGroupByTeam(Team) = EML_AWC.[Primary]
										AND NOT EXISTS(SELECT   1
														FROM	EML_AWC EML_AWC2
														WHERE   EML_AWC2.claim_no = EML_AWC1.claim_no 
																AND EML_AWC2.time_id =
																	(SELECT max(time_Id)
																	  FROM  EML_AWC EML_AWC3
																	  WHERE EML_AWC3.claim_no = EML_AWC1.claim_no 
																			AND EML_AWC3.time_id BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) AND EML_AWC.Time_ID)
																AND dbo.udf_EML_GetGroupByTeam(EML_AWC2.Team) <> dbo.udf_EML_GetGroupByTeam(EML_AWC1.Team)
														) 
										AND EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) AND EML_AWC.Time_ID 
										AND Year(EML_AWC1.Date_of_injury) = Year(eml_awc.Time_ID) - 1
										AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc)
						)
			,Projection = (SELECT   ISNULL(sum(Projection), 0)
								FROM	dbo.EML_AWC_Projections
								WHERE   [Type] = '1-2' AND Unit_Type = 'team' 
										AND Unit_Name = EML_AWC.Unit 
										AND year(Time_Id) = Year(EML_AWC.Time_Id) 
										AND month(Time_Id)= month(EML_AWC.Time_Id))
	FROM    dbo.udf_EML_AWC_Generate_Time_ID('team','1-2') EML_AWC
	
	---AM_EMPL_Size---
	UNION ALL
	SELECT  [Type] = 'am_empl_size'
			,Unit = Unit
			,[Primary] = RTRIM([Primary])
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 						
			,Actual = (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
								FROM	EML_AWC EML_AWC1
								WHERE   Empl_Size = EML_AWC.Unit
										AND Account_Manager = EML_AWC.[Primary]
										AND NOT EXISTS(SELECT   1
														FROM	EML_AWC EML_AWC2
														WHERE   EML_AWC2.claim_no = EML_AWC1.claim_no 
																AND EML_AWC2.time_id =
																	(SELECT max(time_Id)
																	  FROM  EML_AWC EML_AWC3
																	  WHERE EML_AWC3.claim_no = EML_AWC1.claim_no 
																			AND EML_AWC3.time_id BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) AND EML_AWC.Time_ID)
																AND EML_AWC2.[Account_Manager] <> EML_AWC1.[Account_Manager]
														) 
										AND EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) AND EML_AWC.Time_ID 
										AND Year(EML_AWC1.Date_of_injury) = Year(eml_awc.Time_ID) - 1
										AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc)
						)
			,Projection = (SELECT   ISNULL(sum(Projection), 0)
								FROM	dbo.EML_AWC_Projections
								WHERE   [Type] = '1-2' AND Unit_Type = 'am_empl_size' 
										AND Unit_Name = EML_AWC.Unit 										
										AND year(Time_Id) = Year(EML_AWC.Time_Id) 
										AND month(Time_Id)= month(EML_AWC.Time_Id))
	FROM    dbo.udf_EML_AWC_Generate_Time_ID('am_empl_size','1-2') EML_AWC
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_AWC_Weekly_Open_1_2.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_AWC_Weekly_Open_3_5.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_EML_AWC_Weekly_Open_3_5')
	DROP VIEW [dbo].[uv_EML_AWC_Weekly_Open_3_5]
GO
CREATE VIEW [dbo].[uv_EML_AWC_Weekly_Open_3_5] 
AS	
--EML--
SELECT  [Type] = 'EML'
		, Unit = 'EML'
		, [Primary] = 'EML'
		, WeeklyType = '3-5'
		, Time_Id
		, Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year,Time_Id), 2) 
        , Actual =
				  (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
                    FROM    EML_AWC EML_AWC1
                    WHERE   EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) AND EML_AWC.Time_ID 
							AND Year(EML_AWC1.Date_of_injury) BETWEEN Year(eml_awc.Time_ID) - 4 AND Year(eml_awc.Time_ID) - 2
							AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc)
                   )
        , Projection =
                  (SELECT ISNULL(sum(Projection), 0)
                    FROM	dbo.EML_AWC_Projections
                    WHERE   [Type] = '3-5' AND Unit_Type = 'eml' 							
							AND year(Time_Id) = Year(EML_AWC.Time_Id) 
							AND month(Time_Id) = month(EML_AWC.Time_Id)
                    )
FROM    dbo.udf_EML_AWC_Generate_Time_ID('eml','3-5') EML_AWC

UNION ALL
--Employer size--
SELECT  [Type] = 'employer_size'
		, Unit = RTRIM(Unit)
		, [Primary] = RTRIM([Primary])
		, WeeklyType = '3-5'
		, Time_Id
		, Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year,Time_Id), 2) 
        , Actual =
				  (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
                    FROM    EML_AWC EML_AWC1
                    WHERE   RTRIM(Empl_Size) = RTRIM(EML_AWC.[Primary]) 
							AND EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) AND EML_AWC.Time_ID 
							AND Year(EML_AWC1.Date_of_injury) BETWEEN Year(eml_awc.Time_ID) - 4 AND Year(eml_awc.Time_ID) - 2
							AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc)
                   )
        , Projection =
                  (SELECT ISNULL(sum(Projection), 0)
                    FROM	dbo.EML_AWC_Projections
                    WHERE   [Type] = '3-5' AND Unit_Type = 'employer_size' 
							AND RTRIM(Unit_Name) = RTRIM(EML_AWC.[Primary]) 
							AND year(Time_Id) = Year(EML_AWC.Time_Id) 
							AND month(Time_Id) = month(EML_AWC.Time_Id)
                    )
FROM    dbo.udf_EML_AWC_Generate_Time_ID('employer_size','3-5') eml_awc

UNION ALL
SELECT  [Type] = 'group'
		, Unit = RTRIM(Unit)
		, [Primary] = RTRIM([Primary])
		, WeeklyType = '3-5'
		, Time_Id
		, Month_Year =LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
        , Actual =
                  (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
                    FROM    EML_AWC EML_AWC1
                    WHERE   dbo.udf_EML_GetGroupByTeam(Team) = RTRIM(EML_AWC.Unit) 
							AND NOT EXISTS (SELECT     1
											FROM    EML_AWC EML_AWC2
											WHERE   EML_AWC2.claim_no = EML_AWC1.claim_no 
													AND EML_AWC2.time_id =
                                                        (SELECT max(time_Id)
                                                          FROM  EML_AWC EML_AWC3
                                                          WHERE EML_AWC3.claim_no = EML_AWC1.claim_no 
																	AND EML_AWC3.time_id BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) 
																	AND EML_AWC.Time_ID
														) 
													AND dbo.udf_EML_GetGroupByTeam(EML_AWC2.Team) <> dbo.udf_EML_GetGroupByTeam(EML_AWC1.Team)
											) 
                            AND EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) 
                            AND EML_AWC.Time_ID AND Year(EML_AWC1.Date_of_injury) BETWEEN Year(eml_awc.Time_ID) - 4 AND Year(eml_awc.Time_ID) - 2
                            AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc)
                    )
        , Projection =
                          (SELECT   ISNULL(sum(Projection), 0)
                            FROM    dbo.EML_AWC_Projections
                            WHERE   [Type] = '3-5' AND Unit_Type = 'group' 
									AND RTRIM(Unit_Name) = RTRIM(EML_AWC.Unit) 
									AND year(Time_Id) = Year(EML_AWC.Time_Id) 
									AND month(Time_Id)= month(EML_AWC.Time_Id)
							)
FROM    dbo.udf_EML_AWC_Generate_Time_ID('group','3-5') eml_awc

UNION ALL
SELECT  [Type] = 'account_manager'
		, Unit = RTRIM(Unit)
		, [Primary] = RTRIM([Primary])
		, WeeklyType = '3-5'
		, Time_Id
		, Month_Year =LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
        , Actual =
                  (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
                    FROM    EML_AWC EML_AWC1
                    WHERE   RTRIM([Account_Manager]) = RTRIM(EML_AWC.[Primary]) 
							AND NOT EXISTS (SELECT     1
											FROM    EML_AWC EML_AWC2
											WHERE   EML_AWC2.claim_no = EML_AWC1.claim_no 
													AND EML_AWC2.time_id =
                                                        (SELECT max(time_Id)
                                                          FROM  EML_AWC EML_AWC3
                                                          WHERE EML_AWC3.claim_no = EML_AWC1.claim_no 
																	AND EML_AWC3.time_id BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) 
																	AND EML_AWC.Time_ID
														) 
													AND EML_AWC2.[Account_Manager] <> EML_AWC1.[Account_Manager]
											) 
                            AND EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) 
                            AND EML_AWC.Time_ID AND Year(EML_AWC1.Date_of_injury) BETWEEN Year(eml_awc.Time_ID) - 4 AND Year(eml_awc.Time_ID) - 2
                            AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc)
                    )
        , Projection =
                          (SELECT   ISNULL(sum(Projection), 0)
                            FROM    dbo.EML_AWC_Projections
                            WHERE   [Type] = '3-5' AND Unit_Type = 'account_manager' 
									AND RTRIM(Unit_Name) = RTRIM(EML_AWC.[Primary]) 
									AND year(Time_Id) = Year(EML_AWC.Time_Id) 
									AND month(Time_Id)= month(EML_AWC.Time_Id)
							)
FROM    dbo.udf_EML_AWC_Generate_Time_ID('account_manager','3-5') eml_awc

UNION ALL
SELECT  [Type] = 'team'
		,Unit = Unit
		,[Primary] = RTRIM([Primary])
		,WeeklyType = '3-5'
		, Time_Id
		,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
        ,Actual =
                  (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
						FROM	EML_AWC EML_AWC1
						WHERE   Team = EML_AWC.Unit 
								AND dbo.udf_EML_GetGroupByTeam(Team) = EML_AWC.[Primary]
								AND NOT EXISTS  (SELECT  1
                                                 FROM   EML_AWC EML_AWC2
                                                 WHERE  EML_AWC2.claim_no = EML_AWC1.claim_no 
														AND EML_AWC2.time_id =(SELECT	max(time_Id)
																				FROM    EML_AWC EML_AWC3
																				WHERE   EML_AWC3.claim_no = EML_AWC1.claim_no 
																						AND EML_AWC3.time_id BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) AND EML_AWC.Time_ID
																				) 
														AND dbo.udf_EML_GetGroupByTeam(EML_AWC2.Team) <> dbo.udf_EML_GetGroupByTeam(EML_AWC1.Team)
												) 
								AND EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2,EML_AWC.Time_ID) AND EML_AWC.Time_ID 
                                AND Year(EML_AWC1.Date_of_injury) BETWEEN Year(eml_awc.Time_ID) - 4 AND Year(eml_awc.Time_ID) - 2
                                AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc) 
                    )
        ,Projection =
                  (SELECT   ISNULL(sum(Projection), 0)
					FROM    dbo.EML_AWC_Projections
					WHERE   [Type] = '3-5' AND Unit_Type = 'team' 
							AND Unit_Name = EML_AWC.Unit 
							AND year(Time_Id)  = Year(EML_AWC.Time_Id) 
							AND month(Time_Id) = month(EML_AWC.Time_Id)
					)
FROM    dbo.udf_EML_AWC_Generate_Time_ID('team','3-5') EML_AWC

UNION ALL
SELECT  [Type] = 'am_empl_size'
		,Unit = Unit
		,[Primary] = RTRIM([Primary])
		,WeeklyType = '3-5'
		, Time_Id
		,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
        ,Actual =
                  (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
						FROM	EML_AWC EML_AWC1
						WHERE   Empl_Size = EML_AWC.Unit
								AND [Account_Manager] = EML_AWC.[Primary]
								AND NOT EXISTS  (SELECT  1
                                                 FROM   EML_AWC EML_AWC2
                                                 WHERE  EML_AWC2.claim_no = EML_AWC1.claim_no 
														AND EML_AWC2.time_id =(SELECT	max(time_Id)
																				FROM    EML_AWC EML_AWC3
																				WHERE   EML_AWC3.claim_no = EML_AWC1.claim_no 
																						AND EML_AWC3.time_id BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) AND EML_AWC.Time_ID
																				) 
														AND EML_AWC2.[Account_Manager] <> EML_AWC1.[Account_Manager]
												) 
								AND EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2,EML_AWC.Time_ID) AND EML_AWC.Time_ID 
                                AND Year(EML_AWC1.Date_of_injury) BETWEEN Year(eml_awc.Time_ID) - 4 AND Year(eml_awc.Time_ID) - 2
                                AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc)                                
                    )
        ,Projection =
                  (SELECT   ISNULL(sum(Projection), 0)
					FROM    dbo.EML_AWC_Projections
					WHERE   [Type] = '3-5' AND Unit_Type = 'am_empl_size' 
							AND Unit_Name = EML_AWC.Unit 
							--AND [Account_Manager] = EML_AWC.[Account_Manager]
							AND year(Time_Id)  = Year(EML_AWC.Time_Id) 
							AND month(Time_Id) = month(EML_AWC.Time_Id)
					)
FROM    dbo.udf_EML_AWC_Generate_Time_ID('am_empl_size','3-5') EML_AWC

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_AWC_Weekly_Open_3_5.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_AWC_Weekly_Open_5_Plus.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_EML_AWC_Weekly_Open_5_Plus')
	DROP VIEW [dbo].[uv_EML_AWC_Weekly_Open_5_Plus]
GO
CREATE VIEW [dbo].[uv_EML_AWC_Weekly_Open_5_Plus] 
AS 
--EML--
SELECT  [Type] = 'EML'
		, Unit = 'EML'
		, [Primary] = 'EML'
		, WeeklyType = '5-plus'
		, Time_Id
		, Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, 
                      Time_Id), 2) 
        , Actual = (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
                    FROM    EML_AWC EML_AWC1
                    WHERE   EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) 
										AND EML_AWC.Time_ID 
							AND Year(EML_AWC1.Date_of_injury) < Year(eml_awc.Time_ID) - 4
							AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc) 
					)
		, Projection =(SELECT   ISNULL(sum(Projection), 0)
						FROM    dbo.EML_AWC_Projections
						WHERE   [Type] = '5-plus' AND Unit_Type = 'eml' 								
								AND year(Time_Id) = Year(EML_AWC.Time_Id) 
								AND month(Time_Id)= month(EML_AWC.Time_Id)
						)
FROM    dbo.udf_EML_AWC_Generate_Time_ID('eml','5-plus') eml_awc

UNION ALL
--Employer size--
SELECT  [Type] = 'employer_size'
		, Unit = RTRIM(Unit)
		, [Primary] = RTRIM([Primary])
		, WeeklyType = '5-plus'
		, Time_Id
		, Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, 
                      Time_Id), 2) 
        , Actual = (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
                    FROM    EML_AWC EML_AWC1
                    WHERE   RTRIM(Empl_Size) = RTRIM(EML_AWC.[Primary]) 
							AND EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) 
										AND EML_AWC.Time_ID 
							AND Year(EML_AWC1.Date_of_injury) < Year(eml_awc.Time_ID) - 4
							AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc)
					)
		, Projection =(SELECT   ISNULL(sum(Projection), 0)
						FROM    dbo.EML_AWC_Projections
						WHERE   [Type] = '5-plus' AND Unit_Type = 'employer_size' 
								AND RTRIM(Unit_Name) = RTRIM(EML_AWC.[Primary]) 
								AND year(Time_Id) = Year(EML_AWC.Time_Id) 
								AND month(Time_Id)= month(EML_AWC.Time_Id)
						)
FROM    dbo.udf_EML_AWC_Generate_Time_ID('employer_size','5-plus') eml_awc

UNION ALL
SELECT  [Type] = 'group'
		, Unit = RTRIM(Unit)
		, [Primary] = RTRIM([Primary])
		, WeeklyType = '5-plus'
		, Time_Id
		,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
        ,Actual =(SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
                    FROM    EML_AWC EML_AWC1
                    WHERE   dbo.udf_EML_GetGroupByTeam(Team) = RTRIM(EML_AWC.Unit)
							AND NOT EXISTS
								(SELECT 1
								 FROM   EML_AWC EML_AWC2
								 WHERE  EML_AWC2.claim_no = EML_AWC1.claim_no 
										AND EML_AWC2.time_id =
													(SELECT max(time_Id)
													  FROM  EML_AWC EML_AWC3
													  WHERE EML_AWC3.claim_no = EML_AWC1.claim_no 
															AND EML_AWC3.time_id BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) 
															AND EML_AWC.Time_ID
													)
										AND dbo.udf_EML_GetGroupByTeam(EML_AWC2.Team) <> dbo.udf_EML_GetGroupByTeam(EML_AWC1.Team)
								) 
							AND EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2,EML_AWC.Time_ID) 
                            AND EML_AWC.Time_ID AND Year(EML_AWC1.Date_of_injury) < Year(eml_awc.Time_ID) - 4
                            AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc) 
                    )
		,Projection =(SELECT   ISNULL(sum(Projection), 0)
						FROM    dbo.EML_AWC_Projections
						WHERE   [Type] = '5-plus' AND Unit_Type = 'group' 
								AND RTRIM(Unit_Name) = RTRIM(EML_AWC.Unit) 
								AND year(Time_Id) = Year(EML_AWC.Time_Id) 
								AND month(Time_Id)= month(EML_AWC.Time_Id)
					)
FROM    dbo.udf_EML_AWC_Generate_Time_ID('group','5-plus') eml_awc	

UNION ALL
SELECT  [Type] = 'account_manager'
		, Unit = RTRIM(Unit)
		, [Primary] = RTRIM([Primary])
		, WeeklyType = '5-plus'
		, Time_Id
		,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
        ,Actual =(SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
                    FROM    EML_AWC EML_AWC1
                    WHERE   RTRIM([Account_Manager]) = RTRIM(EML_AWC.[Primary]) 
							AND NOT EXISTS
								(SELECT 1
								 FROM   EML_AWC EML_AWC2
								 WHERE  EML_AWC2.claim_no = EML_AWC1.claim_no 
										AND EML_AWC2.time_id =
													(SELECT max(time_Id)
													  FROM  EML_AWC EML_AWC3
													  WHERE EML_AWC3.claim_no = EML_AWC1.claim_no 
															AND EML_AWC3.time_id BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) 
															AND EML_AWC.Time_ID
													) 
										AND EML_AWC2.[Account_Manager] <> EML_AWC1.[Account_Manager]
								) 
							AND EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2,EML_AWC.Time_ID) 
                            AND EML_AWC.Time_ID AND Year(EML_AWC1.Date_of_injury) < Year(eml_awc.Time_ID) - 4
                            AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc)
                    )
		,Projection =(SELECT   ISNULL(sum(Projection), 0)
						FROM    dbo.EML_AWC_Projections
						WHERE   [Type] = '5-plus' AND Unit_Type = 'account_manager' 
								AND RTRIM(Unit_Name) = RTRIM(EML_AWC.[Primary]) 
								AND year(Time_Id) = Year(EML_AWC.Time_Id) 
								AND month(Time_Id)= month(EML_AWC.Time_Id)
					)
FROM    dbo.udf_EML_AWC_Generate_Time_ID('account_manager','5-plus') eml_awc

UNION ALL
SELECT     [Type] = 'team'
, Unit = Unit
, [Primary] = RTRIM([Primary])
, WeeklyType = '5-plus'
, Time_Id
, Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
, Actual =(SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
            FROM    EML_AWC EML_AWC1
            WHERE   Team = EML_AWC.Unit 
					AND dbo.udf_EML_GetGroupByTeam(Team) = EML_AWC.[Primary]
					AND NOT EXISTS (SELECT  1
                                    FROM    EML_AWC EML_AWC2
                                    WHERE   EML_AWC2.claim_no = EML_AWC1.claim_no 
											AND EML_AWC2.time_id =(SELECT   max(time_Id)
                                                                      FROM  EML_AWC EML_AWC3
                                                                      WHERE EML_AWC3.claim_no = EML_AWC1.claim_no 
																			AND EML_AWC3.time_id BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) AND EML_AWC.Time_ID
																	) 
                                            AND dbo.udf_EML_GetGroupByTeam(EML_AWC2.Team) <> dbo.udf_EML_GetGroupByTeam(EML_AWC1.Team)
                                    ) 
                    AND EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) AND EML_AWC.Time_ID 
                    AND Year(EML_AWC1.Date_of_injury) < Year(eml_awc.Time_ID) - 4
                    AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc)
            )
, Projection =  (SELECT ISNULL(sum(Projection), 0)
					FROM	dbo.EML_AWC_Projections
                    WHERE   [Type] = '5-plus' AND Unit_Type = 'team' AND Unit_Name = EML_AWC.Unit
							 AND year(Time_Id) = Year(EML_AWC.Time_Id) 
							 AND month(Time_Id)= month(EML_AWC.Time_Id)
                )
FROM    dbo.udf_EML_AWC_Generate_Time_ID('team','5-plus') EML_AWC

UNION ALL
SELECT     [Type] = 'am_empl_size'
, Unit = Unit
, [Primary] = RTRIM([Primary])
, WeeklyType = '5-plus'
, Time_Id
, Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
, Actual =(SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
            FROM    EML_AWC EML_AWC1
            WHERE   Empl_Size = EML_AWC.Unit
					AND [Account_Manager] = EML_AWC.[Primary]
					AND NOT EXISTS (SELECT  1
                                    FROM    EML_AWC EML_AWC2
                                    WHERE   EML_AWC2.claim_no = EML_AWC1.claim_no 
											AND EML_AWC2.time_id =(SELECT   max(time_Id)
                                                                      FROM  EML_AWC EML_AWC3
                                                                      WHERE EML_AWC3.claim_no = EML_AWC1.claim_no 
																			AND EML_AWC3.time_id BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) AND EML_AWC.Time_ID
																	) 
                                            AND EML_AWC2.[Account_Manager] <> EML_AWC1.[Account_Manager]
                                    ) 
                    AND EML_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, EML_AWC.Time_ID) AND EML_AWC.Time_ID 
                    AND Year(EML_AWC1.Date_of_injury) < Year(eml_awc.Time_ID) - 4
                    AND EML_AWC.Time_ID <= (select MAX(Time_ID) from eml_awc)
            )
, Projection =  (SELECT ISNULL(sum(Projection), 0)
					FROM	dbo.EML_AWC_Projections
                    WHERE   [Type] = '5-plus' AND Unit_Type = 'am_empl_size' AND Unit_Name = EML_AWC.Unit
							 AND year(Time_Id) = Year(EML_AWC.Time_Id) 
							 AND month(Time_Id)= month(EML_AWC.Time_Id)
                )
FROM    dbo.udf_EML_AWC_Generate_Time_ID('am_empl_size','5-plus') EML_AWC

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_AWC_Weekly_Open_5_Plus.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_AWC_Whole_EML.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_EML_AWC_Whole_EML')
	DROP VIEW [dbo].[uv_EML_AWC_Whole_EML]
GO
CREATE VIEW [dbo].[uv_EML_AWC_Whole_EML] 
AS
	-----EML------
	SELECT  [UnitType] = 'EML'
			,Unit = 'EML'
			,[Primary] = 'EML'
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Actual' 
			,No_of_Active_Weekly_Claims = 
				isnull(
						(SELECT     COUNT(DISTINCT EML_AWC1.claim_no)
							FROM    EML_AWC EML_AWC1
							WHERE   EML_AWC1.time_id >= dateadd(mm, - 2,(SELECT max(time_id) FROM  EML_AWC))						
									AND year(Date_of_Injury) = Year(EML_AWC.Transaction_Year))
					, 0)
	FROM      dbo.udf_Whole_EML_Generate_Years('eml')  EML_AWC

	UNION ALL ----Projection----
	SELECT  [UnitType] = 'EML'
			,Unit = 'EML'
			,[Primary] = 'EML'
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Projection'
			,No_of_Active_Weekly_Claims = 
					isnull(
						(SELECT top 1 Projection
							FROM   dbo.EML_AWC_Projections
							WHERE  [Type] = 'Whole-EML' AND Unit_Type = 'EML' 
									AND RTRIM(Unit_Name) = 'EML'
									AND Time_Id = DATEADD(month,- 1,EML_AWC.Transaction_Year) 
							ORDER BY time_id DESC									
						)
					, 0)
	FROM     dbo.udf_Whole_EML_Generate_Years('eml') EML_AWC
	-----End EML------
	
	-----Employer size------
	UNION ALL
	SELECT  [UnitType] = 'employer_size'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Actual' 
			,No_of_Active_Weekly_Claims = isnull(
				(SELECT     COUNT(DISTINCT EML_AWC1.claim_no)
				  FROM         EML_AWC EML_AWC1
				  WHERE     RTRIM(Empl_Size) = RTRIM(EML_AWC.[Primary]) 
							AND EML_AWC1.time_id >= dateadd(mm, - 2,
								(SELECT    max(time_id) FROM  EML_AWC)) 
							AND year(Date_of_Injury) = Year(EML_AWC.Transaction_Year))
				, 0)
	FROM     dbo.udf_Whole_EML_Generate_Years('employer_size')   EML_AWC

	UNION ALL ----Projection----
	SELECT  [UnitType] = 'employer_size'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Projection'
			,No_of_Active_Weekly_Claims = isnull(
				(SELECT top 1 Projection
				  FROM   dbo.EML_AWC_Projections
				  WHERE [Type] = 'Whole-EML' AND Unit_Type = 'employer_size' 
						AND RTRIM(Unit_Name) = RTRIM(EML_AWC.Unit) 
						AND Time_Id = DATEADD(month,- 1,EML_AWC.Transaction_Year) 
				  ORDER BY time_id DESC	
				)
				, 0)
	FROM     dbo.udf_Whole_EML_Generate_Years('employer_size')  EML_AWC	
	-----End Employer size------

	-----Group------
	UNION ALL
	SELECT	[UnitType] = 'group'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Actual'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
					  FROM  EML_AWC EML_AWC1
					  WHERE dbo.udf_EML_GetGroupByTeam(Team) = RTRIM(EML_AWC.[Primary]) 
							AND EML_AWC1.time_id >= dateadd(mm, - 2,
								(SELECT     max(time_id) FROM EML_AWC)) 
							AND year(Date_of_Injury) = Year(EML_AWC.Transaction_Year))
					, 0)
	FROM     dbo.udf_Whole_EML_Generate_Years('group') EML_AWC
	
	UNION ALL
	SELECT  [UnitType] = 'group'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year) 
			,[Type] = 'Projection' 
			,No_of_Active_Weekly_Claims = isnull(
					(SELECT     top 1 Projection
						FROM    dbo.EML_AWC_Projections
						WHERE   [Type] = 'Whole-EML' AND Unit_Type = 'group' 
								AND RTRIM(Unit_Name) = RTRIM(EML_AWC.Unit) 
								AND Time_Id = DATEADD(month,- 1,EML_AWC.Transaction_Year) 
						ORDER BY time_id DESC	
					)
					, 0)
	FROM     dbo.udf_Whole_EML_Generate_Years('group') EML_AWC	
	-----End Group------	
	
	-----Account manager------
	UNION ALL
	SELECT	[UnitType] = 'account_manager'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Actual'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
					  FROM  EML_AWC EML_AWC1
					  WHERE RTRIM([Account_Manager]) = RTRIM(EML_AWC.[Primary]) 
							AND EML_AWC1.time_id >= dateadd(mm, - 2,
								(SELECT     max(time_id) FROM EML_AWC)) 
							AND year(Date_of_Injury) = Year(EML_AWC.Transaction_Year))
					, 0)
	FROM      dbo.udf_Whole_EML_Generate_Years('account_manager')  EML_AWC
	
	UNION ALL
	SELECT  [UnitType] = 'account_manager'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year) 
			,[Type] = 'Projection' 
			,No_of_Active_Weekly_Claims = isnull(
					(SELECT     top 1 Projection
						FROM    dbo.EML_AWC_Projections
						WHERE   [Type] = 'Whole-EML' AND Unit_Type = 'account_manager' 
								AND RTRIM(Unit_Name) = RTRIM(EML_AWC.Unit) 
								AND Time_Id = DATEADD(month,- 1,EML_AWC.Transaction_Year) 
						ORDER BY time_id DESC	
					)
					, 0)
	FROM     dbo.udf_Whole_EML_Generate_Years('account_manager') EML_AWC
	-----End Account manager------	
	
	---Team---
	UNION ALL
	SELECT  [UnitType] = 'team'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Actual'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
					  FROM  EML_AWC EML_AWC1
					  WHERE dbo.udf_EML_GetGroupByTeam(Team) = RTRIM(EML_AWC.[Primary]) AND RTRIM(Team) = RTRIM(EML_AWC.Unit)
					   AND EML_AWC1.time_id >= dateadd(mm, - 2,	(SELECT max(time_id) FROM EML_AWC)) 
							AND year(Date_of_Injury) = Year(EML_AWC.Transaction_Year))
					, 0)
	FROM     dbo.udf_Whole_EML_Generate_Years('team') EML_AWC
	
	UNION ALL
	SELECT  [UnitType] = 'team'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year =Year(Transaction_Year)
			,[Type] = 'Projection'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   top 1 Projection
					  FROM  dbo.EML_AWC_Projections
					  WHERE [Type] = 'Whole-EML' AND Unit_Type = 'team' 
								AND RTRIM(Unit_Name) = RTRIM(EML_AWC.Unit)
								AND Time_Id = DATEADD(month,- 1,EML_AWC.Transaction_Year) 
					  ORDER BY time_id DESC	
					)
					, 0)
	FROM     dbo.udf_Whole_EML_Generate_Years('team') EML_AWC
	
	---AM_EMPL_SIZE---
	UNION ALL
	SELECT  [UnitType] = 'am_empl_size'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Actual'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   COUNT(DISTINCT EML_AWC1.claim_no)
					  FROM  EML_AWC EML_AWC1
					  WHERE RTRIM(Account_Manager) = RTRIM(EML_AWC.[Primary]) 
					  AND RTRIM(Empl_Size) = RTRIM(EML_AWC.Unit) 
					  AND EML_AWC1.time_id >= dateadd(mm, - 2,(SELECT max(time_id) FROM EML_AWC)) 
							AND year(Date_of_Injury) = Year(EML_AWC.Transaction_Year))
					, 0)
	FROM     dbo.udf_Whole_EML_Generate_Years('am_empl_size')  EML_AWC
	
	UNION ALL
	SELECT  [UnitType] = 'am_empl_size'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year =Year(Transaction_Year)
			,[Type] = 'Projection'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   top 1 Projection
					  FROM  dbo.EML_AWC_Projections
					  WHERE [Type] = 'Whole-EML' AND Unit_Type = 'am_empl_size' 
								AND RTRIM(Unit_Name) = RTRIM(EML_AWC.Unit)
								AND Time_Id = DATEADD(month,- 1,EML_AWC.Transaction_Year) 
					  ORDER BY time_id DESC	
					)
					, 0)
	FROM     dbo.udf_Whole_EML_Generate_Years('am_empl_size') EML_AWC

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_AWC_Whole_EML.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_EML_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current')
	DROP VIEW [dbo].[uv_EML_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current]
GO
CREATE VIEW [dbo].[uv_EML_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current] 
AS
	WITH temp AS 
	(
		select * 
		from
			(select 0 as month_period
			union all
			select 2 as month_period
			union all
			select 5 as month_period
			union all
			select 11 as month_period) as month_period
			cross join
			(select 13 as Measure_months
			union all
			select 26 as Measure_months
			union all
			select 52 as Measure_months
			union all
			select 78 as Measure_months
			union all
			select 104 as Measure_months) as measure_months		
			cross join
			(
			select distinct 'WCNSW' as EmployerSize_Group,[Type]='employer_size'
			from EML_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
			   
			union
			select distinct rtrim(EMPL_SIZE) as EmployerSize_Group, [Type]='employer_size'
			from EML_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				
			union
			select distinct 'WCNSW' as EmployerSize_Group, [Type]='group'
			from EML_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				
			union
			select distinct dbo.udf_EML_GetGroupByTeam(Team) as EmployerSize_Group, [Type]='group'
			from EML_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				
			union
			select distinct 'WCNSW' as EmployerSize_Group, [Type]='account_manager'
			from EML_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				
			union
			select distinct rtrim([Account_Manager]) as EmployerSize_Group, [Type]='account_manager'
			from EML_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				
			) as temp_value
	)
	
	--Employer size---	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='employer_size'
			,'WCNSW' as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_EML_RTW_getTargetAndBase(Remuneration_End,'target','','EML',NULL,Measure),0)
	from EML_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Measure,Remuneration_Start, Remuneration_End
	
	union all
	select top 100000000 Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='employer_size'
			,rtrim(EMPL_SIZE) as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_EML_RTW_getTargetAndBase(Remuneration_End,'target','employer_size',rtrim(EMPL_SIZE),NULL,Measure),0)
	from EML_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by EMPL_SIZE,Measure,Remuneration_Start, Remuneration_End
	order by EMPL_SIZE
	---Group---
	union all
	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='group'
			,'WCNSW' as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_EML_RTW_getTargetAndBase(Remuneration_End,'target','','EML',NULL,Measure),0)
	from EML_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Measure,Remuneration_Start, Remuneration_End
	
	union all
	select top 100000000 Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='group'
			,dbo.udf_EML_GetGroupByTeam(Team) as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_EML_RTW_getTargetAndBase(Remuneration_End,'target','group',dbo.udf_EML_GetGroupByTeam(Team),NULL,Measure),0)
	from EML_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by dbo.udf_EML_GetGroupByTeam(Team),Measure,Remuneration_Start, Remuneration_End	
	order by dbo.udf_EML_GetGroupByTeam(Team)
	---Account manager---
	union all
	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='account_manager'
			,'WCNSW' as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_EML_RTW_getTargetAndBase(Remuneration_End,'target','','EML',NULL,Measure),0)
	from EML_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Measure,Remuneration_Start, Remuneration_End
	
	union all
	select top 100000000 Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='account_manager'
			,rtrim([Account_Manager]) as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_EML_RTW_getTargetAndBase(Remuneration_End,'target','account_manager',rtrim([Account_Manager]),NULL,Measure),0)
	from EML_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim([Account_Manager]) is not null

	group by [Account_Manager],Measure,Remuneration_Start, Remuneration_End
	order by [Account_Manager]
	
	--add missing measure months
	union all
	select Month_period=case when month_period = 0
							then 1
						 when month_period = 2
							then 3
						 when month_period = 5
							then 6
						 when month_period = 11
							then 12
					end
		  ,[Type]
		  ,EmployerSize_Group
		  ,Measure_months
		  ,LT = 0
		  ,WGT = 0
		  ,AVGDURN = 0
		  ,[Target] = 0
	from temp as tmp
	where Measure_months not in (select distinct Measure from EML_RTW uv
							where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
							and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) = tmp.month_period
							and case when [Type] = 'group' then (case when EmployerSize_Group <> 'WCNSW' then dbo.udf_EML_GetGroupByTeam(rtrim(uv.Team)) else 'WCNSW' end)
									 when [Type] = 'employer_size' then (case when EmployerSize_Group <> 'WCNSW' then rtrim(uv.EMPL_SIZE) else 'WCNSW' end)
									 when [Type] = 'account_manager' then (case when EmployerSize_Group <> 'WCNSW' then rtrim(uv.Account_Manager) else 'WCNSW' end)
								end
									 = EmployerSize_Group )
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Previous.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_EML_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Previous')
	DROP VIEW [dbo].[uv_EML_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Previous]
GO
CREATE VIEW [dbo].[uv_EML_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Previous] 
AS
	--Employer size---
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='employer_size'
			,'WCNSW' as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from EML_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.EML_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)
	
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='employer_size'
			,rtrim(EMPL_SIZE) as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from EML_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.EML_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by EMPL_SIZE,Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)	
	
	
	---Group---
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='group'
			,'WCNSW' as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from EML_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.EML_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)
	
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='group'
			,dbo.udf_EML_GetGroupByTeam(Team) as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from EML_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.EML_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by dbo.udf_EML_GetGroupByTeam(Team),Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)	

	---Account manager---
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='account_manager'
			,'WCNSW' as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from EML_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.EML_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)
	
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='account_manager'
			,rtrim([Account_Manager]) as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from EML_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.EML_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim([Account_Manager]) is not null

	group by [Account_Manager],Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)	
	
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Previous.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Agency_Group_Rolling_Month_1.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================
--select * from uv_EML_RTW_Agency_Group_Rolling_Month_1
IF EXISTS(select * FROM sys.views where name = 'uv_EML_RTW_Agency_Group_Rolling_Month_1')
	DROP VIEW [dbo].[uv_EML_RTW_Agency_Group_Rolling_Month_1]
GO
CREATE VIEW [dbo].[uv_EML_RTW_Agency_Group_Rolling_Month_1] 
AS

SELECT     dbo.udf_EML_GetGroupByTeam(Team) as EmployerSize_Group
		  ,[Type] = 'group'
		  ,uv.Remuneration_Start 
		  ,uv.Remuneration_End
		  ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
          
          , Measure AS Measure_months
          , SUM(uv.LT) AS LT
          , SUM(uv.WGT) AS WGT
          , SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'target','group',dbo.udf_EML_GetGroupByTeam(Team),NULL,uv.Measure)									
		  , Base = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'base','group',dbo.udf_EML_GetGroupByTeam(Team),NULL,uv.Measure)
						
FROM         dbo.EML_RTW uv where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
GROUP BY  dbo.udf_EML_GetGroupByTeam(Team), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL

SELECT     rtrim(uv.EMPL_SIZE) as EmployerSize_Group
		   ,[Type] = 'employer_size' 
		   ,uv.Remuneration_Start
		   , uv.Remuneration_End
		   ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
          
          , Measure AS Measure_months
          , SUM(uv.LT) AS LT
          , SUM(uv.WGT) AS WGT
          , SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'target','employer_size',uv.EMPL_SIZE,NULL,uv.Measure)									
		  , Base = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'base','employer_size',uv.EMPL_SIZE,NULL,uv.Measure)					 
FROM         dbo.EML_RTW uv 
			where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
GROUP BY  uv.EMPL_SIZE, uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL

SELECT     rtrim(uv.Account_Manager) as EmployerSize_Group
		   ,[Type] = 'account_manager' 
		   ,uv.Remuneration_Start
		   , uv.Remuneration_End
		   ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
          
          , Measure AS Measure_months
          , SUM(uv.LT) AS LT
          , SUM(uv.WGT) AS WGT
          , SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'target','account_manager',uv.Account_Manager,NULL,uv.Measure)									
		  , Base = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'base','account_manager',uv.Account_Manager,NULL,uv.Measure)					 
FROM         dbo.EML_RTW uv 
			where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
			and rtrim(uv.Account_Manager) is not null
GROUP BY  uv.Account_Manager, uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL
SELECT     'WCNSW' AS EmployerSize_Group
			, [Type] = 'group'
			,t.Remuneration_Start
		    ,t.Remuneration_End
			, Remuneration = cast(year(t .Remuneration_End) AS varchar) + 'M' + CASE WHEN MONTH(t .Remuneration_End) 
                      <= 9 THEN '0' ELSE '' END + cast(month(t .Remuneration_End) AS varchar)                      
			, Measure AS Measure_months
			, SUM(t.LT) AS LT
            , SUM(t.WGT) AS WGT
			, SUM(LT) / SUM(WGT) AS AVGDURN			
			, [Target] = dbo.udf_dashboard_EML_RTW_getTargetAndBase(t.Remuneration_End,'target','group','EML',NULL,t.Measure)
			, Base = dbo.udf_dashboard_EML_RTW_getTargetAndBase(t.Remuneration_End,'base','group','EML',NULL,t.Measure)

FROM         EML_RTW t inner join (SELECT     dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) - 23, 0))) + '23:59' AS Remuneration_End
                       FROM          master.dbo.spt_values
                       WHERE      'P' = type AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) - 23, 0))) + '23:59' <= (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) u on t.Remuneration_End = u.Remuneration_End
AND     DATEDIFF(MM, t .remuneration_start, t .remuneration_end) = 0
GROUP BY  t .Measure, t .remuneration_start, t .remuneration_end

UNION ALL

SELECT     'WCNSW' AS EmployerSize_Group
			, [Type] = 'employer_size'
			,t.Remuneration_Start
			,t.Remuneration_End
			, Remuneration = cast(year(t .Remuneration_End) AS varchar) + 'M' + CASE WHEN MONTH(t .Remuneration_End) 
                      <= 9 THEN '0' ELSE '' END + cast(month(t .Remuneration_End) AS varchar)                      
			, Measure AS Measure_months
			, SUM(t.LT) AS LT
            , SUM(t.WGT) AS WGT
			, SUM(LT) / SUM(WGT) AS AVGDURN
			
			, [Target] = dbo.udf_dashboard_EML_RTW_getTargetAndBase(t.Remuneration_End,'target','employer_size','EML',NULL,t.Measure)
			, Base = dbo.udf_dashboard_EML_RTW_getTargetAndBase(t.Remuneration_End,'base','employer_size','EML',NULL,t.Measure)

FROM         EML_RTW t inner join (SELECT     dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) - 23, 0))) + '23:59' AS Remuneration_End
                       FROM          master.dbo.spt_values
                       WHERE      'P' = type AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) - 23, 0))) + '23:59' <= (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) u on t.Remuneration_End = u.Remuneration_End
AND     DATEDIFF(MM, t .remuneration_start, t .remuneration_end) = 0
GROUP BY  t .Measure, t .remuneration_start, t .remuneration_end

UNION ALL

SELECT     'WCNSW' AS EmployerSize_Group
			, [Type] = 'account_manager'
			,t.Remuneration_Start
			,t.Remuneration_End
			, Remuneration = cast(year(t .Remuneration_End) AS varchar) + 'M' + CASE WHEN MONTH(t .Remuneration_End) 
                      <= 9 THEN '0' ELSE '' END + cast(month(t .Remuneration_End) AS varchar)                      
			, Measure AS Measure_months
			, SUM(t.LT) AS LT
            , SUM(t.WGT) AS WGT
			, SUM(LT) / SUM(WGT) AS AVGDURN
			
			, [Target] = dbo.udf_dashboard_EML_RTW_getTargetAndBase(t.Remuneration_End,'target','account_manager','EML',NULL,t.Measure)
			, Base = dbo.udf_dashboard_EML_RTW_getTargetAndBase(t.Remuneration_End,'base','account_manager','EML',NULL,t.Measure)

FROM         EML_RTW t inner join (SELECT     dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) - 23, 0))) + '23:59' AS Remuneration_End
                       FROM          master.dbo.spt_values
                       WHERE      'P' = type AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) - 23, 0))) + '23:59' <= (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) u on t.Remuneration_End = u.Remuneration_End
AND     DATEDIFF(MM, t .remuneration_start, t .remuneration_end) = 0
GROUP BY  t .Measure, t .remuneration_start, t .remuneration_end

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Agency_Group_Rolling_Month_1.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Agency_Group_Rolling_Month_12.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================
--select * from uv_EML_RTW_Agency_Group_Rolling_Month_12
IF EXISTS(select * FROM sys.views where name = 'uv_EML_RTW_Agency_Group_Rolling_Month_12')
	DROP VIEW [dbo].[uv_EML_RTW_Agency_Group_Rolling_Month_12]
GO
CREATE VIEW [dbo].[uv_EML_RTW_Agency_Group_Rolling_Month_12] 
AS

SELECT    EmployerSize_Group = dbo.udf_EML_GetGroupByTeam(Team)
		  ,[Type] = 'group'
		  ,uv.Remuneration_Start 
		  ,uv.Remuneration_End
		  ,Remuneration = cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) 
          
          ,Measure_months = Measure 
          ,LT = SUM(uv.LT)
          ,WGT = SUM(uv.WGT)
          ,AVGDURN = SUM(uv.LT) / nullif(SUM(uv.WGT),0)
          ,[Target] = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'target','group',dbo.udf_EML_GetGroupByTeam(Team),NULL,uv.Measure)									
		  ,Base = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'base','group',dbo.udf_EML_GetGroupByTeam(Team),NULL,uv.Measure)
						
FROM      dbo.EML_RTW uv 

WHERE	  DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 
		  and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)

GROUP BY  dbo.udf_EML_GetGroupByTeam(Team), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL

SELECT     EmployerSize_Group = rtrim(uv.EMPL_SIZE)
		   ,[Type] = 'employer_size' 
		   ,uv.Remuneration_Start
		   ,uv.Remuneration_End
		   ,Remuneration = cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar)
          
          ,Measure_months = Measure
          ,LT = SUM(uv.LT)
          ,WGT = SUM(uv.WGT)
          ,AVGDURN = SUM(uv.LT) / nullif(SUM(uv.WGT),0)
          ,[Target] = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'target','employer_size',uv.EMPL_SIZE,NULL,uv.Measure)									
		  ,Base = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'base','employer_size',uv.EMPL_SIZE,NULL,uv.Measure)					 
FROM         dbo.EML_RTW uv 
WHERE	  DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 
			and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
GROUP BY  uv.EMPL_SIZE, uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL

SELECT     EmployerSize_Group = rtrim(uv.Account_Manager)
		   ,[Type] = 'account_manager' 
		   ,uv.Remuneration_Start
		   ,uv.Remuneration_End
		   ,Remuneration = cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar)
          
          ,Measure_months = Measure
          ,LT = SUM(uv.LT)
          ,WGT = SUM(uv.WGT)
          ,AVGDURN = SUM(uv.LT) / nullif(SUM(uv.WGT),0)
          ,[Target] = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'target','account_manager',uv.Account_Manager,NULL,uv.Measure)									
		  ,Base = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'base','account_manager',uv.Account_Manager,NULL,uv.Measure)					 
FROM         dbo.EML_RTW uv 
WHERE	  DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 
			and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
			and rtrim(uv.Account_Manager) is not null
GROUP BY  uv.Account_Manager, uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL
SELECT     EmployerSize_Group ='WCNSW'
			,[Type] = 'group'
			,t.Remuneration_Start
		    ,t.Remuneration_End
			, Remuneration = cast(year(t .Remuneration_End) AS varchar) + 'M' + CASE WHEN MONTH(t .Remuneration_End) 
                      <= 9 THEN '0' ELSE '' END + cast(month(t .Remuneration_End) AS varchar)                      
			,Measure_months = Measure
			,LT= SUM(t.LT)
            ,WGT= SUM(t.WGT)
			,AVGDURN= SUM(LT) / SUM(WGT)			
			,[Target] = dbo.udf_dashboard_EML_RTW_getTargetAndBase(t.Remuneration_End,'target','group','EML',NULL,t.Measure)
			,Base = dbo.udf_dashboard_EML_RTW_getTargetAndBase(t.Remuneration_End,'base','group','EML',NULL,t.Measure)

FROM         EML_RTW t 
inner join (SELECT     dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) - 23, 0))) + '23:59' AS Remuneration_End
                       FROM          master.dbo.spt_values
                       WHERE      'P' = type AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) - 23, 0))) + '23:59' <= (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) u on t.Remuneration_End = u.Remuneration_End
AND     DATEDIFF(MM, t .remuneration_start, t .remuneration_end) = 11
GROUP BY  t .Measure, t .remuneration_start, t .remuneration_end

UNION ALL

SELECT     EmployerSize_Group= 'WCNSW'
			,[Type] = 'employer_size'
			,t.Remuneration_Start
		    ,t.Remuneration_End
			,Remuneration = cast(year(t .Remuneration_End) AS varchar) + 'M' + CASE WHEN MONTH(t .Remuneration_End) 
                      <= 9 THEN '0' ELSE '' END + cast(month(t .Remuneration_End) AS varchar)                      
			,Measure_months= Measure
			,LT = SUM(t.LT)  
            ,WGT =SUM(t.WGT)  
			,AVGDURN =SUM(LT) / SUM(WGT)  			
			,[Target] = dbo.udf_dashboard_EML_RTW_getTargetAndBase(t.Remuneration_End,'target','employer_size','EML',NULL,t.Measure)
			,Base = dbo.udf_dashboard_EML_RTW_getTargetAndBase(t.Remuneration_End,'base','employer_size','EML',NULL,t.Measure)

FROM         EML_RTW t inner join (SELECT     dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) - 23, 0))) + '23:59' AS Remuneration_End
                       FROM          master.dbo.spt_values
                       WHERE      'P' = type AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) - 23, 0))) + '23:59' <= (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) u on t.Remuneration_End = u.Remuneration_End
AND     DATEDIFF(MM, t .remuneration_start, t .remuneration_end) = 11
GROUP BY  t .Measure, t .remuneration_start, t .remuneration_end

UNION ALL

SELECT     EmployerSize_Group= 'WCNSW'
			,[Type] = 'account_manager'
			,t.Remuneration_Start
		    ,t.Remuneration_End
			,Remuneration = cast(year(t .Remuneration_End) AS varchar) + 'M' + CASE WHEN MONTH(t .Remuneration_End) 
                      <= 9 THEN '0' ELSE '' END + cast(month(t .Remuneration_End) AS varchar)                      
			,Measure_months= Measure
			,LT = SUM(t.LT)  
            ,WGT =SUM(t.WGT)  
			,AVGDURN =SUM(LT) / SUM(WGT)  			
			,[Target] = dbo.udf_dashboard_EML_RTW_getTargetAndBase(t.Remuneration_End,'target','account_manager','EML',NULL,t.Measure)
			,Base = dbo.udf_dashboard_EML_RTW_getTargetAndBase(t.Remuneration_End,'base','account_manager','EML',NULL,t.Measure)

FROM         EML_RTW t inner join (SELECT     dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) - 23, 0))) + '23:59' AS Remuneration_End
                       FROM          master.dbo.spt_values
                       WHERE      'P' = type AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) - 23, 0))) + '23:59' <= (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)) u on t.Remuneration_End = u.Remuneration_End
AND     DATEDIFF(MM, t .remuneration_start, t .remuneration_end) = 11
GROUP BY  t .Measure, t .remuneration_start, t .remuneration_end

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Agency_Group_Rolling_Month_12.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Raw_Data.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_EML_RTW_Raw_Data')
	DROP VIEW [dbo].[uv_EML_RTW_Raw_Data]
GO
CREATE VIEW [dbo].[uv_EML_RTW_Raw_Data] 
AS
	SELECT  Claim_Closed_flag
			,Remuneration_Start
			,Remuneration_End
			,Measure_months = Measure
			,[Group] = dbo.udf_EML_GetGroupByTeam(Team)
			,Team
			,Sub_Category = ''
			,Case_manager
			,AgencyName = ''
			,rtw.Claim_no
			,DTE_OF_INJURY 
			,rtw.POLICY_NO
			,LT= ROUND(LT, 2)
			,WGT=ROUND(WGT, 2)
			,EMPL_SIZE
			,Weeks_from_date_of_injury= DATEDIFF(week, DTE_OF_INJURY, Remuneration_End)
			,Weeks_paid= ROUND(Weeks_paid, 2)
			,Stress
			,Liability_Status
			,cost_code
			,cost_code2
			,Cert_Type
			,Med_cert_From
			,Med_cert_To
			,rtw.Account_Manager
			,rtw.Cell_no
			,rtw.Portfolio
	FROM dbo.EML_RTW rtw 
	WHERE remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
		 AND  DATEDIFF(month, Remuneration_Start, Remuneration_End) + 1 =12  

GO 
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Raw_Data.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Current.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_EML_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Current')
	DROP VIEW [dbo].[uv_EML_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Current]
GO
CREATE VIEW [dbo].[uv_EML_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Current] 
AS
	WITH temp AS 
	(
		select * 
		from
			(select 0 as month_period
			union all
			select 2 as month_period
			union all
			select 5 as month_period
			union all
			select 11 as month_period) as month_period
			cross join
			(select 13 as Measure_months
			union all
			select 26 as Measure_months
			union all
			select 52 as Measure_months
			union all
			select 78 as Measure_months
			union all
			select 104 as Measure_months) as measure_months		
			cross join
			(
			select distinct dbo.udf_EML_GetGroupByTeam(Team) as EmployerSize_Group,rtrim(Team) as Team_Sub, [Type]='group'
			from EML_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				
			union
			
			select distinct rtrim([Account_Manager]) as EmployerSize_Group,rtrim(EMPL_SIZE) as Team_Sub, [Type]='account_manager'
			from EML_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				
			) as temp_value
	)
	
	---Group---			
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='group'
			,dbo.udf_EML_GetGroupByTeam(Team) as EmployerSize_Group
			,rtrim(Team) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_EML_RTW_getTargetAndBase(Remuneration_End,'target','group',dbo.udf_EML_GetGroupByTeam(Team),rtrim(Team),Measure),0)
	from EML_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by dbo.udf_EML_GetGroupByTeam(Team),Team,Measure,Remuneration_Start, Remuneration_End
	
	--Account Manager--
	union all
	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='account_manager'
			,rtrim([Account_Manager]) as EmployerSize_Group
			,rtrim(EMPL_SIZE) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_EML_RTW_getTargetAndBase(Remuneration_End,'target','account_manager',rtrim([Account_Manager]),rtrim(EMPL_SIZE),Measure),0)
	from EML_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim([Account_Manager])is not null

	group by [Account_Manager],EMPL_SIZE,Measure,Remuneration_Start, Remuneration_End
	
	--add missing measure months
	union all
	select Month_period=case when month_period = 0
							then 1
						 when month_period = 2
							then 3
						 when month_period = 5
							then 6
						 when month_period = 11
							then 12
					end
		  ,[Type]
		  ,EmployerSize_Group
		  ,Team_Sub
		  ,Measure_months
		  ,LT = 0
		  ,WGT = 0
		  ,AVGDURN = 0
		  ,[Target] = 0
	from temp as tmp
	where Measure_months not in (select distinct Measure from EML_RTW uv
							where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
							and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) = tmp.month_period
							and case when [Type] = 'group' then dbo.udf_EML_GetGroupByTeam(rtrim(uv.Team))
									 when [Type] = 'account_manager' then rtrim(uv.Account_Manager)
								end
									 = EmployerSize_Group
							and case when [Type] = 'group' then uv.Team
									 when [Type] = 'account_manager' then rtrim(uv.EMPL_SIZE)
								end
									 = Team_Sub )
	
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Current.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Previous.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_EML_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Previous')
	DROP VIEW [dbo].[uv_EML_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Previous]
GO
CREATE VIEW [dbo].[uv_EML_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Previous] 
AS	
	---Group---	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='group'
			,dbo.udf_EML_GetGroupByTeam(Team) as EmployerSize_Group
			,rtrim(Team) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN
	from EML_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.EML_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by dbo.udf_EML_GetGroupByTeam(Team),Team,Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)
	
	---Account manager---	
	union all 
	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='account_manager'
			,rtrim([Account_Manager]) as EmployerSize_Group
			,rtrim(EMPL_SIZE) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN
	from EML_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.EML_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim([Account_Manager]) is not null

	group by [Account_Manager],EMPL_SIZE,Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)


GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Previous.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Team_Sub_Rolling_Month_1.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================
--select * from uv_EML_RTW_Team_Sub_Rolling_Month_1
IF EXISTS(select * FROM sys.views where name = 'uv_EML_RTW_Team_Sub_Rolling_Month_1')
	DROP VIEW [dbo].[uv_EML_RTW_Team_Sub_Rolling_Month_1]
GO
CREATE VIEW [dbo].[uv_EML_RTW_Team_Sub_Rolling_Month_1] 
AS

SELECT     rtrim(uv.Team) as Team_Sub
			, dbo.udf_EML_GetGroupByTeam(Team) as EmployerSize_Group
			,[Type] = 'group'
			,uv.Remuneration_Start
			,uv.Remuneration_End
			,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
                      
			,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
			,[Target] = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'target','group',dbo.udf_EML_GetGroupByTeam(Team),uv.Team,uv.Measure)									
			, Base = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'base','group',dbo.udf_EML_GetGroupByTeam(Team),uv.Team,uv.Measure)
						
FROM         dbo.EML_RTW uv where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
GROUP BY uv.Team, dbo.udf_EML_GetGroupByTeam(Team), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

union all

SELECT     rtrim(uv.EMPL_SIZE) as Team_Sub
			, uv.[Account_Manager] as EmployerSize_Group
			,[Type] = 'account_manager'
			,uv.Remuneration_Start
			,uv.Remuneration_End
			,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
                      
			,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
			,[Target] = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'target','account_manager',uv.[Account_Manager],uv.EMPL_SIZE,uv.Measure)									
			, Base = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'base','account_manager',uv.[Account_Manager],uv.EMPL_SIZE,uv.Measure)
						
FROM         dbo.EML_RTW uv 
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
		and uv.[Account_Manager] is not null
GROUP BY uv.EMPL_SIZE, uv.[Account_Manager], uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Team_Sub_Rolling_Month_1.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Team_Sub_Rolling_Month_12.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================
--select * from uv_EML_RTW_Team_Sub_Rolling_Month_12
IF EXISTS(select * FROM sys.views where name = 'uv_EML_RTW_Team_Sub_Rolling_Month_12')
	DROP VIEW [dbo].[uv_EML_RTW_Team_Sub_Rolling_Month_12]
GO
CREATE VIEW [dbo].[uv_EML_RTW_Team_Sub_Rolling_Month_12] 
AS
SELECT     rtrim(uv.Team) as Team_Sub
		  ,dbo.udf_EML_GetGroupByTeam(Team) as  EmployerSize_Group
		  ,[Type] = 'group'
		  ,uv.Remuneration_Start 
		  ,uv.Remuneration_End
		  ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration        
          ,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'target','group',dbo.udf_EML_GetGroupByTeam(Team),uv.Team,uv.Measure)									
		  , Base = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'base','group',dbo.udf_EML_GetGroupByTeam(Team),uv.Team,uv.Measure)
						
FROM         dbo.EML_RTW uv where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
GROUP BY uv.Team, dbo.udf_EML_GetGroupByTeam(Team), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

union all

SELECT     rtrim(uv.EMPL_SIZE) as Team_Sub
		  ,rtrim(uv.Account_Manager) as  EmployerSize_Group
		  ,[Type] = 'account_manager'
		  ,uv.Remuneration_Start 
		  ,uv.Remuneration_End
		  ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration        
          ,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'target','account_manager',uv.[Account_Manager],uv.EMPL_SIZE,uv.Measure)									
		  , Base = dbo.udf_dashboard_EML_RTW_getTargetAndBase(uv.Remuneration_End,'base','account_manager',uv.[Account_Manager],uv.EMPL_SIZE,uv.Measure)
						
FROM         dbo.EML_RTW uv 
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.EML_RTW)
	  and rtrim(uv.Account_Manager) is not null
GROUP BY uv.EMPL_SIZE, uv.[Account_Manager], uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_EML_RTW_Team_Sub_Rolling_Month_12.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_AWC_Raw_Data.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_HEM_AWC_Raw_Data')
	DROP VIEW [dbo].[uv_HEM_AWC_Raw_Data]
GO
CREATE VIEW [dbo].[uv_HEM_AWC_Raw_Data] 
AS
SELECT    Time_ID
		, Claim_no
		, Team
		, [Group] = dbo.udf_HEM_GetGroupByTeam(Team)
		, Sub_Category = ''
		, Employer_Size = RTRIM(Empl_Size)
		, Date_of_Injury
		,Cert_Type
		,Med_cert_From
		,Med_cert_To
		,Account_Manager
		,Portfolio
		,Cell_no
FROM    dbo.HEM_AWC
WHERE    (Time_ID >= DATEADD(mm, - 2,DATEADD(yy, DATEDIFF(yy,0,GETDATE()), 0)))
                          
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_AWC_Raw_Data.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_AWC_Weekly_Open_1_2.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_HEM_AWC_Weekly_Open_1_2')
	DROP VIEW [dbo].[uv_HEM_AWC_Weekly_Open_1_2]
GO
CREATE VIEW [dbo].[uv_HEM_AWC_Weekly_Open_1_2] 
AS	
	---HEM---
	SELECT  [Type] = 'HEM'
			,Unit = 'HEM'
			,[Primary] = 'HEM'
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2)
			,Actual = (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
						FROM	HEM_AWC HEM_AWC1
						WHERE   HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID 
								AND Year(HEM_AWC1.Date_of_injury) = Year(HEM_awc.Time_ID) - 1
									AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)							
						)
			,Projection =  (SELECT ISNULL(sum(Projection), 0)
								FROM	dbo.HEM_AWC_Projections
								WHERE   [Type] = '1-2' AND Unit_Type = 'hem' 										
										AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
										AND month(Time_Id)= month(HEM_AWC.Time_Id))
	FROM    dbo.udf_HEM_AWC_Generate_Time_ID('hem','1-2') HEM_AWC
	
	UNION ALL
	---Portfolio---
	SELECT  [Type] = 'portfolio'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2)
			,Actual = (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
						FROM	HEM_AWC HEM_AWC1
						WHERE   RTRIM(Portfolio) = RTRIM(HEM_AWC.[Primary]) 
								AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID 
								AND Year(HEM_AWC1.Date_of_injury) = Year(HEM_awc.Time_ID) - 1
									AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)								
						)
			,Projection =  (SELECT ISNULL(sum(Projection), 0)
								FROM	dbo.HEM_AWC_Projections
								WHERE   [Type] = '1-2' AND Unit_Type = 'portfolio' 
										AND RTRIM(Unit_Name) = RTRIM(HEM_AWC.[Primary]) 
										AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
										AND month(Time_Id)= month(HEM_AWC.Time_Id))
	FROM    dbo.udf_HEM_AWC_Generate_Time_ID('portfolio','1-2') HEM_AWC
	
	--Portfolio Hotel Summary--
	UNION ALL
	SELECT  [Type] = 'portfolio'
			,Unit = 'Hotel'
			,[Primary] = 'Hotel'
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2)
			,Actual = (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
						FROM	HEM_AWC HEM_AWC1
						WHERE   RTRIM(Portfolio) in ('Accommodation','Pubs, Taverns and Bars')
								AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID 
								AND Year(HEM_AWC1.Date_of_injury) = Year(HEM_awc.Time_ID) - 1
									AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)								
						)
			,Projection =  (SELECT ISNULL(sum(Projection), 0)
								FROM	dbo.HEM_AWC_Projections
								WHERE   [Type] = '1-2' AND Unit_Type = 'portfolio' 
										AND RTRIM(Unit_Name) in ('Accommodation','Pubs, Taverns and Bars')
										AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
										AND month(Time_Id)= month(HEM_AWC.Time_Id))
	FROM    dbo.udf_HEM_AWC_Generate_Time_ID('portfolio','1-2') HEM_AWC
	WHERE   RTRIM([Primary]) = 'Accommodation'
	
	---Group---
	UNION ALL
	SELECT  [Type] = 'group'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 						  
			,Actual = (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
						FROM	HEM_AWC HEM_AWC1
						WHERE   dbo.udf_TMF_GetGroupByTeam(Team) = RTRIM(HEM_AWC.Unit)
								AND NOT EXISTS(SELECT   1
												FROM	HEM_AWC HEM_AWC2
												WHERE   HEM_AWC2.claim_no = HEM_AWC1.claim_no 
														AND HEM_AWC2.time_id =(SELECT   max(time_Id)
																				FROM    HEM_AWC HEM_AWC3
																				WHERE   HEM_AWC3.claim_no = HEM_AWC1.claim_no 
																						AND HEM_AWC3.time_id BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND  HEM_AWC.Time_ID
																				)
														AND dbo.udf_HEM_GetGroupByTeam(HEM_AWC2.Team) <> dbo.udf_HEM_GetGroupByTeam(HEM_AWC1.Team)
												)
								AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2,HEM_AWC.Time_ID) AND HEM_AWC.Time_ID 
								AND Year(HEM_AWC1.Date_of_injury) = Year(HEM_awc.Time_ID) - 1
								AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)								
						)
			,Projection =(SELECT	ISNULL(sum(Projection), 0)
							FROM    dbo.HEM_AWC_Projections
							WHERE   [Type] = '1-2' AND Unit_Type = 'group' 
									AND RTRIM(Unit_Name) = RTRIM(HEM_AWC.Unit) 
									AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
									AND month(Time_Id)= month(HEM_AWC.Time_Id)
							)
	FROM	dbo.udf_HEM_AWC_Generate_Time_ID('group','1-2') HEM_AWC
	
	---Account manager---
	UNION ALL
	SELECT  [Type] = 'account_manager'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 						  
			,Actual = (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
						FROM	HEM_AWC HEM_AWC1
						WHERE   RTRIM([Account_Manager]) = RTRIM(HEM_AWC.[Primary]) 
								AND NOT EXISTS(SELECT   1
												FROM	HEM_AWC HEM_AWC2
												WHERE   HEM_AWC2.claim_no = HEM_AWC1.claim_no 
														AND HEM_AWC2.time_id =(SELECT   max(time_Id)
																				FROM    HEM_AWC HEM_AWC3
																				WHERE   HEM_AWC3.claim_no = HEM_AWC1.claim_no 
																						AND HEM_AWC3.time_id BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND  HEM_AWC.Time_ID
																				) 
														AND HEM_AWC2.[Account_Manager] <> HEM_AWC1.[Account_Manager]
												)
								AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2,HEM_AWC.Time_ID) AND HEM_AWC.Time_ID 
								AND Year(HEM_AWC1.Date_of_injury) = Year(HEM_awc.Time_ID) - 1
								AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)							
						)
			,Projection =(SELECT	ISNULL(sum(Projection), 0)
							FROM    dbo.HEM_AWC_Projections
							WHERE   [Type] = '1-2' AND Unit_Type = 'account_manager' 
									AND RTRIM(Unit_Name) = RTRIM(HEM_AWC.[Primary]) 
									AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
									AND month(Time_Id)= month(HEM_AWC.Time_Id)
							)
	FROM	dbo.udf_HEM_AWC_Generate_Time_ID('account_manager','1-2') HEM_AWC
	
	---Team---
	UNION ALL
	SELECT  [Type] = 'team'
			,Unit = Unit
			,[Primary] = RTRIM([Primary])
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 						
			,Actual = (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
								FROM	HEM_AWC HEM_AWC1
								WHERE   Team = HEM_AWC.Unit 
										AND dbo.udf_HEM_GetGroupByTeam(Team) = HEM_AWC.[Primary]
										AND NOT EXISTS(SELECT   1
														FROM	HEM_AWC HEM_AWC2
														WHERE   HEM_AWC2.claim_no = HEM_AWC1.claim_no 
																AND HEM_AWC2.time_id =
																	(SELECT max(time_Id)
																	  FROM  HEM_AWC HEM_AWC3
																	  WHERE HEM_AWC3.claim_no = HEM_AWC1.claim_no 
																			AND HEM_AWC3.time_id BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID)
																AND dbo.udf_HEM_GetGroupByTeam(HEM_AWC2.Team) <> dbo.udf_HEM_GetGroupByTeam(HEM_AWC1.Team)
														) 
										AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID
										AND Year(HEM_AWC1.Date_of_injury) = Year(HEM_awc.Time_ID) - 1
										AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
						)
			,Projection = (SELECT   ISNULL(sum(Projection), 0)
								FROM	dbo.HEM_AWC_Projections
								WHERE   [Type] = '1-2' AND Unit_Type = 'team' 
										AND Unit_Name = HEM_AWC.Unit 
										AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
										AND month(Time_Id)= month(HEM_AWC.Time_Id))
	FROM    dbo.udf_HEM_AWC_Generate_Time_ID('team','1-2') HEM_AWC
	
	---AM_EMPL_Size---
	UNION ALL
	SELECT  [Type] = 'am_empl_size'
			,Unit = Unit
			,[Primary] = RTRIM([Primary])
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 						
			,Actual = (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
								FROM	HEM_AWC HEM_AWC1
								WHERE   Empl_Size = HEM_AWC.Unit
										AND Account_Manager = HEM_AWC.[Primary]
										AND NOT EXISTS(SELECT   1
														FROM	HEM_AWC HEM_AWC2
														WHERE   HEM_AWC2.claim_no = HEM_AWC1.claim_no 
																AND HEM_AWC2.time_id =
																	(SELECT max(time_Id)
																	  FROM  HEM_AWC HEM_AWC3
																	  WHERE HEM_AWC3.claim_no = HEM_AWC1.claim_no 
																			AND HEM_AWC3.time_id BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID)
																AND HEM_AWC2.[Account_Manager] <> HEM_AWC1.[Account_Manager]
														) 
										AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID 
										AND Year(HEM_AWC1.Date_of_injury) = Year(HEM_awc.Time_ID) - 1 
										AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
						)
			,Projection = (SELECT   ISNULL(sum(Projection), 0)
								FROM	dbo.HEM_AWC_Projections
								WHERE   [Type] = '1-2' AND Unit_Type = 'am_empl_size' 
										AND Unit_Name = HEM_AWC.Unit 
										AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
										AND month(Time_Id)= month(HEM_AWC.Time_Id))
	FROM    dbo.udf_HEM_AWC_Generate_Time_ID('am_empl_size','1-2') HEM_AWC
	
	---Portfolio_EMPL_Size---
	UNION ALL
	SELECT  [Type] = 'portfolio_empl_size'
			,Unit = Unit
			,[Primary] = RTRIM([Primary])
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 						
			,Actual = (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
								FROM	HEM_AWC HEM_AWC1
								WHERE   Empl_Size = HEM_AWC.Unit
										and Portfolio = HEM_AWC.[Primary]
										AND NOT EXISTS(SELECT   1
														FROM	HEM_AWC HEM_AWC2
														WHERE   HEM_AWC2.claim_no = HEM_AWC1.claim_no 
																AND HEM_AWC2.time_id =
																	(SELECT max(time_Id)
																	  FROM  HEM_AWC HEM_AWC3
																	  WHERE HEM_AWC3.claim_no = HEM_AWC1.claim_no 
																			AND HEM_AWC3.time_id BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID)
																AND HEM_AWC2.[Portfolio] <> HEM_AWC1.[Portfolio]
														) 
										AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID 
										AND Year(HEM_AWC1.Date_of_injury) = Year(HEM_awc.Time_ID) - 1
										AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
						)
			,Projection = (SELECT   ISNULL(sum(Projection), 0)
								FROM	dbo.HEM_AWC_Projections
								WHERE   [Type] = '1-2' AND Unit_Type = 'portfolio_empl_size' 
										AND Unit_Name = HEM_AWC.Unit 
										AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
										AND month(Time_Id)= month(HEM_AWC.Time_Id))
	FROM    udf_HEM_AWC_Generate_Time_ID('portfolio_empl_size','1-2') HEM_AWC
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_AWC_Weekly_Open_1_2.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_AWC_Weekly_Open_3_5.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_HEM_AWC_Weekly_Open_3_5')
	DROP VIEW [dbo].[uv_HEM_AWC_Weekly_Open_3_5]
GO
CREATE VIEW [dbo].[uv_HEM_AWC_Weekly_Open_3_5] 
AS	
--HEM--
SELECT  [Type] = 'HEM'
		, Unit = 'HEM'
		, [Primary] = 'HEM'
		, WeeklyType = '3-5'
		, Time_Id
		, Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year,Time_Id), 2) 
        , Actual =
				  (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
                    FROM    HEM_AWC HEM_AWC1
                    WHERE   HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID 
							AND Year(HEM_AWC1.Date_of_injury) BETWEEN Year(HEM_awc.Time_ID) - 4 AND Year(HEM_awc.Time_ID) - 2
							AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
                   )
        , Projection =
                  (SELECT ISNULL(sum(Projection), 0)
                    FROM	dbo.HEM_AWC_Projections
                    WHERE   [Type] = '3-5' AND Unit_Type = 'hem' 							
							AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
							AND month(Time_Id) = month(HEM_AWC.Time_Id)
                    )
FROM      dbo.udf_HEM_AWC_Generate_Time_ID('hem','3-5') HEM_AWC

--Portfolio--
UNION ALL

SELECT  [Type] = 'portfolio'
		, Unit = RTRIM(Unit)
		, [Primary] = RTRIM([Primary])
		, WeeklyType = '3-5'
		, Time_Id
		, Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year,Time_Id), 2) 
        , Actual =
				  (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
                    FROM    HEM_AWC HEM_AWC1
                    WHERE   RTRIM(Portfolio) = RTRIM(HEM_AWC.Unit) 
							AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID 
							AND Year(HEM_AWC1.Date_of_injury) BETWEEN Year(HEM_awc.Time_ID) - 4 AND Year(HEM_awc.Time_ID) - 2
							AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
                   )
        , Projection =
                  (SELECT ISNULL(sum(Projection), 0)
                    FROM	dbo.HEM_AWC_Projections
                    WHERE   [Type] = '3-5' AND Unit_Type = 'portfolio' 
							AND RTRIM(Unit_Name) = RTRIM(HEM_AWC.Unit) 
							AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
							AND month(Time_Id) = month(HEM_AWC.Time_Id)
                    )
FROM      dbo.udf_HEM_AWC_Generate_Time_ID('portfolio','3-5') HEM_AWC

--Portfolio Hotel Summay--
UNION ALL
SELECT  [Type] = 'portfolio'
		, Unit = 'Hotel'
		, [Primary] = 'Hotel'
		, WeeklyType = '3-5'
		, Time_Id
		, Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year,Time_Id), 2) 
        , Actual =
				  (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
                    FROM    HEM_AWC HEM_AWC1
                    WHERE   RTRIM(Portfolio) in ('Accommodation','Pubs, Taverns and Bars')
							AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID 
							AND Year(HEM_AWC1.Date_of_injury) BETWEEN Year(HEM_awc.Time_ID) - 4 AND Year(HEM_awc.Time_ID) - 2
							AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
                   )
        , Projection =
                  (SELECT ISNULL(sum(Projection), 0)
                    FROM	dbo.HEM_AWC_Projections
                    WHERE   [Type] = '3-5' AND Unit_Type = 'portfolio' 
							AND RTRIM(Unit_Name) in ('Accommodation','Pubs, Taverns and Bars')
							AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
							AND month(Time_Id) = month(HEM_AWC.Time_Id)
                    )
FROM      dbo.udf_HEM_AWC_Generate_Time_ID('portfolio','3-5') HEM_AWC
WHERE     RTRIM(Unit) = 'Accommodation'

UNION ALL
SELECT  [Type] = 'group'
		, Unit = RTRIM(Unit)
		, [Primary] = RTRIM([Primary])
		, WeeklyType = '3-5'
		, Time_Id
		, Month_Year =LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
        , Actual =
                  (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
                    FROM    HEM_AWC HEM_AWC1
                    WHERE   dbo.udf_HEM_GetGroupByTeam(Team) = RTRIM(HEM_AWC.Unit) 
							AND NOT EXISTS (SELECT     1
											FROM    HEM_AWC HEM_AWC2
											WHERE   HEM_AWC2.claim_no = HEM_AWC1.claim_no 
													AND HEM_AWC2.time_id =
                                                        (SELECT max(time_Id)
                                                          FROM  HEM_AWC HEM_AWC3
                                                          WHERE HEM_AWC3.claim_no = HEM_AWC1.claim_no 
																	AND HEM_AWC3.time_id BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) 
																	AND HEM_AWC.Time_ID
														) 
													AND dbo.udf_HEM_GetGroupByTeam(HEM_AWC2.Team) <> dbo.udf_HEM_GetGroupByTeam(HEM_AWC1.Team)
											) 
                            AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) 
                            AND HEM_AWC.Time_ID AND Year(HEM_AWC1.Date_of_injury) BETWEEN Year(HEM_awc.Time_ID) - 4 AND Year(HEM_awc.Time_ID) - 2
                            AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC) 
                    )
        , Projection =
                          (SELECT   ISNULL(sum(Projection), 0)
                            FROM    dbo.HEM_AWC_Projections
                            WHERE   [Type] = '3-5' AND Unit_Type = 'group' 
									AND RTRIM(Unit_Name) = RTRIM(HEM_AWC.Unit) 
									AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
									AND month(Time_Id)= month(HEM_AWC.Time_Id)
							)
FROM      dbo.udf_HEM_AWC_Generate_Time_ID('group','3-5') HEM_AWC

UNION ALL
SELECT  [Type] = 'account_manager'
		, Unit = RTRIM(Unit)
		, [Primary] = RTRIM([Primary])
		, WeeklyType = '3-5'
		, Time_Id
		, Month_Year =LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
        , Actual =
                  (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
                    FROM    HEM_AWC HEM_AWC1
                    WHERE   RTRIM([Account_Manager]) = RTRIM(HEM_AWC.Unit) 
							AND NOT EXISTS (SELECT     1
											FROM    HEM_AWC HEM_AWC2
											WHERE   HEM_AWC2.claim_no = HEM_AWC1.claim_no 
													AND HEM_AWC2.time_id =
                                                        (SELECT max(time_Id)
                                                          FROM  HEM_AWC HEM_AWC3
                                                          WHERE HEM_AWC3.claim_no = HEM_AWC1.claim_no 
																	AND HEM_AWC3.time_id BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) 
																	AND HEM_AWC.Time_ID
														) 
													AND HEM_AWC2.[Account_Manager] <> HEM_AWC1.[Account_Manager]
											) 
                            AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) 
                            AND HEM_AWC.Time_ID AND Year(HEM_AWC1.Date_of_injury) BETWEEN Year(HEM_awc.Time_ID) - 4 AND Year(HEM_awc.Time_ID) - 2 
                            AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
                    )
        , Projection =
                          (SELECT   ISNULL(sum(Projection), 0)
                            FROM    dbo.HEM_AWC_Projections
                            WHERE   [Type] = '3-5' AND Unit_Type = 'account_manager' 
									AND RTRIM(Unit_Name) = RTRIM(HEM_AWC.Unit) 
									AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
									AND month(Time_Id)= month(HEM_AWC.Time_Id)
							)
FROM      dbo.udf_HEM_AWC_Generate_Time_ID('account_manager','3-5') HEM_AWC

UNION ALL
SELECT  [Type] = 'team'
		,Unit = Unit
		,[Primary] = RTRIM([Primary])
		,WeeklyType = '3-5'
		, Time_Id
		,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
        ,Actual =
                  (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
						FROM	HEM_AWC HEM_AWC1
						WHERE   Team = HEM_AWC.Unit 
								AND dbo.udf_HEM_GetGroupByTeam(Team) = HEM_AWC.[Primary]
								AND NOT EXISTS  (SELECT  1
                                                 FROM   HEM_AWC HEM_AWC2
                                                 WHERE  HEM_AWC2.claim_no = HEM_AWC1.claim_no 
														AND HEM_AWC2.time_id =(SELECT	max(time_Id)
																				FROM    HEM_AWC HEM_AWC3
																				WHERE   HEM_AWC3.claim_no = HEM_AWC1.claim_no 
																						AND HEM_AWC3.time_id BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID
																				) 
														AND dbo.udf_HEM_GetGroupByTeam(HEM_AWC2.Team) <> dbo.udf_HEM_GetGroupByTeam(HEM_AWC1.Team)
												) 
								AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2,HEM_AWC.Time_ID) AND HEM_AWC.Time_ID 
                                AND Year(HEM_AWC1.Date_of_injury) BETWEEN Year(HEM_awc.Time_ID) - 4 AND Year(HEM_awc.Time_ID) - 2 
                                AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
                    )
        ,Projection =
                  (SELECT   ISNULL(sum(Projection), 0)
					FROM    dbo.HEM_AWC_Projections
					WHERE   [Type] = '3-5' AND Unit_Type = 'team' 
							AND Unit_Name = HEM_AWC.Unit
							AND year(Time_Id)  = Year(HEM_AWC.Time_Id) 
							AND month(Time_Id) = month(HEM_AWC.Time_Id)
					)
FROM      dbo.udf_HEM_AWC_Generate_Time_ID('team','3-5') HEM_AWC

UNION ALL
SELECT  [Type] = 'am_empl_size'
		,Unit = Unit
		,[Primary] = RTRIM([Primary])
		,WeeklyType = '3-5'
		, Time_Id
		,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
        ,Actual =
                  (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
						FROM	HEM_AWC HEM_AWC1
						WHERE   Empl_Size = HEM_AWC.Unit
								AND [Account_Manager] = HEM_AWC.[Primary]
								AND NOT EXISTS  (SELECT  1
                                                 FROM   HEM_AWC HEM_AWC2
                                                 WHERE  HEM_AWC2.claim_no = HEM_AWC1.claim_no 
														AND HEM_AWC2.time_id =(SELECT	max(time_Id)
																				FROM    HEM_AWC HEM_AWC3
																				WHERE   HEM_AWC3.claim_no = HEM_AWC1.claim_no 
																						AND HEM_AWC3.time_id BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID
																				) 
														AND HEM_AWC2.[Account_Manager] <> HEM_AWC1.[Account_Manager]
												) 
								AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2,HEM_AWC.Time_ID) AND HEM_AWC.Time_ID 
                                AND Year(HEM_AWC1.Date_of_injury) BETWEEN Year(HEM_awc.Time_ID) - 4 AND Year(HEM_awc.Time_ID) - 2
                                AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
                    )
        ,Projection =
                  (SELECT   ISNULL(sum(Projection), 0)
					FROM    dbo.HEM_AWC_Projections
					WHERE   [Type] = '3-5' AND Unit_Type = 'am_empl_size' 
							AND Unit_Name = HEM_AWC.Unit 
							AND year(Time_Id)  = Year(HEM_AWC.Time_Id) 
							AND month(Time_Id) = month(HEM_AWC.Time_Id)
					)
FROM      dbo.udf_HEM_AWC_Generate_Time_ID('am_empl_size','3-5') HEM_AWC

UNION ALL
SELECT  [Type] = 'portfolio_empl_size'
		,Unit = Unit
		,[Primary] = RTRIM([Primary])
		,WeeklyType = '3-5'
		, Time_Id
		,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
        ,Actual =
                  (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
						FROM	HEM_AWC HEM_AWC1
						WHERE   Empl_Size = HEM_AWC.Unit
								AND [Portfolio] = HEM_AWC.[Primary]
								AND NOT EXISTS  (SELECT  1
                                                 FROM   HEM_AWC HEM_AWC2
                                                 WHERE  HEM_AWC2.claim_no = HEM_AWC1.claim_no 
														AND HEM_AWC2.time_id =(SELECT	max(time_Id)
																				FROM    HEM_AWC HEM_AWC3
																				WHERE   HEM_AWC3.claim_no = HEM_AWC1.claim_no 
																						AND HEM_AWC3.time_id BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID
																				) 
														AND HEM_AWC2.[Portfolio] <> HEM_AWC1.[Portfolio]
												) 
								AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2,HEM_AWC.Time_ID) AND HEM_AWC.Time_ID 
                                AND Year(HEM_AWC1.Date_of_injury) BETWEEN Year(HEM_awc.Time_ID) - 4 AND Year(HEM_awc.Time_ID) - 2
                                AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
                    )
        ,Projection =
                  (SELECT   ISNULL(sum(Projection), 0)
					FROM    dbo.HEM_AWC_Projections
					WHERE   [Type] = '3-5' AND Unit_Type = 'portfolio_empl_size' 
							AND Unit_Name = HEM_AWC.Unit 
							AND year(Time_Id)  = Year(HEM_AWC.Time_Id) 
							AND month(Time_Id) = month(HEM_AWC.Time_Id)
					)
FROM      dbo.udf_HEM_AWC_Generate_Time_ID('portfolio_empl_size','3-5') HEM_AWC

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_AWC_Weekly_Open_3_5.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_AWC_Weekly_Open_5_Plus.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_HEM_AWC_Weekly_Open_5_Plus')
	DROP VIEW [dbo].[uv_HEM_AWC_Weekly_Open_5_Plus]
GO
CREATE VIEW [dbo].[uv_HEM_AWC_Weekly_Open_5_Plus] 
AS 
--HEM--
SELECT  [Type] = 'HEM'
		, Unit = 'HEM'
		, [Primary] ='HEM'
		, WeeklyType = '5-plus'
		, Time_Id
		, Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, 
                      Time_Id), 2) 
        , Actual = (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
                    FROM    HEM_AWC HEM_AWC1
                    WHERE   HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) 
										AND HEM_AWC.Time_ID 
							AND Year(HEM_AWC1.Date_of_injury) < Year(HEM_awc.Time_ID) - 4 
							AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
					)
		, Projection =(SELECT   ISNULL(sum(Projection), 0)
						FROM    dbo.HEM_AWC_Projections
						WHERE   [Type] = '5-plus' AND Unit_Type = 'hem' 								
								AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
								AND month(Time_Id)= month(HEM_AWC.Time_Id)
						)
FROM      dbo.udf_HEM_AWC_Generate_Time_ID('hem','5-plus')   HEM_AWC

--Portfolio Hotel Summay--
UNION ALL
SELECT  [Type] = 'portfolio'
		, Unit = RTRIM(Unit)
		, [Primary] = RTRIM([Primary])
		, WeeklyType = '5-plus'
		, Time_Id
		, Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, 
                      Time_Id), 2) 
        , Actual = (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
                    FROM    HEM_AWC HEM_AWC1
                    WHERE   RTRIM(Portfolio) = RTRIM(HEM_AWC.Unit) 
							AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) 
										AND HEM_AWC.Time_ID 
							AND Year(HEM_AWC1.Date_of_injury) < Year(HEM_awc.Time_ID) - 4 
							AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
					)
		, Projection =(SELECT   ISNULL(sum(Projection), 0)
						FROM    dbo.HEM_AWC_Projections
						WHERE   [Type] = '5-plus' AND Unit_Type = 'portfolio' 
								AND RTRIM(Unit_Name) = RTRIM(HEM_AWC.Unit) 
								AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
								AND month(Time_Id)= month(HEM_AWC.Time_Id)
						)
FROM      dbo.udf_HEM_AWC_Generate_Time_ID('portfolio','5-plus')   HEM_AWC

--Portfolio Hotel Summay--
UNION ALL
SELECT  [Type] = 'portfolio'
		, Unit = 'Hotel'
		, [Primary] = 'Hotel'
		, WeeklyType = '5-plus'
		, Time_Id
		, Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, 
                      Time_Id), 2) 
        , Actual = (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
                    FROM    HEM_AWC HEM_AWC1
                    WHERE   RTRIM(Portfolio) in ('Accommodation','Pubs, Taverns and Bars')
							AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) 
										AND HEM_AWC.Time_ID 
							AND Year(HEM_AWC1.Date_of_injury) < Year(HEM_awc.Time_ID) - 4
							AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
					)
		, Projection =(SELECT   ISNULL(sum(Projection), 0)
						FROM    dbo.HEM_AWC_Projections
						WHERE   [Type] = '5-plus' AND Unit_Type = 'portfolio' 
								AND RTRIM(Unit_Name) in ('Accommodation','Pubs, Taverns and Bars')
								AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
								AND month(Time_Id)= month(HEM_AWC.Time_Id)
						)
FROM      dbo.udf_HEM_AWC_Generate_Time_ID('portfolio','5-plus')   HEM_AWC
WHERE     RTRIM(Unit) = 'Accommodation'
--end Portfolio Hotel Summay--

UNION ALL
SELECT  [Type] = 'group'
		, Unit = RTRIM(Unit)
		, [Primary] = RTRIM([Primary])
		, WeeklyType = '5-plus'
		, Time_Id
		,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
        ,Actual =(SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
                    FROM    HEM_AWC HEM_AWC1
                    WHERE   dbo.udf_HEM_GetGroupByTeam(Team) = RTRIM(HEM_AWC.Unit)
							AND NOT EXISTS
								(SELECT 1
								 FROM   HEM_AWC HEM_AWC2
								 WHERE  HEM_AWC2.claim_no = HEM_AWC1.claim_no 
										AND HEM_AWC2.time_id =
													(SELECT max(time_Id)
													  FROM  HEM_AWC HEM_AWC3
													  WHERE HEM_AWC3.claim_no = HEM_AWC1.claim_no 
															AND HEM_AWC3.time_id BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) 
															AND HEM_AWC.Time_ID
													) 
										AND dbo.udf_HEM_GetGroupByTeam(HEM_AWC2.Team) <> dbo.udf_HEM_GetGroupByTeam(HEM_AWC1.Team)
								) 
							AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2,HEM_AWC.Time_ID) 
                            AND HEM_AWC.Time_ID AND Year(HEM_AWC1.Date_of_injury) < Year(HEM_awc.Time_ID) - 4
                            AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC) 
                    )
		,Projection =(SELECT   ISNULL(sum(Projection), 0)
						FROM    dbo.HEM_AWC_Projections
						WHERE   [Type] = '5-plus' AND Unit_Type = 'group' 
								AND RTRIM(Unit_Name) = RTRIM(HEM_AWC.Unit) 
								AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
								AND month(Time_Id)= month(HEM_AWC.Time_Id)
					)
FROM      dbo.udf_HEM_AWC_Generate_Time_ID('group','5-plus')   HEM_AWC

UNION ALL
SELECT  [Type] = 'account_manager'
		, Unit = RTRIM(Unit)
		, [Primary] = RTRIM([Primary])
		, WeeklyType = '5-plus'
		, Time_Id
		,Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
        ,Actual =(SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
                    FROM    HEM_AWC HEM_AWC1
                    WHERE   RTRIM([Account_Manager]) = RTRIM(HEM_AWC.Unit) 
							AND NOT EXISTS
								(SELECT 1
								 FROM   HEM_AWC HEM_AWC2
								 WHERE  HEM_AWC2.claim_no = HEM_AWC1.claim_no 
										AND HEM_AWC2.time_id =
													(SELECT max(time_Id)
													  FROM  HEM_AWC HEM_AWC3
													  WHERE HEM_AWC3.claim_no = HEM_AWC1.claim_no 
															AND HEM_AWC3.time_id BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) 
															AND HEM_AWC.Time_ID
													) 
										AND HEM_AWC2.[Account_Manager] <> HEM_AWC1.[Account_Manager]
								) 
							AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2,HEM_AWC.Time_ID) 
                            AND HEM_AWC.Time_ID AND Year(HEM_AWC1.Date_of_injury) < Year(HEM_awc.Time_ID) - 4 
                            AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
                    )
		,Projection =(SELECT   ISNULL(sum(Projection), 0)
						FROM    dbo.HEM_AWC_Projections
						WHERE   [Type] = '5-plus' AND Unit_Type = 'account_manager' 
								AND RTRIM(Unit_Name) = RTRIM(HEM_AWC.Unit) 
								AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
								AND month(Time_Id)= month(HEM_AWC.Time_Id)
					)
FROM      dbo.udf_HEM_AWC_Generate_Time_ID('account_manager','5-plus')   HEM_AWC

UNION ALL
SELECT     [Type] = 'team'
, Unit = Unit
, [Primary] = RTRIM([Primary])
, WeeklyType = '5-plus'
, Time_Id
, Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
, Actual =(SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
            FROM    HEM_AWC HEM_AWC1
            WHERE   Team = HEM_AWC.Unit 
					AND dbo.udf_HEM_GetGroupByTeam(Team) = HEM_AWC.[Primary]
					AND NOT EXISTS (SELECT  1
                                    FROM    HEM_AWC HEM_AWC2
                                    WHERE   HEM_AWC2.claim_no = HEM_AWC1.claim_no 
											AND HEM_AWC2.time_id =(SELECT   max(time_Id)
                                                                      FROM  HEM_AWC HEM_AWC3
                                                                      WHERE HEM_AWC3.claim_no = HEM_AWC1.claim_no 
																			AND HEM_AWC3.time_id BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID
																	) 
                                            AND dbo.udf_HEM_GetGroupByTeam(HEM_AWC2.Team) <> dbo.udf_HEM_GetGroupByTeam(HEM_AWC1.Team)
                                    ) 
                    AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID 
                    AND Year(HEM_AWC1.Date_of_injury) < Year(HEM_awc.Time_ID) - 4
                    AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
            )
, Projection =  (SELECT ISNULL(sum(Projection), 0)
					FROM	dbo.HEM_AWC_Projections
                    WHERE   [Type] = '5-plus' AND Unit_Type = 'team' AND Unit_Name = HEM_AWC.Unit
							 AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
							 AND month(Time_Id)= month(HEM_AWC.Time_Id)
                )
FROM      dbo.udf_HEM_AWC_Generate_Time_ID('team','5-plus') HEM_AWC

UNION ALL
SELECT     [Type] = 'am_empl_size'
, Unit = Unit
, [Primary] = RTRIM([Primary])
, WeeklyType = '5-plus'
, Time_Id
, Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
, Actual =(SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
            FROM    HEM_AWC HEM_AWC1
            WHERE   Empl_Size = HEM_AWC.Unit
					AND [Account_Manager] = HEM_AWC.[Primary]
					AND NOT EXISTS (SELECT  1
                                    FROM    HEM_AWC HEM_AWC2
                                    WHERE   HEM_AWC2.claim_no = HEM_AWC1.claim_no 
											AND HEM_AWC2.time_id =(SELECT   max(time_Id)
                                                                      FROM  HEM_AWC HEM_AWC3
                                                                      WHERE HEM_AWC3.claim_no = HEM_AWC1.claim_no 
																			AND HEM_AWC3.time_id BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID
																	) 
                                            AND HEM_AWC2.[Account_Manager] <> HEM_AWC1.[Account_Manager]
                                    ) 
                    AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID 
                    AND Year(HEM_AWC1.Date_of_injury) < Year(HEM_awc.Time_ID) - 4
                    AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
            )
, Projection =  (SELECT ISNULL(sum(Projection), 0)
					FROM	dbo.HEM_AWC_Projections
                    WHERE   [Type] = '5-plus' AND Unit_Type = 'am_empl_size' AND Unit_Name = HEM_AWC.Unit
							 AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
							 AND month(Time_Id)= month(HEM_AWC.Time_Id)
                )
FROM     dbo.udf_HEM_AWC_Generate_Time_ID('am_empl_size','5-plus')    HEM_AWC

UNION ALL
SELECT     [Type] = 'portfolio_empl_size'
, Unit = Unit
, [Primary] = RTRIM([Primary])
, WeeklyType = '5-plus'
, Time_Id
, Month_Year = LEFT(datename(month, Time_Id), 3) + '-' + RIGHT(datename(year, Time_Id), 2) 
, Actual =(SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
            FROM    HEM_AWC HEM_AWC1
            WHERE   Empl_Size = HEM_AWC.Unit
					AND [Portfolio] = HEM_AWC.[Primary]
					AND NOT EXISTS (SELECT  1
                                    FROM    HEM_AWC HEM_AWC2
                                    WHERE   HEM_AWC2.claim_no = HEM_AWC1.claim_no 
											AND HEM_AWC2.time_id =(SELECT   max(time_Id)
                                                                      FROM  HEM_AWC HEM_AWC3
                                                                      WHERE HEM_AWC3.claim_no = HEM_AWC1.claim_no 
																			AND HEM_AWC3.time_id BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID
																	) 
                                            AND HEM_AWC2.[portfolio] <> HEM_AWC1.[portfolio]
                                    ) 
                    AND HEM_AWC1.Time_ID BETWEEN DATEADD(mm, - 2, HEM_AWC.Time_ID) AND HEM_AWC.Time_ID 
                    AND Year(HEM_AWC1.Date_of_injury) < Year(HEM_awc.Time_ID) - 4
                    AND HEM_AWC.Time_ID <= (select MAX(Time_ID) from HEM_AWC)
            )
, Projection =  (SELECT ISNULL(sum(Projection), 0)
					FROM	dbo.HEM_AWC_Projections
                    WHERE   [Type] = '5-plus' AND Unit_Type = 'portfolio_empl_size' AND Unit_Name = HEM_AWC.Unit
							 AND year(Time_Id) = Year(HEM_AWC.Time_Id) 
							 AND month(Time_Id)= month(HEM_AWC.Time_Id)
                )
FROM    dbo.udf_HEM_AWC_Generate_Time_ID('portfolio_empl_size','5-plus') HEM_AWC

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_AWC_Weekly_Open_5_Plus.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_AWC_Whole_HEM.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_HEM_AWC_Whole_HEM')
	DROP VIEW [dbo].[uv_HEM_AWC_Whole_HEM]
GO
CREATE VIEW [dbo].[uv_HEM_AWC_Whole_HEM] 
AS
	-----HEM------
	SELECT  [UnitType] = 'HEM'
			,Unit = 'HEM'
			,[Primary] = 'HEM'
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Actual' 
			,No_of_Active_Weekly_Claims = 
				isnull(
						(SELECT     COUNT(DISTINCT HEM_AWC1.claim_no)
							FROM    HEM_AWC HEM_AWC1
							WHERE   HEM_AWC1.time_id >= dateadd(mm, - 2,(SELECT max(time_id) FROM  HEM_AWC))						
									AND year(Date_of_Injury) = Year(HEM_AWC.Transaction_Year))
					, 0)
	FROM      dbo.udf_Whole_HEM_Generate_Years('hem')HEM_AWC
	GROUP BY  Year(Transaction_Year)

	UNION ALL ----Projection----
	SELECT  [UnitType] = 'HEM'
			,Unit = 'HEM'
			,[Primary] = 'HEM'
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Projection'
			,No_of_Active_Weekly_Claims = 
					isnull(
						(SELECT top 1 Projection
							FROM   dbo.HEM_AWC_Projections
							WHERE  [Type] = 'Whole-HEM' AND Unit_Type = 'HEM' 
									AND RTRIM(Unit_Name) = 'HEM'
									AND Time_Id = DATEADD(month,- 1,HEM_AWC.Transaction_Year) 
							ORDER BY time_id DESC									
						)
					, 0)
	FROM     dbo.udf_Whole_HEM_Generate_Years('hem')  HEM_AWC	
	-----End HEM------
	
	-----Portfolio------
	UNION ALL
	SELECT  [UnitType] = 'portfolio'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Actual' 
			,No_of_Active_Weekly_Claims = isnull(
				(SELECT     COUNT(DISTINCT HEM_AWC1.claim_no)
				  FROM         HEM_AWC HEM_AWC1
				  WHERE     RTRIM(portfolio) = RTRIM(HEM_AWC.[Primary]) 
							AND HEM_AWC1.time_id >= dateadd(mm, - 2,
								(SELECT    max(time_id) FROM  HEM_AWC)) 
							AND year(Date_of_Injury) = Year(HEM_AWC.Transaction_Year))
				, 0)
	FROM     dbo.udf_Whole_HEM_Generate_Years('portfolio') HEM_AWC

	UNION ALL ----Projection----
	SELECT  [UnitType] = 'portfolio'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Projection'
			,No_of_Active_Weekly_Claims = isnull(
				(SELECT top 1 Projection
				  FROM   dbo.HEM_AWC_Projections
				  WHERE [Type] = 'Whole-HEM' AND Unit_Type = 'portfolio' 
						AND RTRIM(Unit_Name) = RTRIM(HEM_AWC.Unit) 
						AND Time_Id = DATEADD(month,- 1,HEM_AWC.Transaction_Year) 
				  ORDER BY time_id DESC	
				)
				, 0)
	FROM     dbo.udf_Whole_HEM_Generate_Years('portfolio') HEM_AWC	
		
	--Portfolio Hotel Summary--
	UNION ALL
	SELECT  [UnitType] = 'portfolio'
			,Unit = 'Hotel'
			,[Primary] = 'Hotel'
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Actual' 
			,No_of_Active_Weekly_Claims = isnull(
				(SELECT     COUNT(DISTINCT HEM_AWC1.claim_no)
				  FROM         HEM_AWC HEM_AWC1
				  WHERE     RTRIM(portfolio) in ('Accommodation','Pubs, Taverns and Bars')
							AND HEM_AWC1.time_id >= dateadd(mm, - 2,
								(SELECT    max(time_id) FROM  HEM_AWC)) 
							AND year(Date_of_Injury) = Year(HEM_AWC.Transaction_Year))
				, 0)
	FROM    dbo.udf_Whole_HEM_Generate_Years('portfolio')  HEM_AWC
	WHERE	RTRIM([Primary]) = 'Accommodation'

	UNION ALL ----Projection----
	SELECT  [UnitType] = 'portfolio'
			,Unit = 'Hotel'
			,[Primary] = 'Hotel'
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Projection'
			,No_of_Active_Weekly_Claims = isnull(
				(SELECT top 1 Projection
				  FROM   dbo.HEM_AWC_Projections
				  WHERE [Type] = 'Whole-HEM' AND Unit_Type = 'portfolio' 
						AND RTRIM(Unit_Name) in ('Accommodation','Pubs, Taverns and Bars')
						AND Time_Id = DATEADD(month,- 1,HEM_AWC.Transaction_Year) 
				  ORDER BY time_id DESC	
				)
				, 0)
	FROM       dbo.udf_Whole_HEM_Generate_Years('portfolio')  HEM_AWC
	WHERE RTRIM([Primary]) = 'Accommodation'
	-----End Portfolio------
	
	-----Group------
	UNION ALL
	SELECT	[UnitType] = 'group'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Actual'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
					  FROM  HEM_AWC HEM_AWC1
					  WHERE dbo.udf_TMF_GetGroupByTeam(Team) = RTRIM(HEM_AWC.[Primary]) 
							AND HEM_AWC1.time_id >= dateadd(mm, - 2,
								(SELECT     max(time_id) FROM HEM_AWC)) 
							AND year(Date_of_Injury) = Year(HEM_AWC.Transaction_Year))
					, 0)
	FROM     dbo.udf_Whole_HEM_Generate_Years('group')  HEM_AWC
	
	UNION ALL
	SELECT  [UnitType] = 'group'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year) 
			,[Type] = 'Projection' 
			,No_of_Active_Weekly_Claims = isnull(
					(SELECT     top 1 Projection
						FROM    dbo.HEM_AWC_Projections
						WHERE   [Type] = 'Whole-HEM' AND Unit_Type = 'group' 
								AND RTRIM(Unit_Name) = RTRIM(HEM_AWC.Unit) 
								AND Time_Id = DATEADD(month,- 1,HEM_AWC.Transaction_Year) 
						ORDER BY time_id DESC	
					)
					, 0)
	FROM     dbo.udf_Whole_HEM_Generate_Years('group')  HEM_AWC	
	-----End Group------	
	
	-----Account manager------
	UNION ALL
	SELECT	[UnitType] = 'account_manager'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Actual'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
					  FROM  HEM_AWC HEM_AWC1
					  WHERE RTRIM([Account_Manager]) = RTRIM(HEM_AWC.[Primary]) 
							AND HEM_AWC1.time_id >= dateadd(mm, - 2,
								(SELECT     max(time_id) FROM HEM_AWC)) 
							AND year(Date_of_Injury) = Year(HEM_AWC.Transaction_Year))
					, 0)
	FROM      dbo.udf_Whole_HEM_Generate_Years('account_manager') HEM_AWC
	
	UNION ALL
	SELECT  [UnitType] = 'account_manager'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year) 
			,[Type] = 'Projection' 
			,No_of_Active_Weekly_Claims = isnull(
					(SELECT     top 1 Projection
						FROM    dbo.HEM_AWC_Projections
						WHERE   [Type] = 'Whole-HEM' AND Unit_Type = 'account_manager' 
								AND RTRIM(Unit_Name) = RTRIM(HEM_AWC.Unit) 
								AND Time_Id = DATEADD(month,- 1,HEM_AWC.Transaction_Year) 
						ORDER BY time_id DESC	
					)
					, 0)
	FROM     dbo.udf_Whole_HEM_Generate_Years('account_manager') HEM_AWC
	-----End Account manager------	
	
	---Team---
	UNION ALL
	SELECT  [UnitType] = 'team'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Actual'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
					  FROM  HEM_AWC HEM_AWC1
					  WHERE dbo.udf_TMF_GetGroupByTeam(Team) = RTRIM(HEM_AWC.[Primary]) AND RTRIM(Team) = RTRIM(HEM_AWC.Unit) 
					  AND HEM_AWC1.time_id >= dateadd(mm, - 2,(SELECT max(time_id) FROM HEM_AWC)) 
							AND year(Date_of_Injury) = Year(HEM_AWC.Transaction_Year))
					, 0)
	FROM     dbo.udf_Whole_HEM_Generate_Years('team') HEM_AWC
	
	UNION ALL
	SELECT  [UnitType] = 'team'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year =Year(Transaction_Year)
			,[Type] = 'Projection'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   top 1 Projection
					  FROM  dbo.HEM_AWC_Projections
					  WHERE [Type] = 'Whole-HEM' AND Unit_Type = 'team' 
								AND RTRIM(Unit_Name) = RTRIM(HEM_AWC.Unit)
								AND Time_Id = DATEADD(month,- 1,HEM_AWC.Transaction_Year) 
					  ORDER BY time_id DESC	
					)
					, 0)
	FROM  dbo.udf_Whole_HEM_Generate_Years('team')  HEM_AWC
	
	---AM_EMPL_SIZE---
	UNION ALL
	SELECT  [UnitType] = 'am_empl_size'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Actual'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
					  FROM  HEM_AWC HEM_AWC1
					  WHERE RTRIM([Account_Manager]) = RTRIM(HEM_AWC.[Primary]) AND RTRIM(Empl_Size) = RTRIM(HEM_AWC.Unit) 
					  AND HEM_AWC1.time_id >= dateadd(mm, - 2,(SELECT max(time_id) FROM HEM_AWC)) 
							AND year(Date_of_Injury) = Year(HEM_AWC.Transaction_Year))
					, 0)
	FROM   dbo.udf_Whole_HEM_Generate_Years('am_empl_size') HEM_AWC
	
	UNION ALL
	SELECT  [UnitType] = 'am_empl_size'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year =Year(Transaction_Year)
			,[Type] = 'Projection'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   top 1 Projection
					  FROM  dbo.HEM_AWC_Projections
					  WHERE [Type] = 'Whole-HEM' AND Unit_Type = 'am_empl_size' 
								AND RTRIM(Unit_Name) = RTRIM(HEM_AWC.Unit)
								AND Time_Id = DATEADD(month,- 1,HEM_AWC.Transaction_Year) 
					  ORDER BY time_id DESC	
					)
					, 0)
	FROM     dbo.udf_Whole_HEM_Generate_Years('am_empl_size') HEM_AWC
	
	---Portfolio_EMPL_SIZE---
	UNION ALL
	SELECT  [UnitType] = 'portfolio_empl_size'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Year)
			,[Type] = 'Actual'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   COUNT(DISTINCT HEM_AWC1.claim_no)
					  FROM  HEM_AWC HEM_AWC1
					  WHERE RTRIM([Portfolio]) = RTRIM(HEM_AWC.[Primary]) AND RTRIM(Empl_Size) = RTRIM(HEM_AWC.Unit) 
					  AND HEM_AWC1.time_id >= dateadd(mm, - 2,(SELECT max(time_id) FROM HEM_AWC)) 
							AND year(Date_of_Injury) = Year(HEM_AWC.Transaction_Year))
					, 0)
	FROM     dbo.udf_Whole_HEM_Generate_Years('portfolio_empl_size')    HEM_AWC
	
	UNION ALL
	SELECT  [UnitType] = 'portfolio_empl_size'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year =Year(Transaction_Year)
			,[Type] = 'Projection'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   top 1 Projection
					  FROM  dbo.HEM_AWC_Projections
					  WHERE [Type] = 'Whole-HEM' AND Unit_Type = 'portfolio_empl_size' 
								AND RTRIM(Unit_Name) = RTRIM(HEM_AWC.Unit)
								AND Time_Id = DATEADD(month,- 1,HEM_AWC.Transaction_Year) 
					  ORDER BY time_id DESC	
					)
					, 0)
	FROM   dbo.udf_Whole_HEM_Generate_Years('portfolio_empl_size') HEM_AWC
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_AWC_Whole_HEM.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_HEM_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current')
	DROP VIEW [dbo].[uv_HEM_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current]
GO
CREATE VIEW [dbo].[uv_HEM_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current] 
AS
	WITH temp AS 
	(
		select * 
		from
			(select 0 as month_period
			union all
			select 2 as month_period
			union all
			select 5 as month_period
			union all
			select 11 as month_period) as month_period
			cross join
			(select 13 as Measure_months
			union all
			select 26 as Measure_months
			union all
			select 52 as Measure_months
			union all
			select 78 as Measure_months
			union all
			select 104 as Measure_months) as measure_months		
			cross join
			(
			select distinct 'Hospitality' as EmployerSize_Group,[Type]='portfolio'
			from HEM_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
			   
			union
			select distinct rtrim(Portfolio) as EmployerSize_Group, [Type]='portfolio'
			from HEM_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				and rtrim(Portfolio) IS NOT NULL
				
			union
			select distinct 'Hospitality' as EmployerSize_Group, [Type]='group'
			from HEM_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				
			union
			select distinct dbo.udf_HEM_GetGroupByTeam(Team) as EmployerSize_Group, [Type]='group'
			from HEM_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				
			union
			select distinct 'Hospitality' as EmployerSize_Group, [Type]='account_manager'
			from HEM_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				
			union
			select distinct rtrim([Account_Manager]) as EmployerSize_Group, [Type]='account_manager'
			from HEM_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				and rtrim([Account_Manager]) is not null
				
			union
			select distinct 'Hotel' as EmployerSize_Group, [Type]='portfolio'
			from HEM_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				and rtrim(Portfolio) IS NOT NULL	
				
			) as temp_value
	)
	
	--Portfolio---	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='portfolio'
			,'Hospitality' as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_HEM_RTW_getTargetAndBase(Remuneration_End,'target','','Hospitality',NULL,Measure),0)
	from HEM_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Measure,Remuneration_Start, Remuneration_End
	
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='portfolio'
			,rtrim(Portfolio) as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_HEM_RTW_getTargetAndBase(Remuneration_End,'target','portfolio',rtrim(Portfolio),NULL,Measure),0)
	from HEM_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11) and rtrim(Portfolio) IS NOT NULL

	group by Portfolio,Measure,Remuneration_Start, Remuneration_End
	
	--hotel summary--
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='portfolio'
			,'Hotel' as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_HEM_RTW_getTargetAndBase(Remuneration_End,'target','portfolio','Hotel',NULL,Measure),0)
	from HEM_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11) and rtrim(Portfolio) IS NOT NULL
		   and RTRIM(Portfolio) in ('Accommodation','Pubs, Taverns and Bars')

	group by Measure,Remuneration_Start, Remuneration_End
	
	---Group---
	union all
	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='group'
			,'Hospitality' as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_HEM_RTW_getTargetAndBase(Remuneration_End,'target','','Hospitality',NULL,Measure),0)
	from HEM_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Measure,Remuneration_Start, Remuneration_End
	
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='group'
			,dbo.udf_HEM_GetGroupByTeam(Team) as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_HEM_RTW_getTargetAndBase(Remuneration_End,'target','group',dbo.udf_HEM_GetGroupByTeam(Team),NULL,Measure),0)
	from HEM_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by dbo.udf_HEM_GetGroupByTeam(Team),Measure,Remuneration_Start, Remuneration_End
	
	---Account manager---
	union all
	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='account_manager'
			,'Hospitality' as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_HEM_RTW_getTargetAndBase(Remuneration_End,'target','','Hospitality',NULL,Measure),0)
	from HEM_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Measure,Remuneration_Start, Remuneration_End
	
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='account_manager'
			,rtrim([Account_Manager]) as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_HEM_RTW_getTargetAndBase(Remuneration_End,'target','account_manager',rtrim([Account_Manager]),NULL,Measure),0)
	from HEM_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim([Account_Manager]) is not null

	group by [Account_Manager],Measure,Remuneration_Start, Remuneration_End	
	
	--add missing measure months
	union all
	select Month_period=case when month_period = 0
							then 1
						 when month_period = 2
							then 3
						 when month_period = 5
							then 6
						 when month_period = 11
							then 12
					end
		  ,[Type]
		  ,EmployerSize_Group
		  ,Measure_months
		  ,LT = 0
		  ,WGT = 0
		  ,AVGDURN = 0
		  ,[Target] = 0
	from temp as tmp
	where Measure_months not in (select distinct Measure from HEM_RTW uv
							where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
							and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) = tmp.month_period
							and case when [Type] = 'group' then (case when EmployerSize_Group <> 'Hospitality' then dbo.udf_HEM_GetGroupByTeam(rtrim(uv.Team)) else 'Hospitality' end)
									 when [Type] = 'portfolio' then (case when EmployerSize_Group <> 'Hospitality' 
																			then (case when EmployerSize_Group = 'hotel' and uv.Portfolio in ('Accommodation','Pubs, Taverns and Bars') then 'hotel'
																					   else rtrim(uv.Portfolio)
																				  end
																			     )
																		  else 'Hospitality' 
																	 end)
									 when [Type] = 'account_manager' then (case when EmployerSize_Group <> 'Hospitality' then rtrim(uv.Account_Manager) else 'Hospitality' end)
								end
									 = EmployerSize_Group )
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Previous.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_HEM_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Previous')
	DROP VIEW [dbo].[uv_HEM_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Previous]
GO
CREATE VIEW [dbo].[uv_HEM_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Previous] 
AS
	--Employer size---
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='portfolio'
			,'Hospitality' as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from HEM_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.HEM_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)
	
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='portfolio'
			,rtrim(Portfolio) as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from HEM_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.HEM_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Portfolio,Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)	
	
	--Portfolio Hotel Summary--
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='portfolio'
			,'Hotel' as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from HEM_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.HEM_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and RTRIM([Portfolio]) in ('Accommodation','Pubs, Taverns and Bars')

	group by Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)	
	
	---Group---
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='group'
			,'Hospitality' as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from HEM_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.HEM_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)
	
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='group'
			,dbo.udf_HEM_GetGroupByTeam(Team) as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from HEM_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.HEM_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by dbo.udf_HEM_GetGroupByTeam(Team),Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)	

	---Account manager---
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='account_manager'
			,'Hospitality' as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from HEM_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.HEM_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)
	
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='account_manager'
			,rtrim([Account_Manager]) as EmployerSize_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from HEM_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.HEM_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim([Account_Manager]) is not null

	group by [Account_Manager],Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)	
	
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Previous.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Agency_Group_Rolling_Month_1.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================
--select * from uv_HEM_RTW_Agency_Group_Rolling_Month_1
IF EXISTS(select * FROM sys.views where name = 'uv_HEM_RTW_Agency_Group_Rolling_Month_1')
	DROP VIEW [dbo].[uv_HEM_RTW_Agency_Group_Rolling_Month_1]
GO
CREATE VIEW [dbo].[uv_HEM_RTW_Agency_Group_Rolling_Month_1] 
AS

SELECT     dbo.udf_HEM_GetGroupByTeam(Team) as EmployerSize_Group
		  ,[Type] = 'group'
		  ,uv.Remuneration_Start 
		  ,uv.Remuneration_End
		  ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
          
          , Measure AS Measure_months
          , SUM(uv.LT) AS LT
          , SUM(uv.WGT) AS WGT
          , SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','group',dbo.udf_HEM_GetGroupByTeam(Team),NULL,uv.Measure)									
		  , Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'base','group',dbo.udf_HEM_GetGroupByTeam(Team),NULL,uv.Measure)
						
FROM         dbo.HEM_RTW uv where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
GROUP BY  dbo.udf_HEM_GetGroupByTeam(Team), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL

SELECT     rtrim(uv.Portfolio) as EmployerSize_Group
		   ,[Type] = 'portfolio' 
		   ,uv.Remuneration_Start
		   , uv.Remuneration_End
		   ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
          
          , Measure AS Measure_months
          , SUM(uv.LT) AS LT
          , SUM(uv.WGT) AS WGT
          , SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','portfolio',uv.Portfolio,NULL,uv.Measure)									
		  , Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'base','portfolio',uv.Portfolio,NULL,uv.Measure)					 
FROM         dbo.HEM_RTW uv 
			where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
GROUP BY  uv.Portfolio, uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

--Portfolio Hotel Summary--
UNION ALL

SELECT     'Hotel' as EmployerSize_Group
		   ,[Type] = 'portfolio' 
		   ,uv.Remuneration_Start
		   , uv.Remuneration_End
		   ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
          
          , Measure AS Measure_months
          , SUM(uv.LT) AS LT
          , SUM(uv.WGT) AS WGT
          , SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','portfolio','Hotel',NULL,uv.Measure)									
		  , Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'base','portfolio','Hotel',NULL,uv.Measure)					 
FROM         dbo.HEM_RTW uv 
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		and RTRIM([Portfolio]) in ('Accommodation','Pubs, Taverns and Bars')
GROUP BY  uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL

SELECT     rtrim(uv.Account_Manager) as EmployerSize_Group
		   ,[Type] = 'account_manager' 
		   ,uv.Remuneration_Start
		   , uv.Remuneration_End
		   ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
          
          , Measure AS Measure_months
          , SUM(uv.LT) AS LT
          , SUM(uv.WGT) AS WGT
          , SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','account_manager',uv.Account_Manager,NULL,uv.Measure)									
		  , Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'base','account_manager',uv.Account_Manager,NULL,uv.Measure)					 
FROM         dbo.HEM_RTW uv 
			where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
			and rtrim(uv.Account_Manager) is not null
GROUP BY  uv.Account_Manager, uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL
SELECT     'Hospitality' AS EmployerSize_Group
			, [Type] = 'group'
			,t.Remuneration_Start
		    ,t.Remuneration_End
			, Remuneration = cast(year(t .Remuneration_End) AS varchar) + 'M' + CASE WHEN MONTH(t .Remuneration_End) 
                      <= 9 THEN '0' ELSE '' END + cast(month(t .Remuneration_End) AS varchar)                      
			, Measure AS Measure_months
			, SUM(t.LT) AS LT
            , SUM(t.WGT) AS WGT
			, SUM(LT) / SUM(WGT) AS AVGDURN
			
			, [Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(t.Remuneration_End,'target','group','Hospitality',NULL,t.Measure)
			, Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(t.Remuneration_End,'base','group','Hospitality',NULL,t.Measure)
			
FROM         HEM_RTW t inner join (SELECT     dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) - 23, 0))) + '23:59' AS Remuneration_End
                       FROM          master.dbo.spt_values
                       WHERE      'P' = type AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) - 23, 0))) + '23:59' <= (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) u on t.Remuneration_End = u.Remuneration_End
AND     DATEDIFF(MM, t .remuneration_start, t .remuneration_end) = 0
GROUP BY  t .Measure, t .remuneration_start, t .remuneration_end

UNION ALL

SELECT     'Hospitality' AS EmployerSize_Group
			, [Type] = 'portfolio'
			,t.Remuneration_Start
			,t.Remuneration_End
			, Remuneration = cast(year(t .Remuneration_End) AS varchar) + 'M' + CASE WHEN MONTH(t .Remuneration_End) 
                      <= 9 THEN '0' ELSE '' END + cast(month(t .Remuneration_End) AS varchar)                      
			, Measure AS Measure_months
			, SUM(t.LT) AS LT
            , SUM(t.WGT) AS WGT
			, SUM(LT) / SUM(WGT) AS AVGDURN
			
			, [Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(t.Remuneration_End,'target','portfolio','Hospitality',NULL,t.Measure)
			, Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(t.Remuneration_End,'base','portfolio','Hospitality',NULL,t.Measure)

FROM         HEM_RTW t inner join (SELECT     dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) - 23, 0))) + '23:59' AS Remuneration_End
                       FROM          master.dbo.spt_values
                       WHERE      'P' = type AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) - 23, 0))) + '23:59' <= (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) u on t.Remuneration_End = u.Remuneration_End
AND     DATEDIFF(MM, t .remuneration_start, t .remuneration_end) = 0
GROUP BY  t .Measure, t .remuneration_start, t .remuneration_end

UNION ALL

SELECT     'Hospitality' AS EmployerSize_Group
			, [Type] = 'account_manager'
			,t.Remuneration_Start
			,t.Remuneration_End
			, Remuneration = cast(year(t .Remuneration_End) AS varchar) + 'M' + CASE WHEN MONTH(t .Remuneration_End) 
                      <= 9 THEN '0' ELSE '' END + cast(month(t .Remuneration_End) AS varchar)                      
			, Measure AS Measure_months
			, SUM(t.LT) AS LT
            , SUM(t.WGT) AS WGT
			, SUM(LT) / SUM(WGT) AS AVGDURN
			
			, [Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(t.Remuneration_End,'target','account_manager','Hospitality',NULL,t.Measure)
			, Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(t.Remuneration_End,'base','account_manager','Hospitality',NULL,t.Measure)
            
            
FROM         HEM_RTW t inner join (SELECT     dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) - 23, 0))) + '23:59' AS Remuneration_End
                       FROM          master.dbo.spt_values
                       WHERE      'P' = type AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) - 23, 0))) + '23:59' <= (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) u on t.Remuneration_End = u.Remuneration_End
AND     DATEDIFF(MM, t .remuneration_start, t .remuneration_end) = 0
GROUP BY  t .Measure, t .remuneration_start, t .remuneration_end

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Agency_Group_Rolling_Month_1.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Agency_Group_Rolling_Month_12.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================
--select * from uv_HEM_RTW_Agency_Group_Rolling_Month_12
IF EXISTS(select * FROM sys.views where name = 'uv_HEM_RTW_Agency_Group_Rolling_Month_12')
	DROP VIEW [dbo].[uv_HEM_RTW_Agency_Group_Rolling_Month_12]
GO
CREATE VIEW [dbo].[uv_HEM_RTW_Agency_Group_Rolling_Month_12] 
AS

SELECT    EmployerSize_Group = dbo.udf_HEM_GetGroupByTeam(Team)
		  ,[Type] = 'group'
		  ,uv.Remuneration_Start 
		  ,uv.Remuneration_End
		  ,Remuneration = cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) 
          
          ,Measure_months = Measure 
          ,LT = SUM(uv.LT)
          ,WGT = SUM(uv.WGT)
          ,AVGDURN = SUM(uv.LT) / nullif(SUM(uv.WGT),0)
          ,[Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','group',dbo.udf_HEM_GetGroupByTeam(Team),NULL,uv.Measure)									
		  ,Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'base','group',dbo.udf_HEM_GetGroupByTeam(Team),NULL,uv.Measure)
						
FROM      dbo.HEM_RTW uv 

WHERE	  DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 
		  and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)

GROUP BY  dbo.udf_HEM_GetGroupByTeam(Team), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL

SELECT     EmployerSize_Group = rtrim(uv.Portfolio)
		   ,[Type] = 'portfolio' 
		   ,uv.Remuneration_Start
		   ,uv.Remuneration_End
		   ,Remuneration = cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar)
          
          ,Measure_months = Measure
          ,LT = SUM(uv.LT)
          ,WGT = SUM(uv.WGT)
          ,AVGDURN = SUM(uv.LT) / nullif(SUM(uv.WGT),0)
          ,[Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','portfolio',uv.Portfolio,NULL,uv.Measure)									
		  ,Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'base','portfolio',uv.Portfolio,NULL,uv.Measure)					 
FROM         dbo.HEM_RTW uv 
WHERE	  DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 
			and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
			and uv.Portfolio is not null
GROUP BY  uv.Portfolio, uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

--Hotel summary--
UNION ALL

SELECT     EmployerSize_Group = 'Hotel'
		   ,[Type] = 'portfolio' 
		   ,uv.Remuneration_Start
		   ,uv.Remuneration_End
		   ,Remuneration = cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar)
          
          ,Measure_months = Measure
          ,LT = SUM(uv.LT)
          ,WGT = SUM(uv.WGT)
          ,AVGDURN = SUM(uv.LT) / nullif(SUM(uv.WGT),0)
          ,[Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','portfolio','Hotel',NULL,uv.Measure)									
		  ,Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'base','portfolio', 'Hotel',NULL,uv.Measure)					 
FROM         dbo.HEM_RTW uv 
WHERE	  DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 
			and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
			and uv.Portfolio is not null
			and uv.Portfolio in ('Accommodation','Pubs, Taverns and Bars')
GROUP BY  uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL

SELECT     EmployerSize_Group = rtrim(uv.Account_Manager)
		   ,[Type] = 'account_manager' 
		   ,uv.Remuneration_Start
		   ,uv.Remuneration_End
		   ,Remuneration = cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar)
          
          ,Measure_months = Measure
          ,LT = SUM(uv.LT)
          ,WGT = SUM(uv.WGT)
          ,AVGDURN = SUM(uv.LT) / nullif(SUM(uv.WGT),0)
          ,[Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','account_manager',uv.Account_Manager,NULL,uv.Measure)									
		  ,Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'base','account_manager',uv.Account_Manager,NULL,uv.Measure)					 
FROM         dbo.HEM_RTW uv 
WHERE	  DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 
			and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
			and rtrim(uv.Account_Manager) is not null
GROUP BY  uv.Account_Manager, uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL
SELECT     EmployerSize_Group ='Hospitality'
			,[Type] = 'group'
			,t.Remuneration_Start
		    ,t.Remuneration_End
			, Remuneration = cast(year(t .Remuneration_End) AS varchar) + 'M' + CASE WHEN MONTH(t .Remuneration_End) 
                      <= 9 THEN '0' ELSE '' END + cast(month(t .Remuneration_End) AS varchar)                      
			,Measure_months = Measure
			,LT= SUM(t.LT)
            ,WGT= SUM(t.WGT)
			,AVGDURN= SUM(LT) / SUM(WGT)			
			,[Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(t.Remuneration_End,'target','group','Hospitality',NULL,t.Measure)
			,Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(t.Remuneration_End,'base','group','Hospitality',NULL,t.Measure)

FROM         HEM_RTW t
inner join (SELECT     dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) - 23, 0))) + '23:59' AS Remuneration_End
                       FROM          master.dbo.spt_values
                       WHERE      'P' = type AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) - 23, 0))) + '23:59' <= (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) u on t.Remuneration_End = u.Remuneration_End
AND     DATEDIFF(MM, t .remuneration_start, t .remuneration_end) = 11
GROUP BY  t .Measure, t .remuneration_start, t .remuneration_end

UNION ALL

SELECT     EmployerSize_Group= 'Hospitality'
			,[Type] = 'portfolio'
			,t.Remuneration_Start
		    ,t.Remuneration_End
			,Remuneration = cast(year(t .Remuneration_End) AS varchar) + 'M' + CASE WHEN MONTH(t .Remuneration_End) 
                      <= 9 THEN '0' ELSE '' END + cast(month(t .Remuneration_End) AS varchar)                      
			,Measure_months= Measure
			,LT = SUM(t.LT)  
            ,WGT =SUM(t.WGT)  
			,AVGDURN =SUM(LT) / SUM(WGT)  			
			,[Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(t.Remuneration_End,'target','portfolio','Hospitality',NULL,t.Measure)
			,Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(t.Remuneration_End,'base','portfolio','Hospitality',NULL,t.Measure)
            
            
FROM         HEM_RTW t inner join (SELECT     dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) - 23, 0))) + '23:59' AS Remuneration_End
                       FROM          master.dbo.spt_values
                       WHERE      'P' = type AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) - 23, 0))) + '23:59' <= (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) u on t.Remuneration_End = u.Remuneration_End
AND     DATEDIFF(MM, t .remuneration_start, t .remuneration_end) = 11
GROUP BY  t .Measure, t .remuneration_start, t .remuneration_end

UNION ALL

SELECT     EmployerSize_Group= 'Hospitality'
			,[Type] = 'account_manager'
			,t.Remuneration_Start
		    ,t.Remuneration_End
			,Remuneration = cast(year(t .Remuneration_End) AS varchar) + 'M' + CASE WHEN MONTH(t .Remuneration_End) 
                      <= 9 THEN '0' ELSE '' END + cast(month(t .Remuneration_End) AS varchar)                      
			,Measure_months= Measure
			,LT = SUM(t.LT)  
            ,WGT =SUM(t.WGT)  
			,AVGDURN =SUM(LT) / SUM(WGT)  			
			,[Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(t.Remuneration_End,'target','account_manager','Hospitality',NULL,t.Measure)
			,Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(t.Remuneration_End,'base','account_manager','Hospitality',NULL,t.Measure)
            
            
FROM         HEM_RTW t inner join (SELECT     dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) - 23, 0))) + '23:59' AS Remuneration_End
                       FROM          master.dbo.spt_values
                       WHERE      'P' = type AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) - 23, 0))) + '23:59' <= (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)) u on t.Remuneration_End = u.Remuneration_End
AND     DATEDIFF(MM, t .remuneration_start, t .remuneration_end) = 11
GROUP BY  t .Measure, t .remuneration_start, t .remuneration_end

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Agency_Group_Rolling_Month_12.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Raw_Data.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_HEM_RTW_Raw_Data')
	DROP VIEW [dbo].[uv_HEM_RTW_Raw_Data]
GO
CREATE VIEW [dbo].[uv_HEM_RTW_Raw_Data] 
AS
	SELECT  Claim_Closed_flag
			,Remuneration_Start
			,Remuneration_End
			,Measure_months = Measure
			,[Group] = dbo.udf_HEM_GetGroupByTeam(Team)
			,Team
			,Sub_Category = ''
			,Case_manager
			,AgencyName = ''
			,rtw.Claim_no
			,DTE_OF_INJURY 
			,rtw.POLICY_NO
			,LT= ROUND(LT, 2)
			,WGT=ROUND(WGT, 2)
			,EMPL_SIZE
			,Weeks_from_date_of_injury= DATEDIFF(week, DTE_OF_INJURY, Remuneration_End)
			,Weeks_paid= ROUND(Weeks_paid, 2)
			,Stress
			,Liability_Status
			,cost_code
			,cost_code2
			,Cert_Type
			,Med_cert_From
			,Med_cert_To
			,rtw.Account_Manager
			,Portfolio
			,Cell_no
	FROM dbo.HEM_RTW rtw 
	WHERE remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		 AND  DATEDIFF(month, Remuneration_Start, Remuneration_End) + 1 =12  

GO 
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Raw_Data.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Current.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_HEM_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Current')
	DROP VIEW [dbo].[uv_HEM_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Current]
GO
CREATE VIEW [dbo].[uv_HEM_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Current] 
AS
	WITH temp AS 
	(
		select * 
		from
			(select 0 as month_period
			union all
			select 2 as month_period
			union all
			select 5 as month_period
			union all
			select 11 as month_period) as month_period
			cross join
			(select 13 as Measure_months
			union all
			select 26 as Measure_months
			union all
			select 52 as Measure_months
			union all
			select 78 as Measure_months
			union all
			select 104 as Measure_months) as measure_months		
			cross join
			(
			select distinct rtrim(Portfolio) as EmployerSize_Group, rtrim(EMPL_SIZE) as Team_Sub, [Type]='portfolio'
			from HEM_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				and rtrim(Portfolio) IS NOT NULL
				
			union
			select distinct dbo.udf_HEM_GetGroupByTeam(Team) as EmployerSize_Group,rtrim(Team) as Team_Sub, [Type]='group'
			from HEM_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				
			union
			select distinct rtrim([Account_Manager]) as EmployerSize_Group, rtrim(EMPL_SIZE) as Team_Sub, [Type]='account_manager'
			from HEM_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				and rtrim([Account_Manager]) is not null
				
			union
			select distinct 'Hotel' as EmployerSize_Group ,rtrim(EMPL_SIZE) as Team_Sub, [Type]='portfolio'
			from HEM_RTW uv 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
				and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
				and rtrim(Portfolio) IS NOT NULL
				and rtrim([Portfolio]) in ('Accommodation','Pubs, Taverns and Bars')	
				
			) as temp_value
	)
	
	---Group---			
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='group'
			,dbo.udf_HEM_GetGroupByTeam(Team) as EmployerSize_Group
			,rtrim(Team) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','group',dbo.udf_HEM_GetGroupByTeam(Team),rtrim(Team),Measure),0)
	from HEM_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by dbo.udf_HEM_GetGroupByTeam(Team),Team,Measure,Remuneration_Start, Remuneration_End
	
	--Account Manager--
	union all
	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='account_manager'
			,rtrim([Account_Manager]) as EmployerSize_Group
			,rtrim(EMPL_SIZE) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','account_manager',rtrim([Account_Manager]),rtrim(EMPL_SIZE),Measure),0)
	from HEM_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim([Account_Manager])is not null

	group by [Account_Manager],EMPL_SIZE,Measure,Remuneration_Start, Remuneration_End
	
	--Portfolio--
	union all
	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='portfolio'
			,rtrim([Portfolio]) as EmployerSize_Group
			,rtrim(EMPL_SIZE) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','portfolio',rtrim([Portfolio]),rtrim(EMPL_SIZE),Measure),0)
	from HEM_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim([Portfolio])is not null

	group by [Portfolio],EMPL_SIZE,Measure, Remuneration_Start, Remuneration_End
	
	--Portfolio Hotel Summary--
	union all
	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='portfolio'
			,'Hotel' as EmployerSize_Group
			,rtrim(EMPL_SIZE) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','portfolio','Hotel',rtrim(EMPL_SIZE),Measure),0)
	from HEM_RTW uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim([Portfolio])is not null
		   and rtrim([Portfolio]) in ('Accommodation','Pubs, Taverns and Bars')

	group by EMPL_SIZE,Measure, Remuneration_Start, Remuneration_End
	
	--add missing measure months
	union all
	select Month_period=case when month_period = 0
							then 1
						 when month_period = 2
							then 3
						 when month_period = 5
							then 6
						 when month_period = 11
							then 12
					end
		  ,[Type]
		  ,EmployerSize_Group
		  ,Team_Sub
		  ,Measure_months
		  ,LT = 0
		  ,WGT = 0
		  ,AVGDURN = 0
		  ,[Target] = 0
	from temp as tmp
	where Measure_months not in (select distinct Measure from HEM_RTW uv
							where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
							and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) = tmp.month_period
							and case when [Type] = 'group' then dbo.udf_HEM_GetGroupByTeam(rtrim(uv.Team))
									 when [Type] = 'portfolio' then (case when EmployerSize_Group = 'hotel' and uv.Portfolio in ('Accommodation','Pubs, Taverns and Bars') then 'hotel'
																					   else rtrim(uv.Portfolio)
																				  end
																			     ) 
									 when [Type] = 'account_manager' then rtrim(uv.Account_Manager)
								end
									 = EmployerSize_Group
							and case when [Type] = 'group' then rtrim(uv.Team)
									 when [Type] = 'portfolio' then rtrim(uv.EMPL_SIZE) 
									 when [Type] = 'account_manager' then rtrim(uv.EMPL_SIZE)
								end
									 = Team_Sub)
	
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Current.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Previous.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_HEM_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Previous')
	DROP VIEW [dbo].[uv_HEM_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Previous]
GO
CREATE VIEW [dbo].[uv_HEM_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Previous] 
AS	
	---Group---	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='group'
			,dbo.udf_HEM_GetGroupByTeam(Team) as EmployerSize_Group
			,rtrim(Team) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from HEM_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.HEM_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by dbo.udf_HEM_GetGroupByTeam(Team),Team,Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)
	
	---Account manager---	
	union all 
	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='account_manager'
			,rtrim([Account_Manager]) as EmployerSize_Group
			,rtrim(EMPL_SIZE) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN
	from HEM_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.HEM_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim([Account_Manager]) is not null

	group by [Account_Manager],EMPL_SIZE,Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)
	
	---Portfolio---	
	union all 
	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='portfolio'
			,rtrim([Portfolio]) as EmployerSize_Group
			,rtrim(EMPL_SIZE) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from HEM_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.HEM_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim([Portfolio]) is not null

	group by [Portfolio],EMPL_SIZE,Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)
	
	--Portfolio Hotel Summary--
	union all 
	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[Type]='portfolio'
			,'Hotel' as EmployerSize_Group
			,rtrim(EMPL_SIZE) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from HEM_RTW uv
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.HEM_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim([Portfolio]) is not null
		   and RTRIM([Portfolio]) in ('Accommodation','Pubs, Taverns and Bars')

	group by EMPL_SIZE,Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)


GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Previous.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Team_Sub_Rolling_Month_1.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================
--select * from uv_HEM_RTW_Team_Sub_Rolling_Month_1
IF EXISTS(select * FROM sys.views where name = 'uv_HEM_RTW_Team_Sub_Rolling_Month_1')
	DROP VIEW [dbo].[uv_HEM_RTW_Team_Sub_Rolling_Month_1]
GO
CREATE VIEW [dbo].[uv_HEM_RTW_Team_Sub_Rolling_Month_1] 
AS

SELECT     rtrim(uv.Team) as Team_Sub
			, dbo.udf_HEM_GetGroupByTeam(Team) as EmployerSize_Group
			,[Type] = 'group'
			,uv.Remuneration_Start
			,uv.Remuneration_End
			,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
                      
			,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
			,[Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','group',dbo.udf_HEM_GetGroupByTeam(Team),uv.Team,uv.Measure)									
			, Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'base','group',dbo.udf_HEM_GetGroupByTeam(Team),uv.Team,uv.Measure)
						
FROM         dbo.HEM_RTW uv where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
GROUP BY uv.Team, dbo.udf_HEM_GetGroupByTeam(Team), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

union all

SELECT     rtrim(uv.EMPL_SIZE) as Team_Sub
			, uv.[Account_Manager] as EmployerSize_Group
			,[Type] = 'account_manager'
			,uv.Remuneration_Start
			,uv.Remuneration_End
			,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
                      
			,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
			,[Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','account_manager',uv.[Account_Manager],uv.EMPL_SIZE,uv.Measure)									
			, Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'base','account_manager',uv.[Account_Manager],uv.EMPL_SIZE,uv.Measure)
						
FROM         dbo.HEM_RTW uv 
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		and uv.[Account_Manager] is not null
GROUP BY uv.EMPL_SIZE, uv.[Account_Manager], uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

union all

SELECT     rtrim(uv.EMPL_SIZE) as Team_Sub
			, uv.[Portfolio] as EmployerSize_Group
			,[Type] = 'portfolio'
			,uv.Remuneration_Start
			,uv.Remuneration_End
			,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
                      
			,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
			,[Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','portfolio',uv.[Portfolio],uv.EMPL_SIZE,uv.Measure)									
			, Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'base','portfolio',uv.[Portfolio],uv.EMPL_SIZE,uv.Measure)
						
FROM         dbo.HEM_RTW uv 
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		and uv.[Portfolio] is not null
GROUP BY uv.EMPL_SIZE, uv.[Portfolio], uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

--Portfolio Hotel Summary--
union all

SELECT     rtrim(uv.EMPL_SIZE) as Team_Sub
			, 'Hotel' as EmployerSize_Group
			,[Type] = 'portfolio'
			,uv.Remuneration_Start
			,uv.Remuneration_End
			,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
                      
			,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
			,[Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','portfolio','Hotel',uv.EMPL_SIZE,uv.Measure)									
			, Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'base','portfolio','Hotel',uv.EMPL_SIZE,uv.Measure)
						
FROM         dbo.HEM_RTW uv 
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		and uv.[Portfolio] is not null
		and RTRIM([Portfolio]) in ('Accommodation','Pubs, Taverns and Bars')
GROUP BY uv.EMPL_SIZE, uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Team_Sub_Rolling_Month_1.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Team_Sub_Rolling_Month_12.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================
--select * from uv_HEM_RTW_Team_Sub_Rolling_Month_12
IF EXISTS(select * FROM sys.views where name = 'uv_HEM_RTW_Team_Sub_Rolling_Month_12')
	DROP VIEW [dbo].[uv_HEM_RTW_Team_Sub_Rolling_Month_12]
GO
CREATE VIEW [dbo].[uv_HEM_RTW_Team_Sub_Rolling_Month_12] 
AS
SELECT     rtrim(uv.Team) as Team_Sub
		  ,dbo.udf_HEM_GetGroupByTeam(Team) as  EmployerSize_Group
		  ,[Type] = 'group'
		  ,uv.Remuneration_Start 
		  ,uv.Remuneration_End
		  ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration        
          ,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','group',dbo.udf_HEM_GetGroupByTeam(Team),uv.Team,uv.Measure)									
		  , Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'base','group',dbo.udf_HEM_GetGroupByTeam(Team),uv.Team,uv.Measure)
						
FROM         dbo.HEM_RTW uv where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
GROUP BY uv.Team, dbo.udf_HEM_GetGroupByTeam(Team), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

union all

SELECT     rtrim(uv.EMPL_SIZE) as Team_Sub
		  ,rtrim(uv.Account_Manager) as  EmployerSize_Group
		  ,[Type] = 'account_manager'
		  ,uv.Remuneration_Start 
		  ,uv.Remuneration_End
		  ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration        
          ,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','account_manager',uv.[Account_Manager],uv.EMPL_SIZE,uv.Measure)									
		  , Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'base','account_manager',uv.[Account_Manager],uv.EMPL_SIZE,uv.Measure)
						
FROM         dbo.HEM_RTW uv 
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
	  and rtrim(uv.Account_Manager) is not null
GROUP BY uv.EMPL_SIZE, uv.[Account_Manager], uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

union all

SELECT     rtrim(uv.EMPL_SIZE) as Team_Sub
		  ,rtrim(uv.[Portfolio]) as  EmployerSize_Group
		  ,[Type] = 'portfolio'
		  ,uv.Remuneration_Start 
		  ,uv.Remuneration_End
		  ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration        
          ,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','portfolio',uv.[Portfolio],uv.EMPL_SIZE,uv.Measure)									
		  , Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'base','portfolio',uv.[Portfolio],uv.EMPL_SIZE,uv.Measure)
						
FROM         dbo.HEM_RTW uv where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
GROUP BY uv.EMPL_SIZE, uv.[Portfolio], uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

--Portfolio Hotel Summary--
union all

SELECT     rtrim(uv.EMPL_SIZE) as Team_Sub
		  ,'Hotel' as  EmployerSize_Group
		  ,[Type] = 'portfolio'
		  ,uv.Remuneration_Start 
		  ,uv.Remuneration_End
		  ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration        
          ,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'target','portfolio','Hotel',uv.EMPL_SIZE,uv.Measure)									
		  , Base = dbo.udf_dashboard_HEM_RTW_getTargetAndBase(uv.Remuneration_End,'base','portfolio','Hotel',uv.EMPL_SIZE,uv.Measure)
						
FROM         dbo.HEM_RTW uv 
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.HEM_RTW)
		and RTRIM([Portfolio]) in ('Accommodation','Pubs, Taverns and Bars')
GROUP BY uv.EMPL_SIZE, uv.Remuneration_Start, uv.Remuneration_End, uv.Measure


GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_HEM_RTW_Team_Sub_Rolling_Month_12.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_PORT.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_PORT')
	DROP VIEW [dbo].[uv_PORT]
GO
CREATE VIEW [dbo].[uv_PORT]
AS
	SELECT  System='TMF',Med_Cert_Status=Med_Cert_Status_This_Week,rtrim(isnull(sub.AgencyName,'Miscellaneous')) as Agency_Name,rtrim(isnull(sub.Sub_Category,'Miscellaneous')) as Sub_Category
						,[Group] = dbo.udf_TMF_GetGroupByTeam(Team),sub.AgencyId as Agency_Id,uv.*,
		[Grouping] = case when rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Health', 'Other')
							then 'HEALTH & OTHER'
						when rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Police', 'Fire')
							then 'POLICE & FIRE'
						else ''
					end
		FROM dbo.TMF_Portfolio uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO		
		 
	UNION ALL
	
	SELECT  System='HEM',Med_Cert_Status=Med_Cert_Status_This_Week,Agency_Name = '',Sub_Category='',[Group] = dbo.udf_HEM_GetGroupByTeam(Team),Agency_Id = '',*, 
		[Grouping] = case when RTRIM(Portfolio) in ('Accommodation', 'Pubs, Taverns and Bars')
							then 'Hotel'
						else ''
					end 
		FROM dbo.HEM_Portfolio		
	
	UNION ALL
	
	SELECT  System='EML',Med_Cert_Status=Med_Cert_Status_This_Week,Agency_Name = '',Sub_Category='',[Group] = dbo.udf_EML_GetGroupByTeam(Team),Agency_Id = '',*, [Grouping] = ''
		FROM dbo.EML_Portfolio		
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_PORT.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_PORT_Get_All_Claim_Type.sql  
--------------------------------  
IF EXISTS(select * FROM sys.views where name = 'uv_PORT_Get_All_Claim_Type')
	DROP VIEW [dbo].[uv_PORT_Get_All_Claim_Type]
GO

/****** Object:  UserDefinedFunction [dbo].[uv_PORT_Get_All_Claim_Type]    Script Date: 12/30/2013 17:12:04 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

CREATE VIEW [dbo].[uv_PORT_Get_All_Claim_Type]
AS
		-- NEW CLAIMS
		SELECT  Claim_Type = 'claim_new_all'
		union SELECT Claim_Type = 'claim_new_nlt'
		union SELECT Claim_Type = 'claim_new_lt'
		
		-- BEGIN: OPEN CLAIMS	
			
		union SELECT Claim_Type = 'claim_open_all'
		union SELECT Claim_Type = 'claim_open_nlt'
		
		-- OPEN CLAIMS: NCMM
		union SELECT Claim_Type = 'claim_open_ncmm_this_week'
		union SELECT Claim_Type = 'claim_open_ncmm_next_week'
		
		-- OPEN CLAIMS: RTW
		union SELECT Claim_Type = 'claim_open_0_13'
		union SELECT Claim_Type = 'claim_open_13_26'
		union SELECT Claim_Type = 'claim_open_26_52'
		union SELECT Claim_Type = 'claim_open_52_78'
		union SELECT Claim_Type = 'claim_open_0_78'
		union SELECT Claim_Type = 'claim_open_78_130'
		union SELECT Claim_Type = 'claim_open_gt_130'
		
		-- OPEN CLAIMS: THERAPY TREATMENTS
		union SELECT Claim_Type = 'claim_open_acupuncture'
		union SELECT Claim_Type = 'claim_open_chiro'
		union SELECT Claim_Type = 'claim_open_massage'
		union SELECT Claim_Type = 'claim_open_osteo'
		union SELECT Claim_Type = 'claim_open_physio'
		union SELECT Claim_Type = 'claim_open_rehab'
		
		-- OPEN CLAIMS: LUMP SUM INTIMATIONS
		union SELECT Claim_Type = 'claim_open_death'
		union SELECT Claim_Type = 'claim_open_industrial_deafness'
		union SELECT Claim_Type = 'claim_open_ppd'
		union SELECT Claim_Type = 'claim_open_recovery'
		
		-- OPEN CLAIMS: LUMP SUM INTIMATIONS - WPI
		union SELECT Claim_Type = 'claim_open_wpi_all'
		union SELECT Claim_Type = 'claim_open_wpi_0_10'
		union SELECT Claim_Type = 'claim_open_wpi_11_14'
		union SELECT Claim_Type = 'claim_open_wpi_15_20'
		union SELECT Claim_Type = 'claim_open_wpi_21_30'
		union SELECT Claim_Type = 'claim_open_wpi_31_more'
		
		union SELECT Claim_Type = 'claim_open_wid'
		
		-- END: OPEN CLAIMS
		
		-- CLAIM CLOSURES
		union SELECT Claim_Type = 'claim_closure'
		union SELECT Claim_Type = 'claim_re_open'
		union SELECT Claim_Type = 'claim_still_open'

GO

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_PORT_Get_All_Claim_Type.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_AWC_Raw_Data.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_TMF_AWC_Raw_Data')
	DROP VIEW [dbo].[uv_TMF_AWC_Raw_Data]
GO
CREATE VIEW [dbo].[uv_TMF_AWC_Raw_Data] 
AS
SELECT    Time_ID
		, Claim_no
		, Team
		, [Group] = dbo.udf_TMF_GetGroupByTeam(Team)
		, Sub_Category = RTRIM(ISNULL(sub.Sub_Category,'Miscellaneous'))
		, AgencyName = RTRIM(ISNULL(sub.AgencyName,'Miscellaneous'))
		, Date_of_Injury
		, Cert_Type
		, Med_cert_From
		, Med_cert_To
		, Account_Manager
		, Cell_no
		, Portfolio
FROM    dbo.TMF_AWC awc left join TMF_Agencies_Sub_Category sub on awc.POLICY_NO = sub.POLICY_NO
WHERE    (Time_ID >= DATEADD(mm, - 2,DATEADD(yy, DATEDIFF(yy,0,GETDATE()), 0)))
		
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_AWC_Raw_Data.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_AWC_Weekly_Open_1_2.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_TMF_AWC_Weekly_Open_1_2')
	DROP VIEW [dbo].[uv_TMF_AWC_Weekly_Open_1_2]
GO
CREATE VIEW [dbo].[uv_TMF_AWC_Weekly_Open_1_2] 
AS	
	---TMF---
	SELECT  [Type] = 'TMF'
			,Unit = 'TMF'
			,[Primary] = 'TMF'
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, Time_Id), 2)
			,Actual = (SELECT	COUNT(DISTINCT tmf_awc1.claim_no)
						FROM	TMF_AWC tmf_awc1
						WHERE   tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID 
								AND Year(tmf_awc1.Date_of_injury) = Year(tmf_awc.Time_ID) - 1
									AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC))
			,Projection =  (SELECT	ISNULL(sum(Projection), 0)
								FROM	dbo.TMF_AWC_Projections
								WHERE   [Type] = '1-2' AND Unit_Type = 'TMF' 										 
										AND year(Time_Id) = Year(tmf_awc.Time_Id) 
										AND month(Time_Id)= month(tmf_awc.Time_Id))
	FROM    dbo.udf_TMF_AWC_Generate_Time_ID('tmf','1-2') TMF_AWC
	
	UNION ALL
	---Agency---
	SELECT  [Type] = 'agency'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, Time_Id), 2)
			,Actual = (SELECT   COUNT(DISTINCT tmf_awc1.claim_no)
						FROM	TMF_AWC tmf_awc1 left join TMF_Agencies_Sub_Category sub on tmf_awc1.POLICY_NO = sub.POLICY_NO
						WHERE   RTRIM(ISNULL(AgencyName, 'Miscellaneous')) = RTRIM(tmf_awc.[Primary])
								AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID 
								AND Year(tmf_awc1.Date_of_injury) = Year(tmf_awc.Time_ID) - 1
									AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC))
			,Projection =  (SELECT	ISNULL(sum(Projection), 0)
								FROM	dbo.TMF_AWC_Projections
								WHERE   [Type] = '1-2' AND Unit_Type = 'agency' 
										AND RTRIM(Unit_Name) = RTRIM(tmf_awc.[Primary]) 
										AND year(Time_Id) = Year(tmf_awc.Time_Id) 
										AND month(Time_Id)= month(tmf_awc.Time_Id))
	FROM    dbo.udf_TMF_AWC_Generate_Time_ID('agency','1-2') TMF_AWC
	
	--Agency Police & Fire--
	UNION ALL
	SELECT  [Type] = 'agency'
			,Unit = 'Police & Fire'
			,[Primary] = 'Police & Fire'
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, Time_Id), 2)
			,Actual = (SELECT   COUNT(DISTINCT tmf_awc1.claim_no)
						FROM	TMF_AWC tmf_awc1 left join TMF_Agencies_Sub_Category sub on tmf_awc1.POLICY_NO = sub.POLICY_NO
						WHERE   RTRIM(AgencyName) in ('Police','Fire')
								AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID 
								AND Year(tmf_awc1.Date_of_injury) = Year(tmf_awc.Time_ID) - 1
								AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC))
			,Projection =  (SELECT ISNULL(sum(Projection), 0)
								FROM	dbo.TMF_AWC_Projections
								WHERE   [Type] = '1-2' AND Unit_Type = 'agency' 
										AND RTRIM(Unit_Name) in ('Police','Fire')
										AND year(Time_Id) = Year(tmf_awc.Time_Id) 
										AND month(Time_Id)= month(tmf_awc.Time_Id))
	FROM    dbo.udf_TMF_AWC_Generate_Time_ID('agency','1-2') TMF_AWC
	WHERE   RTRIM([Primary]) = 'Police'
		
	--Agency Health & Other--
	UNION ALL
	SELECT  [Type] = 'agency'
			,Unit = 'Health & Other'
			,[Primary] = 'Health & Other'
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, Time_Id), 2)
			,Actual = (SELECT   COUNT(DISTINCT tmf_awc1.claim_no)
						FROM	TMF_AWC tmf_awc1 left join TMF_Agencies_Sub_Category sub on tmf_awc1.POLICY_NO = sub.POLICY_NO
						WHERE   RTRIM(AgencyName) in ('Health','Other')
								AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID 
								AND Year(tmf_awc1.Date_of_injury) = Year(tmf_awc.Time_ID) - 1
									AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC))
			,Projection =  (SELECT ISNULL(sum(Projection), 0)
								FROM	dbo.TMF_AWC_Projections
								WHERE   [Type] = '1-2' AND Unit_Type = 'agency' 
										AND RTRIM(Unit_Name) in ('Health','Other')
										AND year(Time_Id) = Year(tmf_awc.Time_Id) 
										AND month(Time_Id)= month(tmf_awc.Time_Id))
	FROM    dbo.udf_TMF_AWC_Generate_Time_ID('agency','1-2') TMF_AWC
	WHERE   RTRIM([Primary]) = 'Health'
		
	---Group---
	UNION ALL
	SELECT  [Type] = 'group'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, Time_Id), 2) 						  
			,Actual = (SELECT   COUNT(DISTINCT tmf_awc1.claim_no)
						FROM	TMF_AWC tmf_awc1
						WHERE   dbo.udf_TMF_GetGroupByTeam(Team) = RTRIM(tmf_awc.Unit)
								AND NOT EXISTS(SELECT   1
												FROM	tmf_awc tmf_awc2
												WHERE   tmf_awc2.claim_no = tmf_awc1.claim_no 
														AND tmf_awc2.time_id =(SELECT   max(time_Id)
																				FROM    tmf_awc tmf_awc3
																				WHERE   tmf_awc3.claim_no = tmf_awc1.claim_no 
																						AND tmf_awc3.time_id BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND  tmf_awc.Time_ID)
														AND dbo.udf_TMF_GetGroupByTeam(tmf_awc2.Team) <> dbo.udf_TMF_GetGroupByTeam(tmf_awc1.Team))
								AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2,tmf_awc.Time_ID) AND tmf_awc.Time_ID 
								AND Year(tmf_awc1.Date_of_injury) = Year(tmf_awc.Time_ID) - 1
								AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC))
			,Projection =(SELECT	ISNULL(sum(Projection), 0)
							FROM    dbo.TMF_AWC_Projections
							WHERE   [Type] = '1-2' AND Unit_Type = 'group' 
									AND RTRIM(Unit_Name) = RTRIM(tmf_awc.Unit) 
									AND year(Time_Id) = Year(tmf_awc.Time_Id) 
									AND month(Time_Id)= month(tmf_awc.Time_Id))
	FROM    dbo.udf_TMF_AWC_Generate_Time_ID('group','1-2') TMF_AWC
	
	---Sub category---
	UNION ALL
	SELECT  [Type] = 'sub_category'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, Time_Id), 2) 
			,Actual =(SELECT	COUNT(DISTINCT tmf_awc1.claim_no)
						FROM    TMF_AWC tmf_awc1 left join TMF_Agencies_Sub_Category sub on tmf_awc1.POLICY_NO = sub.POLICY_NO
						WHERE   RTRIM(ISNULL(Sub_Category, 'Miscellaneous')) = RTRIM(tmf_awc.Unit)
								AND RTRIM(ISNULL(AgencyName, 'Miscellaneous')) = RTRIM(tmf_awc.[Primary])
								AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID 
								AND Year(tmf_awc1.Date_of_injury) = Year(tmf_awc.Time_ID) - 1
								AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC))
			,Projection =(SELECT	ISNULL(sum(Projection), 0)
									FROM	dbo.TMF_AWC_Projections
									WHERE   [Type] = '1-2' AND Unit_Type = 'sub_category' 
											AND Unit_Name = tmf_awc.Unit AND 
											year(Time_Id) = Year(tmf_awc.Time_Id) AND 
											month(Time_Id) = month(tmf_awc.Time_Id))							
	FROM    dbo.udf_TMF_AWC_Generate_Time_ID('sub_category','1-2') TMF_AWC
	
	---Team---
	UNION ALL
	SELECT  [Type] = 'team'
			,Unit = Unit
			,[Primary] = RTRIM([Primary])
			,WeeklyType = '1-2'
			,Time_Id
			,Month_Year = LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, Time_Id), 2) 						
			,Actual = (SELECT   COUNT(DISTINCT tmf_awc1.claim_no)
								FROM	TMF_AWC tmf_awc1
								WHERE   RTRIM(Team) = RTRIM(TMF_AWC.Unit)
										AND dbo.udf_TMF_GetGroupByTeam(Team) = RTRIM(TMF_AWC.[Primary])
										AND NOT EXISTS(SELECT   1
														FROM	tmf_awc tmf_awc2
														WHERE   tmf_awc2.claim_no = tmf_awc1.claim_no 
																AND tmf_awc2.time_id =
																	(SELECT max(time_Id)
																	  FROM  tmf_awc tmf_awc3
																	  WHERE tmf_awc3.claim_no = tmf_awc1.claim_no 
																			AND tmf_awc3.time_id BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID)
																AND dbo.udf_TMF_GetGroupByTeam(tmf_awc2.Team) <> dbo.udf_TMF_GetGroupByTeam(tmf_awc1.Team)) 
										AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID 
										AND Year(tmf_awc1.Date_of_injury) = Year(tmf_awc.Time_ID) - 1 
										AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC))
			,Projection = (SELECT   ISNULL(sum(Projection), 0)
								FROM	dbo.TMF_AWC_Projections
								WHERE   [Type] = '1-2' AND Unit_Type = 'team' 
										AND Unit_Name = tmf_awc.Unit 
										AND year(Time_Id) = Year(tmf_awc.Time_Id) 
										AND month(Time_Id)= month(tmf_awc.Time_Id))
	FROM    dbo.udf_TMF_AWC_Generate_Time_ID('team','1-2') TMF_AWC
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_AWC_Weekly_Open_1_2.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_AWC_Weekly_Open_3_5.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_TMF_AWC_Weekly_Open_3_5')
	DROP VIEW [dbo].[uv_TMF_AWC_Weekly_Open_3_5]
GO
CREATE VIEW [dbo].[uv_TMF_AWC_Weekly_Open_3_5] 
AS	
---TMF---
SELECT  [Type] = 'TMF'
		,Unit = 'TMF'
		,[Primary] = 'TMF'
		,WeeklyType = '3-5'
		,Time_Id
		,Month_Year = LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, Time_Id), 2)
		,Actual = (SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
                        FROM          TMF_AWC tmf_awc1
                        WHERE      tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID AND 
                                               Year(tmf_awc1.Date_of_injury) BETWEEN Year(tmf_awc.Time_ID) - 4 AND Year(tmf_awc.Time_ID) - 2
                                               AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC)
                                                
                                                     )
		,Projection =  (SELECT ISNULL(sum(Projection), 0)
							FROM	dbo.TMF_AWC_Projections
							WHERE   [Type] = '3-5' AND Unit_Type = 'TMF' 										 
									AND year(Time_Id) = Year(tmf_awc.Time_Id) 
									AND month(Time_Id)= month(tmf_awc.Time_Id))
FROM    dbo.udf_TMF_AWC_Generate_Time_ID('tmf','3-5') TMF_AWC
	
UNION ALL
--Agency--
SELECT     [Type] = 'agency', Unit = RTRIM(Unit), [Primary] = RTRIM([Primary]), WeeklyType = '3-5', Time_Id, LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, 
                      Time_Id), 2) AS Month_Year, Actual =
                          (SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
                            FROM          TMF_AWC tmf_awc1 left join TMF_Agencies_Sub_Category sub on tmf_awc1.POLICY_NO = sub.POLICY_NO
                            WHERE      RTRIM(ISNULL(AgencyName, 'Miscellaneous')) = RTRIM(tmf_awc.[Primary]) AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID AND 
                                                   Year(tmf_awc1.Date_of_injury) BETWEEN Year(tmf_awc.Time_ID) - 4 AND Year(tmf_awc.Time_ID) - 2
                                                   AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC)
                                                    
                                                )
                , Projection =
                          (SELECT     ISNULL(sum(Projection), 0)
                            FROM          dbo.TMF_AWC_Projections
                            WHERE      [Type] = '3-5' AND Unit_Type = 'agency' AND RTRIM(Unit_Name) = RTRIM(tmf_awc.[Primary]) AND year(Time_Id) = Year(tmf_awc.Time_Id) AND month(Time_Id) 
                                                   = month(tmf_awc.Time_Id))
FROM    dbo.udf_TMF_AWC_Generate_Time_ID('agency','3-5') TMF_AWC

--Agency Police & Fire--
UNION ALL
SELECT     [Type] = 'agency', Unit = 'Police & Fire', [Primary] = 'Police & Fire', WeeklyType = '3-5', Time_Id, LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, 
                      Time_Id), 2) AS Month_Year, Actual =
                          (SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
                            FROM          TMF_AWC tmf_awc1 left join TMF_Agencies_Sub_Category sub on tmf_awc1.POLICY_NO = sub.POLICY_NO
                            WHERE      RTRIM(AgencyName) in ('Police', 'Fire') AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID AND 
                                                   Year(tmf_awc1.Date_of_injury) BETWEEN Year(tmf_awc.Time_ID) - 4 AND Year(tmf_awc.Time_ID) - 2
                                                   AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC)
                                                    )
                , Projection =
                          (SELECT     ISNULL(sum(Projection), 0)
                            FROM          dbo.TMF_AWC_Projections
                            WHERE      [Type] = '3-5' AND Unit_Type = 'agency' AND RTRIM(Unit_Name) in ('Police', 'Fire') AND year(Time_Id) = Year(tmf_awc.Time_Id) AND month(Time_Id) 
                                                   = month(tmf_awc.Time_Id))
FROM    dbo.udf_TMF_AWC_Generate_Time_ID('agency','3-5') TMF_AWC
WHERE   RTRIM([Primary]) = 'Police'
		
--Agency Health & Other--
UNION ALL
SELECT     [Type] = 'agency', Unit = 'Health & Other', [Primary] = 'Health & Other', WeeklyType = '3-5', Time_Id, LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, 
                      Time_Id), 2) AS Month_Year, Actual =
                          (SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
                            FROM          TMF_AWC tmf_awc1 left join TMF_Agencies_Sub_Category sub on tmf_awc1.POLICY_NO = sub.POLICY_NO
                            WHERE      RTRIM(AgencyName) in ('Health','Other') AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID AND 
                                                   Year(tmf_awc1.Date_of_injury) BETWEEN Year(tmf_awc.Time_ID) - 4 AND Year(tmf_awc.Time_ID) - 2
                                                   AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC) 	
                                                   
                                                    )
                , Projection =
                          (SELECT     ISNULL(sum(Projection), 0)
                            FROM          dbo.TMF_AWC_Projections
                            WHERE      [Type] = '3-5' AND Unit_Type = 'agency' AND RTRIM(Unit_Name) in ('Health','Other') AND year(Time_Id) = Year(tmf_awc.Time_Id) AND month(Time_Id) 
                                                   = month(tmf_awc.Time_Id))
FROM    dbo.udf_TMF_AWC_Generate_Time_ID('agency','3-5') TMF_AWC
WHERE   RTRIM([Primary]) = 'Health'


UNION ALL
SELECT     [Type] = 'group', Unit = RTRIM(Unit), [Primary] = RTRIM([Primary]), WeeklyType = '3-5', Time_Id, LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, Time_Id), 2) 
                      AS Month_Year, Actual =
                          (SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
                            FROM          TMF_AWC tmf_awc1
                            WHERE      dbo.udf_TMF_GetGroupByTeam(Team) = RTRIM(tmf_awc.Unit) AND NOT EXISTS
                                                       (SELECT     1
                                                         FROM          tmf_awc tmf_awc2
                                                         WHERE      tmf_awc2.claim_no = tmf_awc1.claim_no AND tmf_awc2.time_id =
                                                                                    (SELECT     max(time_Id)
                                                                                      FROM          tmf_awc tmf_awc3
                                                                                      WHERE	tmf_awc3.claim_no = tmf_awc1.claim_no AND tmf_awc3.time_id BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID)
																							AND dbo.udf_TMF_GetGroupByTeam(tmf_awc2.Team) <> dbo.udf_TMF_GetGroupByTeam(tmf_awc1.Team))
                                                    AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, 
                                                   tmf_awc.Time_ID) AND tmf_awc.Time_ID AND Year(tmf_awc1.Date_of_injury) BETWEEN Year(tmf_awc.Time_ID) - 4 AND Year(tmf_awc.Time_ID) - 2
                                                    AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC) 	
                                                    )
                                                     , Projection =
                          (SELECT     ISNULL(sum(Projection), 0)
                            FROM          dbo.TMF_AWC_Projections
                            WHERE      [Type] = '3-5' AND Unit_Type = 'group' AND RTRIM(Unit_Name) = RTRIM(tmf_awc.Unit) AND year(Time_Id) = Year(tmf_awc.Time_Id) AND month(Time_Id) 
                                                   = month(tmf_awc.Time_Id))
FROM    dbo.udf_TMF_AWC_Generate_Time_ID('group','3-5') TMF_AWC

UNION ALL
SELECT     [Type] = 'sub_category', Unit = Unit, [Primary] = RTRIM([Primary]), WeeklyType = '3-5', Time_Id, LEFT(datename(month, Time_Id), 3) 
                      + '- ' + RIGHT(datename(year, Time_Id), 2) AS Month_Year, Actual =
                          (SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
                            FROM          TMF_AWC tmf_awc1 left join TMF_Agencies_Sub_Category sub on tmf_awc1.POLICY_NO = sub.POLICY_NO
                            WHERE      RTRIM(ISNULL(Sub_Category, 'Miscellaneous')) = RTRIM(tmf_awc.Unit) AND RTRIM(AgencyName) = RTRIM(tmf_awc.[Primary]) AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, 
                                                   tmf_awc.Time_ID) AND tmf_awc.Time_ID AND Year(tmf_awc1.Date_of_injury) BETWEEN Year(tmf_awc.Time_ID) - 4 AND Year(tmf_awc.Time_ID) - 2
                                                   AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC) 	
                                                    )
                                                    , Projection =
                          (SELECT     ISNULL(sum(Projection), 0)
                            FROM          dbo.TMF_AWC_Projections
                            WHERE      [Type] = '3-5' AND Unit_Type = 'sub_category' AND Unit_Name = tmf_awc.Unit AND year(Time_Id) = Year(tmf_awc.Time_Id) AND 
                                                   month(Time_Id) = month(tmf_awc.Time_Id))
FROM    dbo.udf_TMF_AWC_Generate_Time_ID('sub_category','3-5') TMF_AWC

UNION ALL
SELECT     [Type] = 'team', Unit = Unit, [Primary] = RTRIM([Primary]), WeeklyType = '3-5', Time_Id, LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, Time_Id), 2) 
                      AS Month_Year, Actual =
                          (SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
                            FROM          TMF_AWC tmf_awc1
                            WHERE		RTRIM(Team) = RTRIM(TMF_AWC.Unit)
										AND dbo.udf_TMF_GetGroupByTeam(Team) = RTRIM(TMF_AWC.[Primary])
										AND NOT EXISTS
                                                       (SELECT     1
                                                         FROM          tmf_awc tmf_awc2
                                                         WHERE      tmf_awc2.claim_no = tmf_awc1.claim_no AND tmf_awc2.time_id =
                                                                                    (SELECT     max(time_Id)
                                                                                      FROM          tmf_awc tmf_awc3
                                                                                      WHERE      tmf_awc3.claim_no = tmf_awc1.claim_no AND tmf_awc3.time_id BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID) 
																							AND dbo.udf_TMF_GetGroupByTeam(tmf_awc2.Team) <> dbo.udf_TMF_GetGroupByTeam(tmf_awc1.Team)) 
										AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, 
                                                   tmf_awc.Time_ID) AND tmf_awc.Time_ID AND Year(tmf_awc1.Date_of_injury) BETWEEN Year(tmf_awc.Time_ID) - 4 AND Year(tmf_awc.Time_ID) - 2
                                                   AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC)
                                                    )
                                                         
                                                         , Projection =
                          (SELECT     ISNULL(sum(Projection), 0)
                            FROM          dbo.TMF_AWC_Projections
                            WHERE      [Type] = '3-5' AND Unit_Type = 'team' AND Unit_Name = tmf_awc.Unit AND year(Time_Id) = Year(tmf_awc.Time_Id) AND month(Time_Id) 
                                                   = month(tmf_awc.Time_Id))
FROM    dbo.udf_TMF_AWC_Generate_Time_ID('sub_category','3-5') TMF_AWC

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_AWC_Weekly_Open_3_5.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_AWC_Weekly_Open_5_Plus.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_TMF_AWC_Weekly_Open_5_Plus')
	DROP VIEW [dbo].[uv_TMF_AWC_Weekly_Open_5_Plus]
GO
CREATE VIEW [dbo].[uv_TMF_AWC_Weekly_Open_5_Plus] 
AS 
SELECT  [Type] = 'TMF'
		,Unit = 'TMF'
		,[Primary] = 'TMF'
		,WeeklyType = '5-plus'
		,Time_Id
		,Month_Year = LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, Time_Id), 2)
		,Actual = 
                          (SELECT	COUNT(DISTINCT tmf_awc1.claim_no)
                            FROM    TMF_AWC tmf_awc1
                            WHERE	tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID AND
                                                   Year(tmf_awc1.Date_of_injury) < Year(tmf_awc.Time_ID) - 4
                                                   AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC) 	
                                                   )
		,Projection =  (SELECT ISNULL(sum(Projection), 0)
							FROM	dbo.TMF_AWC_Projections
							WHERE   [Type] = '5-plus' AND Unit_Type = 'TMF' 										 
									AND year(Time_Id) = Year(tmf_awc.Time_Id) 
									AND month(Time_Id)= month(tmf_awc.Time_Id))
FROM    dbo.udf_TMF_AWC_Generate_Time_ID('tmf','5-plus') TMF_AWC
	
UNION ALL
--Agency--
SELECT     [Type] = 'agency', Unit = RTRIM(Unit), [Primary] = RTRIM([Primary]), WeeklyType = '5-plus', Time_Id, LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, 
                      Time_Id), 2) AS Month_Year, Actual =
                          (SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
                            FROM          TMF_AWC tmf_awc1 left join TMF_Agencies_Sub_Category sub on tmf_awc1.POLICY_NO = sub.POLICY_NO
                            WHERE      RTRIM(ISNULL(AgencyName, 'Miscellaneous')) = RTRIM(tmf_awc.[Primary]) AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID AND 
                                                   Year(tmf_awc1.Date_of_injury) < Year(tmf_awc.Time_ID) - 4  
                                                   AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC) 	                                                  
                                                        )
                        , Projection =
                          (SELECT     ISNULL(sum(Projection), 0)
                            FROM          dbo.TMF_AWC_Projections
                            WHERE      [Type] = '5-plus' AND Unit_Type = 'agency' AND RTRIM(Unit_Name) = RTRIM(tmf_awc.[Primary]) AND year(Time_Id) = Year(tmf_awc.Time_Id) AND month(Time_Id) 
                                                   = month(tmf_awc.Time_Id))
FROM    dbo.udf_TMF_AWC_Generate_Time_ID('agency','5-plus') TMF_AWC

--Agency Police & Fire--
UNION ALL 
SELECT     [Type] = 'agency', Unit = 'Police & Fire', [Primary] = 'Police & Fire', WeeklyType = '5-plus', Time_Id, LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, 
                      Time_Id), 2) AS Month_Year, Actual =
                          (SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
                            FROM          TMF_AWC tmf_awc1 left join TMF_Agencies_Sub_Category sub on tmf_awc1.POLICY_NO = sub.POLICY_NO
                            WHERE      RTRIM(AgencyName) in ('Police','Fire') AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID AND 
                                                   Year(tmf_awc1.Date_of_injury) < Year(tmf_awc.Time_ID) - 4    
                                                   AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC) 	                                                
                                            )
                        , Projection =
                          (SELECT     ISNULL(sum(Projection), 0)
                            FROM          dbo.TMF_AWC_Projections
                            WHERE      [Type] = '5-plus' AND Unit_Type = 'agency' AND RTRIM(Unit_Name) in ('Police','Fire') AND year(Time_Id) = Year(tmf_awc.Time_Id) AND month(Time_Id) 
                                                   = month(tmf_awc.Time_Id))
FROM    dbo.udf_TMF_AWC_Generate_Time_ID('agency','5-plus') TMF_AWC
WHERE   RTRIM([Primary]) = 'Police'
		
--Agency Health & Other--
UNION ALL 
SELECT     [Type] = 'agency', Unit = 'Health & Other', [Primary] = 'Health & Other', WeeklyType = '5-plus', Time_Id, LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, 
                      Time_Id), 2) AS Month_Year, Actual =
                          (SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
                            FROM          TMF_AWC tmf_awc1 left join TMF_Agencies_Sub_Category sub on tmf_awc1.POLICY_NO = sub.POLICY_NO
                            WHERE      RTRIM(AgencyName) in ('Health','Other') AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID AND 
                                                   Year(tmf_awc1.Date_of_injury) < Year(tmf_awc.Time_ID) - 4  
                                                   AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC) 	                                                  
                                             )
                        , Projection =
                          (SELECT     ISNULL(sum(Projection), 0)
                            FROM          dbo.TMF_AWC_Projections
                            WHERE      [Type] = '5-plus' AND Unit_Type = 'agency' AND RTRIM(Unit_Name) in ('Health','Other') AND year(Time_Id) = Year(tmf_awc.Time_Id) AND month(Time_Id) 
                                                   = month(tmf_awc.Time_Id))
FROM    dbo.udf_TMF_AWC_Generate_Time_ID('agency','5-plus') TMF_AWC
WHERE   RTRIM([Primary]) = 'Health'

UNION ALL
SELECT     [Type] = 'group', Unit = RTRIM(Unit), [Primary] = RTRIM([Primary]), WeeklyType = '5-plus', Time_Id, LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, Time_Id), 2) 
                      AS Month_Year, Actual =
                          (SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
                            FROM          TMF_AWC tmf_awc1
                            WHERE      dbo.udf_TMF_GetGroupByTeam(Team) = RTRIM(tmf_awc.Unit) AND NOT EXISTS
                                                       (SELECT     1
                                                         FROM          tmf_awc tmf_awc2
                                                         WHERE      tmf_awc2.claim_no = tmf_awc1.claim_no AND tmf_awc2.time_id =
                                                                                    (SELECT     max(time_Id)
                                                                                      FROM          tmf_awc tmf_awc3
                                                                                      WHERE      tmf_awc3.claim_no = tmf_awc1.claim_no AND tmf_awc3.time_id BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID) 
																						AND dbo.udf_TMF_GetGroupByTeam(tmf_awc2.Team) <> dbo.udf_TMF_GetGroupByTeam(tmf_awc1.Team))
									AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, 
                                                   tmf_awc.Time_ID) AND tmf_awc.Time_ID AND Year(tmf_awc1.Date_of_injury) < Year(tmf_awc.Time_ID) - 4 
                                                  AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC) 	 
                                                )
                                , Projection =
                          (SELECT     ISNULL(sum(Projection), 0)
                            FROM          dbo.TMF_AWC_Projections
                            WHERE      [Type] = '5-plus' AND Unit_Type = 'group' AND RTRIM(Unit_Name) = RTRIM(tmf_awc.Unit) AND year(Time_Id) = Year(tmf_awc.Time_Id) AND month(Time_Id) 
                                                   = month(tmf_awc.Time_Id))
FROM    dbo.udf_TMF_AWC_Generate_Time_ID('group','5-plus') TMF_AWC

UNION ALL
SELECT     [Type] = 'sub_category', Unit = Unit, [Primary] = RTRIM([Primary]), WeeklyType = '5-plus', Time_Id, LEFT(datename(month, Time_Id), 3) 
                      + '- ' + RIGHT(datename(year, Time_Id), 2) AS Month_Year, Actual =
                          (SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
                            FROM          TMF_AWC tmf_awc1 left join TMF_Agencies_Sub_Category sub on tmf_awc1.POLICY_NO = sub.POLICY_NO
                            WHERE      RTRIM(ISNULL(Sub_Category, 'Miscellaneous')) = RTRIM(tmf_awc.Unit) AND RTRIM(AgencyName) = RTRIM(tmf_awc.[Primary]) AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, 
                                                   tmf_awc.Time_ID) AND tmf_awc.Time_ID AND Year(tmf_awc1.Date_of_injury) < Year(tmf_awc.Time_ID) - 4 
                                                   AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC) 	
                                                    )
                                    , Projection =
                          (SELECT     ISNULL(sum(Projection), 0)
                            FROM          dbo.TMF_AWC_Projections
                            WHERE      [Type] = '5-plus' AND Unit_Type = 'sub_category' AND Unit_Name = tmf_awc.Unit AND year(Time_Id) = Year(tmf_awc.Time_Id) AND 
                                                   month(Time_Id) = month(tmf_awc.Time_Id))
FROM    dbo.udf_TMF_AWC_Generate_Time_ID('sub_category','5-plus') TMF_AWC

UNION ALL
SELECT     [Type] = 'team', Unit = Unit, [Primary] = RTRIM([Primary]), WeeklyType = '5-plus', Time_Id, LEFT(datename(month, Time_Id), 3) + '- ' + RIGHT(datename(year, Time_Id), 2) 
                      AS Month_Year, Actual =
                          (SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
                            FROM          TMF_AWC tmf_awc1
                            WHERE       RTRIM(Team) = RTRIM(TMF_AWC.Unit)
										AND dbo.udf_TMF_GetGroupByTeam(Team) = RTRIM(TMF_AWC.[Primary])
										AND NOT EXISTS
                                                       (SELECT     1
                                                         FROM          tmf_awc tmf_awc2
                                                         WHERE      tmf_awc2.claim_no = tmf_awc1.claim_no 
															AND tmf_awc2.time_id =
																(SELECT     max(time_Id)
																  FROM          tmf_awc tmf_awc3
																  WHERE      tmf_awc3.claim_no = tmf_awc1.claim_no AND tmf_awc3.time_id BETWEEN DATEADD(mm, - 2, tmf_awc.Time_ID) AND tmf_awc.Time_ID) 
																			AND dbo.udf_TMF_GetGroupByTeam(tmf_awc2.Team) <> dbo.udf_TMF_GetGroupByTeam(tmf_awc1.Team))
										AND tmf_awc1.Time_ID BETWEEN DATEADD(mm, - 2, 
                                                   tmf_awc.Time_ID) AND tmf_awc.Time_ID AND Year(tmf_awc1.Date_of_injury) < Year(tmf_awc.Time_ID) - 4 
                                                   AND TMF_AWC.Time_ID <= (select MAX(Time_ID) from TMF_AWC) 	
                                                 )
                                                , Projection =
                          (SELECT     ISNULL(sum(Projection), 0)
                            FROM          dbo.TMF_AWC_Projections
                            WHERE      [Type] = '5-plus' AND Unit_Type = 'team' AND Unit_Name = tmf_awc.Unit AND year(Time_Id) = Year(tmf_awc.Time_Id) AND month(Time_Id) 
                                                   = month(tmf_awc.Time_Id))
FROM    dbo.udf_TMF_AWC_Generate_Time_ID('team','5-plus') TMF_AWC

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_AWC_Weekly_Open_5_Plus.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_AWC_Whole_TMF.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_TMF_AWC_Whole_TMF')
	DROP VIEW [dbo].[uv_TMF_AWC_Whole_TMF]
GO
CREATE VIEW [dbo].[uv_TMF_AWC_Whole_TMF] 
AS
	-----TMF------	
	SELECT  [UnitType] = 'TMF'
			,Unit = 'TMF'
			,[Primary] = 'TMF'
			,Transaction_Year = year(tmf_awc.Transaction_Date)
			,[Type] = 'Actual' 
			,No_of_Active_Weekly_Claims = isnull(
				(SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
				  FROM         TMF_AWC tmf_awc1
				  WHERE     tmf_awc1.time_id >= dateadd(mm, - 2,
								(SELECT    max(time_id) FROM  tmf_awc)) 
							AND year(Date_of_Injury) = year(tmf_awc.Transaction_Date))
				, 0)
	FROM    dbo.udf_Whole_TMF_Generate_Years('tmf') TMF_AWC

	UNION ALL ----Projection----	
	SELECT  [UnitType] = 'TMF'
			,Unit = 'TMF'
			,[Primary] = 'TMF'
			,Transaction_Year = Year(tmf_awc.Transaction_Date)
			,[Type] = 'Projection'
			,No_of_Active_Weekly_Claims = 
										isnull(
											(SELECT TOP 1 Projection
												FROM   dbo.TMF_AWC_Projections
												WHERE  [Type] = 'Whole-TMF' AND Unit_Type = 'TMF' 
														AND RTRIM(Unit_Name) = 'TMF'
														AND Time_Id = DATEADD(month,- 1,TMF_AWC.Transaction_Date) 
												ORDER BY time_id DESC	
											 )
										, 0)
	FROM  dbo.udf_Whole_TMF_Generate_Years('tmf') TMF_AWC
	-----End TMF------
	
	-----Agency------
	UNION ALL
	SELECT  [UnitType] = 'agency'
			,Unit = tmf_awc.Unit
			,[Primary] = tmf_awc.[Primary]
			,Transaction_Year = Year(tmf_awc.Transaction_Date)
			,[Type] = 'Actual' 
			,No_of_Active_Weekly_Claims = isnull(
				(SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
				  FROM         TMF_AWC tmf_awc1 left join TMF_Agencies_Sub_Category sub on tmf_awc1.POLICY_NO = sub.POLICY_NO
				  WHERE     RTRIM(ISNULL(AgencyName, 'Miscellaneous')) = RTRIM(tmf_awc.[Primary]) 
							AND tmf_awc1.time_id >= dateadd(mm, - 2,
								(SELECT    max(time_id) FROM  tmf_awc)) 
							AND year(Date_of_Injury) = Year(tmf_awc.Transaction_Date))
				, 0)
	FROM    dbo.udf_Whole_TMF_Generate_Years('agency') TMF_AWC
	
	UNION ALL ----Projection----
	SELECT  [UnitType] = 'agency'
			,Unit = Unit
			,[Primary] = [Primary]
			,Transaction_Year = Year(Transaction_Date)
			,[Type] = 'Projection'
			,No_of_Active_Weekly_Claims = 
				isnull(
					(SELECT top 1 Projection
						FROM   dbo.TMF_AWC_Projections
						WHERE [Type] = 'Whole-TMF' AND Unit_Type = 'agency' 
							AND RTRIM(Unit_Name) = RTRIM(tmf_awc.[Primary])							
							AND Time_Id = DATEADD(month,- 1,TMF_AWC.Transaction_Date) 
						ORDER BY time_id DESC							
					)
				, 0)
	FROM   dbo.udf_Whole_TMF_Generate_Years('agency') TMF_AWC	
	
	--Agency Police & Fire--
	UNION ALL
	SELECT  [UnitType] = 'agency'
			,Unit = 'Police & Fire'
			,[Primary] = 'Police & Fire'
			,Transaction_Year = Year(Transaction_Date)
			,[Type] = 'Actual' 
			,No_of_Active_Weekly_Claims = isnull(
				(SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
				  FROM         TMF_AWC tmf_awc1 left join TMF_Agencies_Sub_Category sub on tmf_awc1.POLICY_NO = sub.POLICY_NO
				  WHERE     RTRIM(AgencyName) in ('Police','Fire')
							AND tmf_awc1.time_id >= dateadd(mm, - 2,
								(SELECT    max(time_id) FROM  tmf_awc)) 
							AND year(Date_of_Injury) = Year(tmf_awc.Transaction_Date))
				, 0)
	FROM    dbo.udf_Whole_TMF_Generate_Years('agency') TMF_AWC
	WHERE	RTRIM([Primary]) = 'Police'

	UNION ALL ----Projection----
	SELECT  [UnitType] = 'agency'
			,Unit = 'Police & Fire'
			,[Primary] = 'Police & Fire'
			,Transaction_Year = Year(Transaction_Date)
			,[Type] = 'Projection'
			,No_of_Active_Weekly_Claims = 
				isnull(
					(SELECT top 1 Projection
						FROM   dbo.TMF_AWC_Projections
						WHERE [Type] = 'Whole-TMF' AND Unit_Type = 'agency' 
							AND RTRIM(Unit_Name) in ('Police', 'Fire')							
							AND Time_Id = DATEADD(month,- 1,TMF_AWC.Transaction_Date) 
						ORDER BY time_id DESC							
					)
				, 0)
	FROM    dbo.udf_Whole_TMF_Generate_Years('agency') TMF_AWC
	WHERE	RTRIM([Primary])  = 'Police'
	
	--Agency Health & Other--
	UNION ALL
	SELECT  [UnitType] = 'agency'
			,Unit = 'Health & Other'
			,[Primary] = 'Health & Other'
			,Transaction_Year = Year(Transaction_Date)
			,[Type] = 'Actual' 
			,No_of_Active_Weekly_Claims = isnull(
				(SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
				  FROM         TMF_AWC tmf_awc1 left join TMF_Agencies_Sub_Category sub on tmf_awc1.POLICY_NO = sub.POLICY_NO
				  WHERE     RTRIM(AgencyName) in ('Health','Other')
							AND tmf_awc1.time_id >= dateadd(mm, - 2,
								(SELECT    max(time_id) FROM  tmf_awc)) 
							AND year(Date_of_Injury) = Year(tmf_awc.Transaction_Date))
				, 0)
	FROM    dbo.udf_Whole_TMF_Generate_Years('agency') TMF_AWC
	WHERE	RTRIM([Primary]) = 'Health'

	UNION ALL ----Projection----
	SELECT  [UnitType] = 'agency'
			,Unit = 'Health & Other'
			,[Primary] = 'Health & Other'
			,Transaction_Year = Year(Transaction_Date)
			,[Type] = 'Projection'
			,No_of_Active_Weekly_Claims = 
				isnull(
					(SELECT top 1 Projection
						FROM   dbo.TMF_AWC_Projections
						WHERE [Type] = 'Whole-TMF' AND Unit_Type = 'agency' 
							AND RTRIM(Unit_Name) in ('Health','Other')						
							AND Time_Id = DATEADD(month,- 1,TMF_AWC.Transaction_Date) 	
						ORDER BY time_id DESC							
					)
				, 0)
	FROM    dbo.udf_Whole_TMF_Generate_Years('agency') TMF_AWC
	WHERE	RTRIM([Primary]) = 'Health'
	-----End Agency------

	-----Group------
	UNION ALL
	SELECT	[UnitType] = 'group'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Date)
			,[Type] = 'Actual'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   COUNT(DISTINCT tmf_awc1.claim_no)
					  FROM  TMF_AWC tmf_awc1
					  WHERE dbo.udf_TMF_GetGroupByTeam(Team) = RTRIM(tmf_awc.[Primary]) 
							AND tmf_awc1.time_id >= dateadd(mm, - 2,
								(SELECT     max(time_id) FROM tmf_awc)) 
							AND year(Date_of_Injury) = Year(tmf_awc.Transaction_Date))
					, 0)
	FROM     dbo.udf_Whole_TMF_Generate_Years('group')   TMF_AWC
	
	UNION ALL
	SELECT  [UnitType] = 'group'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Date) 
			,[Type] = 'Projection' 
			,No_of_Active_Weekly_Claims = isnull(
					(SELECT     top 1 Projection
						FROM    dbo.TMF_AWC_Projections
						WHERE   [Type] = 'Whole-TMF' AND Unit_Type = 'group' 
								AND RTRIM(Unit_Name) = RTRIM(tmf_awc.Unit)								
								AND Time_Id = DATEADD(month,- 1,TMF_AWC.Transaction_Date) 
						ORDER BY time_id DESC	
					)
					, 0)
	FROM     dbo.udf_Whole_TMF_Generate_Years('group') TMF_AWC
	-----End Group------
	
	-----Sub Category------
	UNION ALL
	SELECT  [UnitType] = 'sub_category'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year =Year(Transaction_Date)
			,[Type] = 'Actual'
			,No_of_Active_Weekly_Claims = isnull(
					(SELECT     COUNT(DISTINCT tmf_awc1.claim_no)
					  FROM         TMF_AWC tmf_awc1 left join TMF_Agencies_Sub_Category sub on tmf_awc1.POLICY_NO = sub.POLICY_NO
					  WHERE     RTRIM(ISNULL(Sub_Category, 'Miscellaneous')) = RTRIM(tmf_awc.Unit)
								AND RTRIM(ISNULL(AgencyName, 'Miscellaneous')) = RTRIM(tmf_awc.[Primary])
								AND tmf_awc1.time_id >= dateadd(mm, - 2,
									(SELECT max(time_id) FROM tmf_awc)) 
								AND year(Date_of_Injury) = Year(tmf_awc.Transaction_Date))
					, 0)
	FROM     dbo.udf_Whole_TMF_Generate_Years('sub_category') TMF_AWC
	
	UNION ALL
	SELECT  [UnitType] = 'sub_category'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Year(Transaction_Date) AS Transaction_Year
			,[Type] = 'Projection'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   top 1 Projection
					  FROM  dbo.TMF_AWC_Projections
					  WHERE [Type] = 'Whole-TMF' AND Unit_Type = 'sub_category' 
							AND RTRIM(Unit_Name) = RTRIM(tmf_awc.Unit)							
							AND Time_Id = DATEADD(month,- 1,TMF_AWC.Transaction_Date) 
					  ORDER BY time_id DESC	
					)
				, 0)
	FROM    dbo.udf_Whole_TMF_Generate_Years('sub_category') TMF_AWC
	---End Sub category---
	
	---Team---
	UNION ALL
	SELECT  [UnitType] = 'team'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year = Year(Transaction_Date)
			,[Type] = 'Actual'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   COUNT(DISTINCT tmf_awc1.claim_no)
					  FROM  TMF_AWC tmf_awc1
					  WHERE RTRIM(Team) = RTRIM(TMF_AWC.Unit) 
							AND dbo.udf_TMF_GetGroupByTeam(Team) = RTRIM(TMF_AWC.[Primary])
							AND tmf_awc1.time_id >= dateadd(mm, - 2,(SELECT max(time_id) FROM tmf_awc)) 
							AND year(Date_of_Injury) = Year(tmf_awc.Transaction_Date))
					, 0)
	FROM     dbo.udf_Whole_TMF_Generate_Years('team') TMF_AWC
	
	UNION ALL
	SELECT  [UnitType] = 'team'
			,Unit = RTRIM(Unit)
			,[Primary] = RTRIM([Primary])
			,Transaction_Year =Year(Transaction_Date)
			,[Type] = 'Projection'
			,No_of_Active_Weekly_Claims = isnull(
				  (SELECT   top 1 Projection
					  FROM  dbo.TMF_AWC_Projections
					  WHERE [Type] = 'Whole-TMF' AND Unit_Type = 'team' 
								AND RTRIM(Unit_Name) = RTRIM(tmf_awc.Unit)								
								AND Time_Id = DATEADD(month,- 1,TMF_AWC.Transaction_Date) 
					  ORDER BY time_id DESC	
					)
				 , 0)
	FROM     dbo.udf_Whole_TMF_Generate_Years('team') TMF_AWC

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_AWC_Whole_TMF.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current')
	DROP VIEW [dbo].[uv_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current]
GO
CREATE VIEW [dbo].[uv_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current] 
AS
	--Agency---	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='agency'
			,'TMF' as Agency_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_TMF_RTW_getTargetAndBase(Remuneration_End,'target','agency','TMF',NULL,Measure),0)	
	from tmf_rtw uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Measure,Remuneration_Start, Remuneration_End
	
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='agency'
			,rtrim(isnull(sub.AgencyName,'Miscellaneous')) as Agency_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_TMF_RTW_getTargetAndBase(Remuneration_End,'target','agency',rtrim(isnull(sub.AgencyName,'Miscellaneous')),NULL,Measure),0)
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   
	group by rtrim(isnull(sub.AgencyName,'Miscellaneous')),Measure, Remuneration_Start, Remuneration_End
	
	--Agency Police & Fire
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='agency'
			,'POLICE & FIRE' as Agency_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_TMF_RTW_getTargetAndBase(Remuneration_End,'target','agency','Police & Fire',NULL,Measure),0)
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Police','Fire')

	group by Measure, Remuneration_Start, Remuneration_End
	
	--Agency Health & Other
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='agency'
			,'HEALTH & OTHER' as Agency_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_TMF_RTW_getTargetAndBase(Remuneration_End,'target','agency','Health & Other',NULL,Measure),0)
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Health','Other')

	group by Measure, Remuneration_Start, Remuneration_End
	
	---Group---
	union all
	
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='group'
			,'TMF' as Agency_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_TMF_RTW_getTargetAndBase(Remuneration_End,'target','group','TMF',NULL,Measure),0)
	from tmf_rtw uv
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Measure,Remuneration_Start, Remuneration_End
	
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='group'
			,rtrim(isnull(sub.[Group],'Miscellaneous')) as Agency_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_TMF_RTW_getTargetAndBase(Remuneration_End,'target','group',rtrim(isnull(sub.[group],'Miscellaneous')),NULL,Measure),0)
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by rtrim(isnull(sub.[Group],'Miscellaneous')),Measure,Remuneration_Start, Remuneration_End	
	
	union all 
	select  Month_period
			,[type]
			,Agency_Group
			,Measure_months
			,LT
			,WGT
			,AVGDURN
			,[Target]
	from dbo.udf_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current_Add_Missing_Group()
	where Measure_months not in (select distinct Measure from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
							where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
							and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) = case when month_period = 1 then 0
																						   when month_period = 3 then 2
																						   when month_period = 6 then 5
																						   when month_period = 12 then 11
																					  end
							and CHARINDEX(case when RTRIM(Agency_Group) = 'TMF' then 'TMF' else RTRIM(sub.AgencyName) end, RTRIM(Agency_Group),0) > 0
							)
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Current.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Previous.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Previous')
	DROP VIEW [dbo].[uv_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Previous]
GO
CREATE VIEW [dbo].[uv_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Previous] 
AS
	--Agency---
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='agency'
			,'TMF' as Agency_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from tmf_rtw uv 
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.TMF_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)
	
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='agency'
			,rtrim(isnull(sub.AgencyName,'Miscellaneous')) as Agency_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.TMF_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by rtrim(isnull(sub.AgencyName,'Miscellaneous')),Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)	
	
	--Agency Police & Fire--
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='agency'
			,'POLICE & FIRE' as Agency_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.TMF_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Police','Fire')
	group by Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)
	
	--Agency Health & Other--
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='agency'
			,'HEALTH & OTHER' as Agency_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.TMF_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Health','Other')
	group by Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)
	
	---Group---
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='group'
			,'TMF' as Agency_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from tmf_rtw uv 
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.TMF_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)
	
	union all
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='group'
			,rtrim(isnull(sub.[Group],'Miscellaneous')) as Agency_Group
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.TMF_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by rtrim(isnull(sub.[Group],'Miscellaneous')),Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)	

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Agency_Group_Compares_To_Same_Time_Last_Year_Previous.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Agency_Group_Rolling_Month_1.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================
--select * from uv_TMF_RTW_Agency_Group_Rolling_Month_1
IF EXISTS(select * FROM sys.views where name = 'uv_TMF_RTW_Agency_Group_Rolling_Month_1')
	DROP VIEW [dbo].[uv_TMF_RTW_Agency_Group_Rolling_Month_1]
GO
CREATE VIEW [dbo].[uv_TMF_RTW_Agency_Group_Rolling_Month_1] 
AS

SELECT     rtrim(isnull(sub.[Group],'Miscellaneous')) as Agency_Group
		  ,[Type] = 'group'
		  ,uv.Remuneration_Start 
		  ,uv.Remuneration_End
		  ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
          
          , Measure AS Measure_months
          , SUM(uv.LT) AS LT
          , SUM(uv.WGT) AS WGT
          , SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'target','group',rtrim(isnull(sub.[Group],'Miscellaneous')),NULL,uv.Measure)									
		  , Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'base','group',rtrim(isnull(sub.[Group],'Miscellaneous')),NULL,uv.Measure)
						
FROM         dbo.TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
GROUP BY  rtrim(isnull(sub.[Group],'Miscellaneous')), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL

SELECT     rtrim(isnull(sub.AgencyName,'Miscellaneous')) as Agency_Group
		   ,[Type] = 'agency' 
		   ,uv.Remuneration_Start
		   , uv.Remuneration_End
		   ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
          
          , Measure AS Measure_months
          , SUM(uv.LT) AS LT
          , SUM(uv.WGT) AS WGT
          , SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'target','agency',rtrim(isnull(sub.AgencyName,'Miscellaneous')),NULL,uv.Measure)									
		  , Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'base','agency',rtrim(isnull(sub.AgencyName,'Miscellaneous')),NULL,uv.Measure)					 
FROM         dbo.TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
GROUP BY  rtrim(isnull(sub.AgencyName,'Miscellaneous')), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

--Agency Police & Fire--
UNION ALL

SELECT     'POLICE & FIRE' as Agency_Group
		   ,[Type] = 'agency' 
		   ,uv.Remuneration_Start
		   , uv.Remuneration_End
		   ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
          
          , Measure AS Measure_months
          , SUM(uv.LT) AS LT
          , SUM(uv.WGT) AS WGT
          , SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'target','agency','Police & Fire',NULL,uv.Measure)									
		  , Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'base','agency','Police & Fire',NULL,uv.Measure)					 
FROM         dbo.TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
		and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Police','Fire')
GROUP BY  uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

--Agency Health & Other--
UNION ALL

SELECT     'HEALTH & OTHER' as Agency_Group
		   ,[Type] = 'agency' 
		   ,uv.Remuneration_Start
		   , uv.Remuneration_End
		   ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
          
          , Measure AS Measure_months
          , SUM(uv.LT) AS LT
          , SUM(uv.WGT) AS WGT
          , SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'target','agency','Health & Other',NULL,uv.Measure)									
		  , Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'base','agency','Health & Other',NULL,uv.Measure)					 
FROM         dbo.TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
		and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Health','Other')
GROUP BY  uv.Remuneration_Start, uv.Remuneration_End, uv.Measure


UNION ALL
SELECT     'TMF' AS Agency_Group
			, [Type] = 'group'
			,t.Remuneration_Start
		    ,t.Remuneration_End
			, Remuneration = cast(year(t .Remuneration_End) AS varchar) + 'M' + CASE WHEN MONTH(t .Remuneration_End) 
                      <= 9 THEN '0' ELSE '' END + cast(month(t .Remuneration_End) AS varchar)                      
			, Measure AS Measure_months
			, SUM(t.LT) AS LT
            , SUM(t.WGT) AS WGT
			, SUM(LT) / SUM(WGT) AS AVGDURN			
			, [Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(t.Remuneration_End,'target','group','TMF',NULL,t.Measure)
			, Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(t.Remuneration_End,'base','group','TMF',NULL,t.Measure)
            
            
FROM         tmf_rtw t inner join (SELECT     dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)) - 23, 0))) + '23:59' AS Remuneration_End
                       FROM          master.dbo.spt_values
                       WHERE      'P' = type AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)) - 23, 0))) + '23:59' <= (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)) u on t.Remuneration_End = u.Remuneration_End
AND     DATEDIFF(MM, t .remuneration_start, t .remuneration_end) = 0
GROUP BY  t .Measure, t .remuneration_start, t .remuneration_end

UNION ALL

SELECT     'TMF' AS Agency_Group
			, [Type] = 'agency'
			,t.Remuneration_Start
			,t.Remuneration_End
			, Remuneration = cast(year(t .Remuneration_End) AS varchar) + 'M' + CASE WHEN MONTH(t .Remuneration_End) 
                      <= 9 THEN '0' ELSE '' END + cast(month(t .Remuneration_End) AS varchar)                      
			, Measure AS Measure_months
			, SUM(t.LT) AS LT
            , SUM(t.WGT) AS WGT
			, SUM(LT) / SUM(WGT) AS AVGDURN
			
			, [Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(t.Remuneration_End,'target','agency','TMF',NULL,t.Measure)
			, Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(t.Remuneration_End,'base','agency','TMF',NULL,t.Measure)
            
            
FROM         tmf_rtw t inner join (SELECT     dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)) - 23, 0))) + '23:59' AS Remuneration_End
                       FROM          master.dbo.spt_values
                       WHERE      'P' = type AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)) - 23, 0))) + '23:59' <= (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)) u on t.Remuneration_End = u.Remuneration_End
AND     DATEDIFF(MM, t .remuneration_start, t .remuneration_end) = 0
GROUP BY  t .Measure, t .remuneration_start, t .remuneration_end


GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Agency_Group_Rolling_Month_1.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Agency_Group_Rolling_Month_12.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================
--select * from uv_TMF_RTW_Agency_Group_Rolling_Month_12
IF EXISTS(select * FROM sys.views where name = 'uv_TMF_RTW_Agency_Group_Rolling_Month_12')
	DROP VIEW [dbo].[uv_TMF_RTW_Agency_Group_Rolling_Month_12]
GO
CREATE VIEW [dbo].[uv_TMF_RTW_Agency_Group_Rolling_Month_12] 
AS

SELECT    Agency_Group = rtrim(isnull(sub.[Group],'Miscellaneous'))
		  ,[Type] = 'group'
		  ,uv.Remuneration_Start 
		  ,uv.Remuneration_End
		  ,Remuneration = cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) 
          
          ,Measure_months = Measure 
          ,LT = SUM(uv.LT)
          ,WGT = SUM(uv.WGT)
          ,AVGDURN = SUM(uv.LT) / nullif(SUM(uv.WGT),0)
          ,[Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'target','group',rtrim(isnull(sub.[Group],'Miscellaneous')),NULL,uv.Measure)									
		  ,Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'base','group',rtrim(isnull(sub.[Group],'Miscellaneous')),NULL,uv.Measure)
						
FROM      dbo.TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO

WHERE	  DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 
		  and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)

GROUP BY  rtrim(isnull(sub.[Group],'Miscellaneous')), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL

SELECT     Agency_Group = rtrim(isnull(sub.AgencyName,'Miscellaneous'))
		   ,[Type] = 'agency' 
		   ,uv.Remuneration_Start
		   ,uv.Remuneration_End
		   ,Remuneration = cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar)
          
          ,Measure_months = Measure
          ,LT = SUM(uv.LT)
          ,WGT = SUM(uv.WGT)
          ,AVGDURN = SUM(uv.LT) / nullif(SUM(uv.WGT),0)
          ,[Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'target','agency',rtrim(isnull(sub.AgencyName,'Miscellaneous')),NULL,uv.Measure)									
		  ,Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'base','agency',rtrim(isnull(sub.AgencyName,'Miscellaneous')),NULL,uv.Measure)					 
FROM         dbo.TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
WHERE	  DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 
			and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
GROUP BY  rtrim(isnull(sub.AgencyName,'Miscellaneous')), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

--Agency Police & Fire--
UNION ALL

SELECT     Agency_Group = 'POLICE & FIRE'
		   ,[Type] = 'agency' 
		   ,uv.Remuneration_Start
		   ,uv.Remuneration_End
		   ,Remuneration = cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar)
          
          ,Measure_months = Measure
          ,LT = SUM(uv.LT)
          ,WGT = SUM(uv.WGT)
          ,AVGDURN = SUM(uv.LT) / nullif(SUM(uv.WGT),0)
          ,[Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'target','agency','Police & Fire',NULL,uv.Measure)									
		  ,Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'base','agency','Police & Fire',NULL,uv.Measure)					 
FROM         dbo.TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
WHERE	  DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 
			and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
			and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Police','Fire')
GROUP BY  uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

--Agency Health & Other--
UNION ALL

SELECT     Agency_Group = 'HEALTH & OTHER'
		   ,[Type] = 'agency' 
		   ,uv.Remuneration_Start
		   ,uv.Remuneration_End
		   ,Remuneration = cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar)
          
          ,Measure_months = Measure
          ,LT = SUM(uv.LT)
          ,WGT = SUM(uv.WGT)
          ,AVGDURN = SUM(uv.LT) / nullif(SUM(uv.WGT),0)
          ,[Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'target','agency','Health & Other',NULL,uv.Measure)									
		  ,Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'base','agency','Health & Other',NULL,uv.Measure)					 
FROM         dbo.TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
WHERE	  DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 
			and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
			and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Health','Other')
GROUP BY  uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL
SELECT     Agency_Group ='TMF'
			,[Type] = 'group'
			,t.Remuneration_Start
		    ,t.Remuneration_End
			, Remuneration = cast(year(t .Remuneration_End) AS varchar) + 'M' + CASE WHEN MONTH(t .Remuneration_End) 
                      <= 9 THEN '0' ELSE '' END + cast(month(t .Remuneration_End) AS varchar)                      
			,Measure_months = Measure
			,LT= SUM(t.LT)
            ,WGT= SUM(t.WGT)
			,AVGDURN= SUM(LT) / SUM(WGT)			
			,[Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(t.Remuneration_End,'target','group','TMF',NULL,t.Measure)
			,Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(t.Remuneration_End,'base','group','TMF',NULL,t.Measure)

FROM         tmf_rtw t 
inner join (SELECT     dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)) - 23, 0))) + '23:59' AS Remuneration_End
                       FROM          master.dbo.spt_values
                       WHERE      'P' = type AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)) - 23, 0))) + '23:59' <= (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)) u on t.Remuneration_End = u.Remuneration_End
AND     DATEDIFF(MM, t .remuneration_start, t .remuneration_end) = 11
GROUP BY  t .Measure, t .remuneration_start, t .remuneration_end

UNION ALL

SELECT     Agency_Group= 'TMF'
			,[Type] = 'agency'
			,t.Remuneration_Start
		    ,t.Remuneration_End
			,Remuneration = cast(year(t .Remuneration_End) AS varchar) + 'M' + CASE WHEN MONTH(t .Remuneration_End) 
                      <= 9 THEN '0' ELSE '' END + cast(month(t .Remuneration_End) AS varchar)                      
			,Measure_months= Measure
			,LT = SUM(t.LT)  
            ,WGT =SUM(t.WGT)  
			,AVGDURN =SUM(LT) / SUM(WGT)  			
			,[Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(t.Remuneration_End, 'target','agency','TMF',NULL,t.Measure)
			,Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(t.Remuneration_End,'base','agency','TMF',NULL,t.Measure)

FROM         tmf_rtw t inner join (SELECT     dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)) - 23, 0))) + '23:59' AS Remuneration_End
                       FROM          master.dbo.spt_values
                       WHERE      'P' = type AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)) - 23, 0))) + '23:59' <= (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)) u on t.Remuneration_End = u.Remuneration_End
AND     DATEDIFF(MM, t .remuneration_start, t .remuneration_end) = 11
GROUP BY  t .Measure, t .remuneration_start, t .remuneration_end


GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Agency_Group_Rolling_Month_12.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Raw_Data.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_TMF_RTW_Raw_Data')
	DROP VIEW [dbo].[uv_TMF_RTW_Raw_Data]
GO
CREATE VIEW [dbo].[uv_TMF_RTW_Raw_Data] 
AS
	SELECT  Claim_Closed_flag
			,Remuneration_Start
			,Remuneration_End
			,Measure_months = Measure
			,[Group] = rtrim(isnull(sub.[Group],'Miscellaneous'))
			,Team
			,Sub_Category = rtrim(isnull(sub.Sub_Category,'Miscellaneous'))
			,Case_manager
			,Agency = rtrim(isnull(sub.AgencyName,'Miscellaneous'))
			,rtw.Claim_no
			,DTE_OF_INJURY 
			,rtw.POLICY_NO
			,LT= ROUND(LT, 2)
			,WGT=ROUND(WGT, 2)
			,EMPL_SIZE
			,Weeks_from_date_of_injury= DATEDIFF(week, DTE_OF_INJURY, Remuneration_End)
			,Weeks_paid= ROUND(Weeks_paid, 2)
			,Stress
			,Liability_Status
			,cost_code
			,cost_code2
			,Cert_Type
			,Med_cert_From
			,Med_cert_To
			,rtw.Account_Manager
			,rtw.Cell_no
			,rtw.Portfolio
	
	FROM dbo.TMF_RTW rtw left join TMF_Agencies_Sub_Category sub on rtw.POLICY_NO = sub.POLICY_NO
	WHERE remuneration_End = (SELECT max(remuneration_End) FROM  dbo.TMF_RTW)
		 AND  DATEDIFF(month, Remuneration_Start, Remuneration_End) + 1 =12  
		 
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Raw_Data.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Current.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_TMF_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Current')
	DROP VIEW [dbo].[uv_TMF_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Current]
GO
CREATE VIEW [dbo].[uv_TMF_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Current] 
AS
	WITH temp AS 
	(
		select * 
		from
			(select 0 as month_period
			union all
			select 2 as month_period
			union all
			select 5 as month_period
			union all
			select 11 as month_period) as month_period
			cross join
			(select 13 as Measure_months
			union all
			select 26 as Measure_months
			union all
			select 52 as Measure_months
			union all
			select 78 as Measure_months
			union all
			select 104 as Measure_months) as measure_months		
			cross join
			(
			select distinct rtrim(isnull(sub.AgencyName,'Miscellaneous')) as Agency_Group
					,rtrim(isnull(sub.Sub_Category,'Miscellaneous')) as Team_Sub
			from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO 
			where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
			   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
			) as temp_value
	)
	
	--Agency---		
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='agency'
			,rtrim(isnull(sub.AgencyName,'Miscellaneous')) as Agency_Group
			,rtrim(isnull(sub.Sub_Category,'Miscellaneous')) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
			,[Target] = sum(LT)/nullif(sum(WGT),0)*100/nullif(dbo.udf_dashboard_TMF_RTW_getTargetAndBase(Remuneration_End,'target','agency',rtrim(isnull(sub.AgencyName,'Miscellaneous')),rtrim(isnull(sub.Sub_Category,'Miscellaneous')),Measure),0)
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
	where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by rtrim(isnull(sub.AgencyName,'Miscellaneous')),rtrim(isnull(sub.Sub_Category,'Miscellaneous')),Measure,Remuneration_Start, Remuneration_End
	
	union all
	select Month_period=case when month_period = 0
							then 1
						 when month_period = 2
							then 3
						 when month_period = 5
							then 6
						 when month_period = 11
							then 12
					end
		  ,[type]='agency'
		  ,Agency_Group
		  ,Team_Sub
		  ,Measure_months
		  ,LT = 0
		  ,WGT = 0
		  ,AVGDURN = 0
		  ,[Target] = 0
	from temp as tmp
	where Measure_months not in (select distinct Measure from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
							where  uv.Remuneration_End = (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
							and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) = tmp.month_period
							and sub.AgencyName = tmp.Agency_Group
							and sub.Sub_Category = tmp.Team_Sub)

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Current.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Previous.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_TMF_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Previous')
	DROP VIEW [dbo].[uv_TMF_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Previous]
GO
CREATE VIEW [dbo].[uv_TMF_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Previous] 
AS
	--Agency---		
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='agency'
			,rtrim(isnull(sub.AgencyName,'Miscellaneous')) as Agency_Group
			,rtrim(isnull(sub.Sub_Category,'Miscellaneous')) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.TMF_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by rtrim(isnull(sub.AgencyName,'Miscellaneous')),rtrim(isnull(sub.Sub_Category,'Miscellaneous')),Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)		
		
	--Agency Police & Fire--
	Union All
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='agency'
			,'Police & Fire' as Agency_Group
			,rtrim(isnull(sub.Sub_Category,'Miscellaneous')) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.TMF_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Police','Fire') 

	group by rtrim(isnull(sub.Sub_Category,'Miscellaneous')),Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)		
	
	--Agency Health & Other--
	Union All
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='agency'
			,'Health & Other' as Agency_Group
			,rtrim(isnull(sub.Sub_Category,'Miscellaneous')) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.TMF_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)
		   and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Health','Other') 

	group by rtrim(isnull(sub.Sub_Category,'Miscellaneous')),Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)	
		
	---Group---
	union all 
	select Month_period=case when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 0
							then 1
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 2
							then 3
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 5
							then 6
						 when DATEDIFF(MM, Remuneration_Start, Remuneration_End) = 11
							then 12
					end
			,[type]='group'
			,rtrim(isnull(sub.[Group],'Miscellaneous')) as Agency_Group
			,rtrim(Team) as Team_Sub
			,Measure as Measure_months
			,sum(LT) as LT,sum(WGT) as WGT
			,sum(LT)/nullif(sum(WGT),0) as AVGDURN 
	from tmf_rtw uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
	where  uv.Remuneration_End = dateadd(mm,-12,(SELECT max(Remuneration_End) FROM  dbo.TMF_RTW))
		   and  DATEDIFF(MM, Remuneration_Start, Remuneration_End) in (0,2,5,11)

	group by rtrim(isnull(sub.[Group],'Miscellaneous')),Team,Measure,DATEDIFF(MM, Remuneration_Start, Remuneration_End)

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Sub_Team_Compares_To_Same_Time_Last_Year_Previous.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Team_Sub_Rolling_Month_1.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================
--select * from uv_TMF_RTW_Team_Sub_Rolling_Month_1
IF EXISTS(select * FROM sys.views where name = 'uv_TMF_RTW_Team_Sub_Rolling_Month_1')
	DROP VIEW [dbo].[uv_TMF_RTW_Team_Sub_Rolling_Month_1]
GO
CREATE VIEW [dbo].[uv_TMF_RTW_Team_Sub_Rolling_Month_1] 
AS

SELECT     rtrim(uv.Team) as Team_Sub
			, rtrim(isnull(sub.[Group],'Miscellaneous')) as Agency_Group
			,[Type] = 'group'
			,uv.Remuneration_Start
			,uv.Remuneration_End
			,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
                      
			,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
			,[Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'target','group',rtrim(isnull(sub.[Group],'Miscellaneous')),uv.Team,uv.Measure)									
			, Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'base','group',rtrim(isnull(sub.[Group],'Miscellaneous')),uv.Team,uv.Measure)
						
FROM         dbo.TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
GROUP BY uv.Team, rtrim(isnull(sub.[Group],'Miscellaneous')), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL

SELECT    rtrim(isnull(sub.Sub_Category,'Miscellaneous')) as Team_Sub
		  , rtrim(isnull(sub.AgencyName,'Miscellaneous')) as  Agency_Group
		  ,[Type] = 'agency' 
		  ,uv.Remuneration_Start
		  , uv.Remuneration_End
		  ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
                      
          ,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          ,[Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'target','agency',rtrim(isnull(sub.AgencyName,'Miscellaneous')),rtrim(isnull(sub.Sub_Category,'Miscellaneous')),uv.Measure)									
		  ,Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'base','agency',rtrim(isnull(sub.AgencyName,'Miscellaneous')),rtrim(isnull(sub.Sub_Category,'Miscellaneous')),uv.Measure)					 
FROM         dbo.TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
GROUP BY rtrim(isnull(sub.Sub_Category,'Miscellaneous')), rtrim(isnull(sub.AgencyName,'Miscellaneous')), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

--Agency Police & Fire--
UNION ALL

SELECT    rtrim(isnull(sub.Sub_Category,'Miscellaneous')) as Team_Sub
		  , 'Police & Fire' as Agency_Group
		  ,[Type] = 'agency' 
		  ,uv.Remuneration_Start
		  , uv.Remuneration_End
		  ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
                      
          ,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          ,[Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'target','agency','Police & Fire',rtrim(isnull(sub.Sub_Category,'Miscellaneous')),uv.Measure)									
		  ,Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'base','agency','Police & Fire',rtrim(isnull(sub.Sub_Category,'Miscellaneous')),uv.Measure)					 
FROM         dbo.TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
	  and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Police','Fire') 
GROUP BY rtrim(isnull(sub.Sub_Category,'Miscellaneous')),  uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

--Agency Health & Other--
UNION ALL

SELECT    rtrim(isnull(sub.Sub_Category,'Miscellaneous')) as Team_Sub
		  , 'Health & Other' as Agency_Group
		  ,[Type] = 'agency' 
		  ,uv.Remuneration_Start
		  , uv.Remuneration_End
		  ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
                      
          ,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          ,[Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'target','agency','Health & Other',rtrim(isnull(sub.Sub_Category,'Miscellaneous')),uv.Measure)									
		  ,Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'base','agency','Health & Other',rtrim(isnull(sub.Sub_Category,'Miscellaneous')),uv.Measure)					 
FROM         dbo.TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =0 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
	  and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Health','Other') 
GROUP BY rtrim(isnull(sub.Sub_Category,'Miscellaneous')), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure


GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Team_Sub_Rolling_Month_1.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Team_Sub_Rolling_Month_12.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================
--select * from uv_TMF_RTW_Team_Sub_Rolling_Month_12
IF EXISTS(select * FROM sys.views where name = 'uv_TMF_RTW_Team_Sub_Rolling_Month_12')
	DROP VIEW [dbo].[uv_TMF_RTW_Team_Sub_Rolling_Month_12]
GO
CREATE VIEW [dbo].[uv_TMF_RTW_Team_Sub_Rolling_Month_12] 
AS

SELECT     rtrim(uv.Team) as Team_Sub
		  ,rtrim(isnull(sub.[Group],'Miscellaneous')) as  Agency_Group
		  ,[Type] = 'group'
		  ,uv.Remuneration_Start 
		  ,uv.Remuneration_End
		  ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration        
          ,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'target','group',rtrim(isnull(sub.[Group],'Miscellaneous')),uv.Team,uv.Measure)									
		  , Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'base','group',rtrim(isnull(sub.[Group],'Miscellaneous')),uv.Team,uv.Measure)
						
FROM         dbo.TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
GROUP BY uv.Team, rtrim(isnull(sub.[Group],'Miscellaneous')), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

UNION ALL

SELECT    rtrim(isnull(sub.Sub_Category,'Miscellaneous')) as  Team_Sub
		 ,rtrim(isnull(sub.AgencyName,'Miscellaneous')) as  Agency_Group
		 ,[Type] = 'agency' 
		 ,uv.Remuneration_Start
		 , uv.Remuneration_End
		 ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
                      
          ,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'target','agency',rtrim(isnull(sub.AgencyName,'Miscellaneous')),rtrim(isnull(sub.Sub_Category,'Miscellaneous')),uv.Measure)									
		  , Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'base','agency',rtrim(isnull(sub.AgencyName,'Miscellaneous')),rtrim(isnull(sub.Sub_Category,'Miscellaneous')),uv.Measure)					 
FROM         dbo.TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
GROUP BY rtrim(isnull(sub.Sub_Category,'Miscellaneous')), rtrim(isnull(sub.AgencyName,'Miscellaneous')), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

--Agency Police & Fire--
UNION ALL

SELECT    rtrim(isnull(sub.Sub_Category,'Miscellaneous')) as  Team_Sub
		 ,'Police & Fire' as  Agency_Group
		 ,[Type] = 'agency' 
		 ,uv.Remuneration_Start
		 , uv.Remuneration_End
		 ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
                      
          ,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'target','agency','Police & Fire',rtrim(isnull(sub.Sub_Category,'Miscellaneous')),uv.Measure)									
		  , Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'base','agency','Police & Fire', rtrim(isnull(sub.Sub_Category,'Miscellaneous')),uv.Measure)					 
FROM         dbo.TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
	  and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Police','Fire') 
GROUP BY rtrim(isnull(sub.Sub_Category,'Miscellaneous')), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure
--Agency Health & Other--
UNION ALL

SELECT    rtrim(isnull(sub.Sub_Category,'Miscellaneous')) as  Team_Sub
		 ,'Health & Other' as  Agency_Group
		 ,[Type] = 'agency' 
		 ,uv.Remuneration_Start
		 , uv.Remuneration_End
		 ,cast(year(uv.Remuneration_End) AS varchar) 
                      + 'M' + CASE WHEN MONTH(uv.Remuneration_End) <= 9 THEN '0' ELSE '' END + cast(month(uv.Remuneration_End) AS varchar) AS Remuneration
                      
          ,Measure AS Measure_months, SUM(uv.LT) AS LT, SUM(uv.WGT) AS WGT, SUM(uv.LT) / nullif(SUM(uv.WGT),0) AS AVGDURN
          , [Target] = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'target','agency','Health & Other',rtrim(isnull(sub.Sub_Category,'Miscellaneous')),uv.Measure)									
		  , Base = dbo.udf_dashboard_TMF_RTW_getTargetAndBase(uv.Remuneration_End,'base','agency','Health & Other',rtrim(isnull(sub.Sub_Category,'Miscellaneous')),uv.Measure)					 
FROM         dbo.TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
where DATEDIFF(MM, uv.Remuneration_Start, uv.Remuneration_End) =11 and uv.Remuneration_End between DATEADD(DAY, -1, DATEADD(M, -23 + DATEDIFF(M, 0, (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)), 0)) + '23:59' and (SELECT max(Remuneration_End) FROM  dbo.TMF_RTW)
	  and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Health','Other') 
GROUP BY rtrim(isnull(sub.Sub_Category,'Miscellaneous')), uv.Remuneration_Start, uv.Remuneration_End, uv.Measure

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_1\uv_TMF_RTW_Team_Sub_Rolling_Month_12.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_EML_AWC_Agency_Group_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_EML_AWC_Agency_Group_Summary')
	DROP VIEW [dbo].[uv_EML_AWC_Agency_Group_Summary]
GO
CREATE VIEW [dbo].[uv_EML_AWC_Agency_Group_Summary] 
AS
SELECT	top 1	EmployerSize_Group ='WCNSW'
				,[Type]='employer_size'
				,No_Of_Active_Weekly_Claims=                
                          (SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_EML_AWC_Whole_EML
                            WHERE      (UnitType = 'group')  AND (Type = 'Actual'))
                ,Projection =       
						 100*(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_EML_AWC_Whole_EML
                            WHERE      (UnitType = 'group')  AND (Type = 'Actual'))
						 /NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_EML_AWC_Whole_EML AS uv_EML_AWC_Whole_EML_1
                            WHERE      (UnitType = 'group') AND (Type = 'Projection')),0) 
FROM         dbo.EML_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.EML_AWC AS EML_AWC_1)))

UNION ALL

SELECT top 1000 EmployerSize_Group = RTRIM(ISNULL(Empl_Size, 'Miscellaneous')) 
				,[Type]='employer_size'
				,No_Of_Active_Weekly_Claims =
						(SELECT SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_EML_AWC_Whole_EML
                            WHERE      (UnitType = 'employer_size') AND (Unit = RTRIM(ISNULL(dbo.EML_AWC.Empl_Size, 'Miscellaneous'))) AND (Type = 'Actual'))
                ,Projection =
						100*(SELECT SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_EML_AWC_Whole_EML
                            WHERE      (UnitType = 'employer_size') AND (Unit = RTRIM(ISNULL(dbo.EML_AWC.Empl_Size, 'Miscellaneous'))) AND (Type = 'Actual'))
                        /NULLIF((SELECT SUM(No_of_Active_Weekly_Claims) AS Expr1
							FROM   dbo.uv_EML_AWC_Whole_EML AS uv_EML_AWC_Whole_EML_1
							WHERE      (UnitType = 'employer_size') AND (Unit = RTRIM(ISNULL(dbo.EML_AWC.Empl_Size, 'Miscellaneous'))) AND (Type = 'Projection')),0)
FROM         dbo.EML_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.EML_AWC AS EML_AWC_1)))
GROUP BY RTRIM(ISNULL(Empl_Size, 'Miscellaneous'))
ORDER BY RTRIM(ISNULL(Empl_Size, 'Miscellaneous'))


UNION ALL
SELECT top 1000 EmployerSize_Group = dbo.udf_EML_GetGroupByTeam(Team)
				,[Type]='group'
				,No_Of_Active_Weekly_Claims =
                          (SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_EML_AWC_Whole_EML
                            WHERE      (UnitType = 'group') AND (Unit = dbo.udf_EML_GetGroupByTeam(Team)) AND (Type = 'Actual'))
                ,Projection = 
						  100 * (SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_EML_AWC_Whole_EML
                            WHERE      (UnitType = 'group') AND (Unit = dbo.udf_EML_GetGroupByTeam(Team)) AND (Type = 'Actual'))
                          /NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_EML_AWC_Whole_EML AS uv_EML_AWC_Whole_EML_1
                            WHERE      (UnitType = 'group') AND (Unit = dbo.udf_EML_GetGroupByTeam(Team)) AND (Type = 'Projection')),0)
FROM         dbo.EML_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.EML_AWC AS EML_AWC_1)))
GROUP BY dbo.udf_EML_GetGroupByTeam(Team)
ORDER BY dbo.udf_EML_GetGroupByTeam(Team)

UNION ALL
SELECT top 1000 EmployerSize_Group = RTRIM([Account_Manager])
				,[Type]='account_manager'
				,No_Of_Active_Weekly_Claims =
                          (SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_EML_AWC_Whole_EML
                            WHERE      (UnitType = 'account_manager') AND (Unit = RTRIM(dbo.EML_AWC.[Account_Manager])) AND (Type = 'Actual'))
                ,Projection = 
						  100 * (SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_EML_AWC_Whole_EML
                            WHERE      (UnitType = 'account_manager') AND (Unit = RTRIM(dbo.EML_AWC.[Account_Manager])) AND (Type = 'Actual'))
                          /NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_EML_AWC_Whole_EML AS uv_EML_AWC_Whole_EML_1
                            WHERE      (UnitType = 'account_manager') AND (Unit = RTRIM(dbo.EML_AWC.[Account_Manager])) AND (Type = 'Projection')),0)
FROM         dbo.EML_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.EML_AWC AS EML_AWC_1)))
           and [Account_Manager] is not null
GROUP BY [Account_Manager]
ORDER BY [Account_Manager]

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_EML_AWC_Agency_Group_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_EML_AWC_Team_Sub_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_EML_AWC_Team_Sub_Summary')
	DROP VIEW [dbo].[uv_EML_AWC_Team_Sub_Summary]
GO
CREATE VIEW [dbo].[uv_EML_AWC_Team_Sub_Summary] 
AS

SELECT  top 1000000   
		   [Type] ='group'
		   ,EmployerSize_Group = dbo.udf_EML_GetGroupByTeam(Team)
		   ,Team_Sub = RTRIM(ISNULL(Team, 'Miscellaneous'))
		   ,No_Of_Active_Weekly_Claims =
				(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                    FROM          dbo.uv_EML_AWC_Whole_EML
                    WHERE      (UnitType = 'team') AND (Unit = RTRIM(ISNULL(dbo.EML_AWC.Team, 'Miscellaneous'))) AND (Type = 'Actual'))
           ,Projection =
				100*(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                    FROM          dbo.uv_EML_AWC_Whole_EML
                    WHERE      (UnitType = 'team') AND (Unit = RTRIM(ISNULL(dbo.EML_AWC.Team, 'Miscellaneous'))) AND (Type = 'Actual'))
				/NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_EML_AWC_Whole_EML AS uv_EML_AWC_Whole_EML_1
                            WHERE      (UnitType = 'team') AND (Unit = RTRIM(ISNULL(dbo.EML_AWC.Team, 'Miscellaneous'))) AND (Type = 'Projection')),0)
FROM         dbo.EML_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.EML_AWC AS EML_AWC_1)))
GROUP BY dbo.udf_EML_GetGroupByTeam(Team), RTRIM(ISNULL(Team, 'Miscellaneous'))
ORDER BY RTRIM(ISNULL(Team, 'Miscellaneous'))

union all

SELECT  top 1000000   
		   [Type] ='account_manager'
		   ,EmployerSize_Group = RTRIM([Account_Manager])
		   ,Team_Sub = RTRIM(ISNULL(EMPL_SIZE, 'Miscellaneous'))
		   ,No_Of_Active_Weekly_Claims =
				(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                    FROM          dbo.uv_EML_AWC_Whole_EML
                    WHERE      (UnitType = 'am_empl_size') AND (Unit = RTRIM(ISNULL(dbo.EML_AWC.Empl_Size, 'Miscellaneous'))) AND (Type = 'Actual'))
           ,Projection =
				100*(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                    FROM          dbo.uv_EML_AWC_Whole_EML
                    WHERE      (UnitType = 'am_empl_size') AND (Unit = RTRIM(ISNULL(dbo.EML_AWC.Empl_Size, 'Miscellaneous'))) AND (Type = 'Actual'))
				/NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_EML_AWC_Whole_EML AS uv_EML_AWC_Whole_EML_1
                            WHERE      (UnitType = 'am_empl_size') AND (Unit = RTRIM(ISNULL(dbo.EML_AWC.Empl_Size, 'Miscellaneous'))) AND (Type = 'Projection')),0)
FROM         dbo.EML_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.EML_AWC AS EML_AWC_1)))
           and RTRIM([Account_Manager]) is not null
GROUP BY RTRIM([Account_Manager]), RTRIM(ISNULL(Empl_Size, 'Miscellaneous'))
ORDER BY RTRIM(ISNULL(Empl_Size, 'Miscellaneous'))

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_EML_AWC_Team_Sub_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_EML_AWC_Weekly_Open.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_EML_AWC_Weekly_Open')
	DROP VIEW [dbo].[uv_EML_AWC_Weekly_Open]
GO
CREATE VIEW [dbo].[uv_EML_AWC_Weekly_Open] 
AS
	select * from [dbo].[uv_EML_AWC_Weekly_Open_1_2] 
	union select * from [dbo].[uv_EML_AWC_Weekly_Open_3_5]
	union select * from [dbo].[uv_EML_AWC_Weekly_Open_5_Plus]
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_EML_AWC_Weekly_Open.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_EML_CPR_Agency_Group_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_EML_CPR_Agency_Group_Summary')
	DROP VIEW [dbo].[uv_EML_CPR_Agency_Group_Summary]
GO
CREATE VIEW [dbo].[uv_EML_CPR_Agency_Group_Summary]
AS
SELECT	top 1	EmployerSize_Group = 'WCNSW'
				,[Type] = 'employer_size'
                ,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('EML', 'employer_size', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('EML', 'employer_size', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y')
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('EML', 'employer_size', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
FROM	EML_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from EML_Portfolio)

UNION ALL

SELECT top 1000 EmployerSize_Group = RTRIM(Empl_Size)
				,[Type] = 'employer_size'
				,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('EML', 'employer_size', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value = Empl_Size)
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('EML', 'employer_size', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y'
									and Value = Empl_Size)
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('EML', 'employer_size', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value = Empl_Size)
FROM	EML_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from EML_Portfolio)
		and Claim_Closed_Flag <> 'Y'
GROUP BY Empl_Size
ORDER BY Empl_Size

UNION ALL

SELECT top 1 EmployerSize_Group = 'WCNSW'
				,[Type] = 'group'
				,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('EML', 'group', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('EML', 'group', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y')
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('EML', 'group', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
FROM	EML_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from EML_Portfolio)

UNION ALL

SELECT top 1000 EmployerSize_Group = dbo.udf_EML_GetGroupByTeam(Team)
				,[Type] = 'group'
				,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('EML', 'group', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value = dbo.udf_EML_GetGroupByTeam(Team))
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('EML', 'group', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y'
									and Value = dbo.udf_EML_GetGroupByTeam(Team))
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('EML', 'group', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value = dbo.udf_EML_GetGroupByTeam(Team))
FROM	EML_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from EML_Portfolio)
		and Claim_Closed_Flag <> 'Y'
GROUP BY dbo.udf_EML_GetGroupByTeam(Team)
ORDER BY dbo.udf_EML_GetGroupByTeam(Team)

UNION ALL

SELECT top 1 EmployerSize_Group = 'WCNSW'
				,[Type] = 'account_manager'
				,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('EML', 'account_manager', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('EML', 'account_manager', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y')
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('EML', 'account_manager', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
FROM	EML_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from EML_Portfolio)
		and [Account_Manager] is not null
		
UNION ALL

SELECT top 1000 EmployerSize_Group = RTRIM([Account_Manager])
				,[Type] = 'account_manager'
				,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('EML', 'account_manager', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value = [Account_Manager])
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('EML', 'account_manager', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y'
									and Value = [Account_Manager])
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('EML', 'account_manager', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value = [Account_Manager])
FROM	EML_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from EML_Portfolio)
		and [Account_Manager] is not null
		and Claim_Closed_Flag <> 'Y'
GROUP BY [Account_Manager]
ORDER BY [Account_Manager]
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_EML_CPR_Agency_Group_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_EML_CPR_ClaimOfficer_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_EML_CPR_ClaimOfficer_Summary')
	DROP VIEW [dbo].[uv_EML_CPR_ClaimOfficer_Summary]
GO
CREATE VIEW [dbo].[uv_EML_CPR_ClaimOfficer_Summary]
AS
SELECT		top 1000000
			[Type] = 'group'
			,EmployerSize_Group = dbo.udf_EML_GetGroupByTeam(Team)
			,Team_Sub = RTRIM(Team)
			,ClaimOfficer = RTRIM(Claims_Officer_Name)
            ,No_Of_New_Claims = 0
       --         (SELECT     COUNT(distinct Claim_No)
       --             FROM	[dbo].[udf_CPR_Overall]('EML', 'group', 0)
       --             WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and Value = dbo.udf_EML_GetGroupByTeam(Team)
							--and SubValue = Team
							--and SubValue2 = Claims_Officer_Name)
            ,No_Of_Open_Claims =
                (SELECT     COUNT(distinct Claim_No)
                    FROM    [dbo].[udf_CPR_Overall]('EML', 'group', 0)
                    WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
							and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
							and Claim_Closed_Flag <> 'Y'
							and Value = dbo.udf_EML_GetGroupByTeam(Team)
							and SubValue = Team
							and SubValue2 = Claims_Officer_Name)
            ,No_Of_Claim_Closures = 0
       --         (SELECT     COUNT(distinct Claim_No)
       --             FROM    [dbo].[udf_CPR_Overall]('EML', 'group', 0)
       --             WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and Value = dbo.udf_EML_GetGroupByTeam(Team)
							--and SubValue = Team
							--and SubValue2 = Claims_Officer_Name)
FROM	EML_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from EML_Portfolio)
		and Claim_Closed_Flag <> 'Y'
GROUP BY dbo.udf_EML_GetGroupByTeam(Team), Team, Claims_Officer_Name
ORDER BY Claims_Officer_Name
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_EML_CPR_ClaimOfficer_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_EML_CPR_Team_Sub_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_EML_CPR_Team_Sub_Summary')
	DROP VIEW [dbo].[uv_EML_CPR_Team_Sub_Summary]
GO
CREATE VIEW [dbo].[uv_EML_CPR_Team_Sub_Summary] 
AS
SELECT		top 1000000
			[Type] = 'group'
			,EmployerSize_Group = dbo.udf_EML_GetGroupByTeam(Team)
			,Team_Sub = rtrim(Team)
            ,No_Of_New_Claims = 0
       --         (SELECT     COUNT(distinct Claim_No)
       --             FROM	[dbo].[udf_CPR_Overall]('EML', 'group', 0)
       --             WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and Value = dbo.udf_EML_GetGroupByTeam(Team)
							--and SubValue = Team)
            ,No_Of_Open_Claims =
                (SELECT     COUNT(distinct Claim_No)
                    FROM    [dbo].[udf_CPR_Overall]('EML', 'group', 0)
                    WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
							and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
							and Claim_Closed_Flag <> 'Y'
							and Value = dbo.udf_EML_GetGroupByTeam(Team)
							and SubValue = Team)
            ,No_Of_Claim_Closures = 0
       --         (SELECT     COUNT(distinct Claim_No)
       --             FROM    [dbo].[udf_CPR_Overall]('EML', 'group', 0)
       --             WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and Value = dbo.udf_EML_GetGroupByTeam(Team)
							--and SubValue = Team)
FROM	EML_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from EML_Portfolio)
		and Claim_Closed_Flag <> 'Y'
GROUP BY dbo.udf_EML_GetGroupByTeam(Team), Team
ORDER BY Team

UNION ALL

SELECT		top 1000000
			[Type] = 'account_manager'
			,EmployerSize_Group = RTRIM([Account_Manager])
			,Team_Sub = rtrim(EMPL_SIZE)
            ,No_Of_New_Claims = 0
       --         (SELECT     COUNT(distinct Claim_No)
       --             FROM	[dbo].[udf_CPR_Overall]('EML', 'account_manager', 0)
       --             WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and Value = [Account_Manager]
							--and SubValue = EMPL_SIZE)
            ,No_Of_Open_Claims =
                (SELECT     COUNT(distinct Claim_No)
                    FROM    [dbo].[udf_CPR_Overall]('EML', 'account_manager', 0)
                    WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
							and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
							and Claim_Closed_Flag <> 'Y'
							and Value = [Account_Manager]
							and SubValue = EMPL_SIZE)
            ,No_Of_Claim_Closures = 0
       --         (SELECT     COUNT(distinct Claim_No)
       --             FROM    [dbo].[udf_CPR_Overall]('EML', 'account_manager', 0)
       --             WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and Value = [Account_Manager]
							--and SubValue = EMPL_SIZE)
FROM	EML_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from EML_Portfolio)
        and RTRIM([Account_Manager]) is not null
        and Claim_Closed_Flag <> 'Y'
GROUP BY [Account_Manager], Empl_Size
ORDER BY Empl_Size
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_EML_CPR_Team_Sub_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_HEM_AWC_Agency_Group_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_HEM_AWC_Agency_Group_Summary')
	DROP VIEW [dbo].[uv_HEM_AWC_Agency_Group_Summary]
GO
CREATE VIEW [dbo].[uv_HEM_AWC_Agency_Group_Summary] 
AS
SELECT	top 1	EmployerSize_Group ='Hospitality'
				,[Type]='portfolio'
				,No_Of_Active_Weekly_Claims=                
                          (SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM
                            WHERE      (UnitType = 'group')  AND (Type = 'Actual'))
                ,Projection =       
						 100*(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM
                            WHERE      (UnitType = 'group')  AND (Type = 'Actual'))
						 /NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM AS uv_HEM_AWC_Whole_HEM_1
                            WHERE      (UnitType = 'group') AND (Type = 'Projection')),0) 
FROM         dbo.HEM_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.HEM_AWC AS HEM_AWC_1)))

UNION ALL

SELECT top 1000 EmployerSize_Group = RTRIM(ISNULL(Portfolio, 'Miscellaneous'))
				,[Type]='portfolio'
				,No_Of_Active_Weekly_Claims =
						(SELECT SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM
                            WHERE      (UnitType = 'portfolio') AND (Unit = RTRIM(ISNULL(dbo.HEM_AWC.Portfolio, 'Miscellaneous'))) AND (Type = 'Actual'))
                ,Projection =
						100*(SELECT SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM
                            WHERE      (UnitType = 'portfolio') AND (Unit = RTRIM(ISNULL(dbo.HEM_AWC.Portfolio, 'Miscellaneous'))) AND (Type = 'Actual'))
                        /NULLIF((SELECT SUM(No_of_Active_Weekly_Claims) AS Expr1
							FROM   dbo.uv_HEM_AWC_Whole_HEM AS uv_HEM_AWC_Whole_HEM_1
							WHERE      (UnitType = 'portfolio') AND (Unit = RTRIM(ISNULL(dbo.HEM_AWC.Portfolio, 'Miscellaneous'))) AND (Type = 'Projection')),0)
FROM         dbo.HEM_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.HEM_AWC AS HEM_AWC_1)))
GROUP BY RTRIM(ISNULL(Portfolio, 'Miscellaneous')) 
ORDER BY RTRIM(ISNULL(Portfolio, 'Miscellaneous'))

--Portfolio Hotel summary--
UNION ALL

SELECT top 1 EmployerSize_Group = 'Hotel'
				,[Type]='portfolio'
				,No_Of_Active_Weekly_Claims =
						(SELECT SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM
                            WHERE      (UnitType = 'portfolio') AND (Unit in ('Accommodation','Pubs, Taverns and Bars')) AND (Type = 'Actual'))
                ,Projection =
						100*(SELECT SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM
                            WHERE      (UnitType = 'portfolio') AND (Unit in ('Accommodation','Pubs, Taverns and Bars')) AND (Type = 'Actual'))
                        /NULLIF((SELECT SUM(No_of_Active_Weekly_Claims) AS Expr1
							FROM   dbo.uv_HEM_AWC_Whole_HEM AS uv_HEM_AWC_Whole_HEM_1
							WHERE      (UnitType = 'portfolio') AND (Unit in ('Accommodation','Pubs, Taverns and Bars')) AND (Type = 'Projection')),0)		
FROM         dbo.HEM_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.HEM_AWC AS HEM_AWC_1)))     

UNION ALL
SELECT top 1000 EmployerSize_Group = dbo.udf_HEM_GetGroupByTeam(Team)
				,[Type]='group'
				,No_Of_Active_Weekly_Claims =
                          (SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM
                            WHERE      (UnitType = 'group') AND (Unit = dbo.udf_HEM_GetGroupByTeam(Team)) AND (Type = 'Actual'))
                ,Projection = 
						  100 * (SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM
                            WHERE      (UnitType = 'group') AND (Unit = dbo.udf_HEM_GetGroupByTeam(Team)) AND (Type = 'Actual'))
                          /NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM AS uv_HEM_AWC_Whole_HEM_1
                            WHERE      (UnitType = 'group') AND (Unit = dbo.udf_HEM_GetGroupByTeam(Team)) AND (Type = 'Projection')),0)
FROM         dbo.HEM_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.HEM_AWC AS HEM_AWC_1)))
GROUP BY dbo.udf_HEM_GetGroupByTeam(Team)
ORDER BY dbo.udf_HEM_GetGroupByTeam(Team)

UNION ALL
SELECT top 1000 EmployerSize_Group = RTRIM([Account_Manager])
				,[Type]='account_manager'
				,No_Of_Active_Weekly_Claims =
                          (SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM
                            WHERE      (UnitType = 'account_manager') AND (Unit = RTRIM(dbo.HEM_AWC.[Account_Manager])) AND (Type = 'Actual'))
                ,Projection = 
						  100 * (SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM
                            WHERE      (UnitType = 'account_manager') AND (Unit = RTRIM(dbo.HEM_AWC.[Account_Manager])) AND (Type = 'Actual'))
                          /NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM AS uv_HEM_AWC_Whole_HEM_1
                            WHERE      (UnitType = 'account_manager') AND (Unit = RTRIM(dbo.HEM_AWC.[Account_Manager])) AND (Type = 'Projection')),0)
FROM         dbo.HEM_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.HEM_AWC AS HEM_AWC_1)))
           and [Account_Manager] is not null
GROUP BY [Account_Manager]
ORDER BY [Account_Manager]

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_HEM_AWC_Agency_Group_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_HEM_AWC_Team_Sub_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_HEM_AWC_Team_Sub_Summary')
	DROP VIEW [dbo].[uv_HEM_AWC_Team_Sub_Summary]
GO
CREATE VIEW [dbo].[uv_HEM_AWC_Team_Sub_Summary] 
AS

SELECT  top 1000000   
		   [Type] ='group'
		   ,EmployerSize_Group = dbo.udf_HEM_GetGroupByTeam(Team)
		   ,Team_Sub = RTRIM(ISNULL(Team, 'Miscellaneous'))
		   ,No_Of_Active_Weekly_Claims =
				(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                    FROM          dbo.uv_HEM_AWC_Whole_HEM
                    WHERE      (UnitType = 'team') AND (Unit = RTRIM(ISNULL(dbo.HEM_AWC.Team, 'Miscellaneous'))) AND (Type = 'Actual'))
           ,Projection =
				100*(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                    FROM          dbo.uv_HEM_AWC_Whole_HEM
                    WHERE      (UnitType = 'team') AND (Unit = RTRIM(ISNULL(dbo.HEM_AWC.Team, 'Miscellaneous'))) AND (Type = 'Actual'))
				/NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM AS uv_HEM_AWC_Whole_HEM_1
                            WHERE      (UnitType = 'team') AND (Unit = RTRIM(ISNULL(dbo.HEM_AWC.Team, 'Miscellaneous'))) AND (Type = 'Projection')),0)
FROM         dbo.HEM_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.HEM_AWC AS HEM_AWC_1)))
GROUP BY dbo.udf_HEM_GetGroupByTeam(Team), RTRIM(ISNULL(Team, 'Miscellaneous'))
ORDER BY RTRIM(ISNULL(Team, 'Miscellaneous'))

union all

SELECT  top 1000000   
		   [Type] ='account_manager'
		   ,EmployerSize_Group = RTRIM([Account_Manager])
		   ,Team_Sub = RTRIM(ISNULL(EMPL_SIZE, 'Miscellaneous'))
		   ,No_Of_Active_Weekly_Claims = 
				(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                    FROM          dbo.uv_HEM_AWC_Whole_HEM
                    WHERE      (UnitType = 'am_empl_size') AND (Unit = RTRIM(ISNULL(dbo.HEM_AWC.Empl_Size, 'Miscellaneous'))) AND (Type = 'Actual'))
           ,Projection =
				100*(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                    FROM          dbo.uv_HEM_AWC_Whole_HEM
                    WHERE      (UnitType = 'am_empl_size') AND (Unit = RTRIM(ISNULL(dbo.HEM_AWC.Empl_Size, 'Miscellaneous'))) AND (Type = 'Actual'))
				/NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM AS uv_HEM_AWC_Whole_HEM_1
                            WHERE      (UnitType = 'am_empl_size') AND (Unit = RTRIM(ISNULL(dbo.HEM_AWC.Empl_Size, 'Miscellaneous'))) AND (Type = 'Projection')),0)
FROM         dbo.HEM_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.HEM_AWC AS HEM_AWC_1)))
           and RTRIM([Account_Manager]) is not null
GROUP BY RTRIM([Account_Manager]), RTRIM(ISNULL(EMPL_SIZE, 'Miscellaneous'))
ORDER BY RTRIM(ISNULL(EMPL_SIZE, 'Miscellaneous'))

union all

SELECT  top 1000000   
		   [Type] ='portfolio'
		   ,EmployerSize_Group = RTRIM([Portfolio])
		   ,Team_Sub = RTRIM(ISNULL(EMPL_SIZE, 'Miscellaneous'))
		   ,No_Of_Active_Weekly_Claims =
				(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                    FROM          dbo.uv_HEM_AWC_Whole_HEM
                    WHERE      (UnitType = 'portfolio_empl_size') AND (Unit = RTRIM(ISNULL(dbo.HEM_AWC.Empl_Size, 'Miscellaneous'))) AND (Type = 'Actual'))
           ,Projection =
				100*(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                    FROM          dbo.uv_HEM_AWC_Whole_HEM
                    WHERE      (UnitType = 'portfolio_empl_size') AND (Unit = RTRIM(ISNULL(dbo.HEM_AWC.Empl_Size, 'Miscellaneous'))) AND (Type = 'Actual'))
				/NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM AS uv_HEM_AWC_Whole_HEM_1
                            WHERE      (UnitType = 'portfolio_empl_size') AND (Unit = RTRIM(ISNULL(dbo.HEM_AWC.Empl_Size, 'Miscellaneous'))) AND (Type = 'Projection')),0)
FROM         dbo.HEM_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.HEM_AWC AS HEM_AWC_1)))
           and RTRIM([portfolio]) is not null
GROUP BY RTRIM([portfolio]), RTRIM(ISNULL(EMPL_SIZE, 'Miscellaneous'))
ORDER BY RTRIM(ISNULL(EMPL_SIZE, 'Miscellaneous'))

--Portfolio Hotel Summay--
union all

SELECT  top 1000000   
		   [Type] ='portfolio'
		   ,EmployerSize_Group = 'Hotel'
		   ,Team_Sub = RTRIM(ISNULL(EMPL_SIZE, 'Miscellaneous'))
		   ,No_Of_Active_Weekly_Claims =
				(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                    FROM          dbo.uv_HEM_AWC_Whole_HEM
                    WHERE      (UnitType = 'portfolio_empl_size') AND (Unit = RTRIM(ISNULL(dbo.HEM_AWC.Empl_Size, 'Miscellaneous'))) AND (Type = 'Actual'))
           ,Projection =
				100*(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                    FROM          dbo.uv_HEM_AWC_Whole_HEM
                    WHERE      (UnitType = 'portfolio_empl_size') AND (Unit = RTRIM(ISNULL(dbo.HEM_AWC.Empl_Size, 'Miscellaneous'))) AND (Type = 'Actual'))
				/NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_HEM_AWC_Whole_HEM AS uv_HEM_AWC_Whole_HEM_1
                            WHERE      (UnitType = 'portfolio_empl_size') AND (Unit = RTRIM(ISNULL(dbo.HEM_AWC.Empl_Size, 'Miscellaneous'))) AND (Type = 'Projection')),0)
FROM         dbo.HEM_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.HEM_AWC AS HEM_AWC_1)))
           and RTRIM([portfolio]) is not null
           and RTRIM([Portfolio]) in ('Accommodation','Pubs, Taverns and Bars')
GROUP BY RTRIM([portfolio]), RTRIM(ISNULL(EMPL_SIZE, 'Miscellaneous'))
ORDER BY RTRIM(ISNULL(EMPL_SIZE, 'Miscellaneous'))

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_HEM_AWC_Team_Sub_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_HEM_AWC_Weekly_Open.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_HEM_AWC_Weekly_Open')
	DROP VIEW [dbo].[uv_HEM_AWC_Weekly_Open]
GO
CREATE VIEW [dbo].[uv_HEM_AWC_Weekly_Open] 
AS
	select * from [dbo].[uv_HEM_AWC_Weekly_Open_1_2] 
	union select * from [dbo].[uv_HEM_AWC_Weekly_Open_3_5]
	union select * from [dbo].[uv_HEM_AWC_Weekly_Open_5_Plus]
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_HEM_AWC_Weekly_Open.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_HEM_CPR_Agency_Group_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_HEM_CPR_Agency_Group_Summary')
	DROP VIEW [dbo].[uv_HEM_CPR_Agency_Group_Summary]
GO
CREATE VIEW [dbo].[uv_HEM_CPR_Agency_Group_Summary]
AS
SELECT	top 1	EmployerSize_Group = 'Hospitality'
				,[Type] = 'portfolio'
                ,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('HEM', 'portfolio', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('HEM', 'portfolio', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y')
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('HEM', 'portfolio', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
FROM	HEM_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from HEM_Portfolio)

UNION ALL

SELECT top 1000 EmployerSize_Group = RTRIM(Portfolio)
				,[Type] = 'portfolio'
                ,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('HEM', 'portfolio', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value = Portfolio)
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('HEM', 'portfolio', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y'
									and Value = Portfolio)
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('HEM', 'portfolio', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value = Portfolio)
FROM	HEM_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from HEM_Portfolio)
		and Claim_Closed_Flag <> 'Y'
GROUP BY Portfolio 
ORDER BY Portfolio

--Portfolio Hotel summary--
UNION ALL

SELECT top 1 EmployerSize_Group = 'Hotel'
				,[Type] = 'portfolio'
                ,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('HEM', 'portfolio', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value in ('Accommodation','Pubs, Taverns and Bars'))
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('HEM', 'portfolio', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y'
									and Value in ('Accommodation','Pubs, Taverns and Bars'))
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('HEM', 'portfolio', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value in ('Accommodation','Pubs, Taverns and Bars'))
FROM	HEM_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from HEM_Portfolio)

UNION ALL

SELECT top 1 EmployerSize_Group = 'Hospitality'
				,[Type] = 'group'
				,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('HEM', 'group', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('HEM', 'group', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y')
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('HEM', 'group', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
FROM	HEM_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from HEM_Portfolio)

UNION ALL

SELECT top 1000 EmployerSize_Group = dbo.udf_HEM_GetGroupByTeam(Team)
				,[Type] = 'group'
				,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('HEM', 'group', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value = dbo.udf_HEM_GetGroupByTeam(Team))
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('HEM', 'group', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y'
									and Value = dbo.udf_HEM_GetGroupByTeam(Team))
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('HEM', 'group', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value = dbo.udf_HEM_GetGroupByTeam(Team))
FROM	HEM_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from HEM_Portfolio)
		and Claim_Closed_Flag <> 'Y'
GROUP BY dbo.udf_HEM_GetGroupByTeam(Team)
ORDER BY dbo.udf_HEM_GetGroupByTeam(Team)

UNION ALL

SELECT top 1 EmployerSize_Group = 'Hospitality'
				,[Type] = 'account_manager'
				,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('HEM', 'account_manager', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('HEM', 'account_manager', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y')
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('HEM', 'account_manager', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
FROM	HEM_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from HEM_Portfolio)
        and [Account_Manager] is not null

UNION ALL

SELECT top 1000 EmployerSize_Group = RTRIM([Account_Manager])
				,[Type] = 'account_manager'
				,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('HEM', 'account_manager', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value = [Account_Manager])
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('HEM', 'account_manager', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y'
									and Value = [Account_Manager])
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('HEM', 'account_manager', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value = [Account_Manager])
FROM	HEM_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from HEM_Portfolio)
        and [Account_Manager] is not null
        and Claim_Closed_Flag <> 'Y'
GROUP BY [Account_Manager]
ORDER BY [Account_Manager]
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_HEM_CPR_Agency_Group_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_HEM_CPR_ClaimOfficer_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_HEM_CPR_ClaimOfficer_Summary')
	DROP VIEW [dbo].[uv_HEM_CPR_ClaimOfficer_Summary]
GO
CREATE VIEW [dbo].[uv_HEM_CPR_ClaimOfficer_Summary]
AS
SELECT		top 1000000
			[Type] = 'group'
			,EmployerSize_Group = dbo.udf_HEM_GetGroupByTeam(Team)
			,Team_Sub = RTRIM(Team)
			,ClaimOfficer = RTRIM(Claims_Officer_Name)
            ,No_Of_New_Claims = 0
       --         (SELECT     COUNT(distinct Claim_No)
       --             FROM	[dbo].[udf_CPR_Overall]('HEM', 'group', 0)
       --             WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and Value = dbo.udf_HEM_GetGroupByTeam(Team)
							--and SubValue = Team
							--and SubValue2 = Claims_Officer_Name)
            ,No_Of_Open_Claims =
                (SELECT     COUNT(distinct Claim_No)
                    FROM    [dbo].[udf_CPR_Overall]('HEM', 'group', 0)
                    WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
							and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
							and Claim_Closed_Flag <> 'Y'
							and Value = dbo.udf_HEM_GetGroupByTeam(Team)
							and SubValue = Team
							and SubValue2 = Claims_Officer_Name)
            ,No_Of_Claim_Closures = 0
       --         (SELECT     COUNT(distinct Claim_No)
       --             FROM    [dbo].[udf_CPR_Overall]('HEM', 'group', 0)
       --             WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and Value = dbo.udf_HEM_GetGroupByTeam(Team)
							--and SubValue = Team
							--and SubValue2 = Claims_Officer_Name)
FROM	HEM_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from HEM_Portfolio)
		and Claim_Closed_Flag <> 'Y'
GROUP BY dbo.udf_HEM_GetGroupByTeam(Team), Team, Claims_Officer_Name
ORDER BY Claims_Officer_Name
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_HEM_CPR_ClaimOfficer_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_HEM_CPR_Team_Sub_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_HEM_CPR_Team_Sub_Summary')
	DROP VIEW [dbo].[uv_HEM_CPR_Team_Sub_Summary]
GO
CREATE VIEW [dbo].[uv_HEM_CPR_Team_Sub_Summary] 
AS
SELECT		top 1000000
			[Type] = 'group'
			,EmployerSize_Group = dbo.udf_HEM_GetGroupByTeam(Team)
			,Team_Sub = rtrim(Team)
            ,No_Of_New_Claims = 0
        --            (SELECT     COUNT(distinct Claim_No)
        --                FROM	[dbo].[udf_CPR_Overall]('HEM', 'group', 0)
        --                WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
								--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
								--and Value = dbo.udf_HEM_GetGroupByTeam(Team)
								--and SubValue = Team)
            ,No_Of_Open_Claims =
                    (SELECT     COUNT(distinct Claim_No)
                        FROM    [dbo].[udf_CPR_Overall]('HEM', 'group', 0)
                        WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
								and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
								and Claim_Closed_Flag <> 'Y'
								and Value = dbo.udf_HEM_GetGroupByTeam(Team)
								and SubValue = Team)
            ,No_Of_Claim_Closures = 0
        --            (SELECT     COUNT(distinct Claim_No)
        --                FROM    [dbo].[udf_CPR_Overall]('HEM', 'group', 0)
        --                WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
								--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
								--and Value = dbo.udf_HEM_GetGroupByTeam(Team)
								--and SubValue = Team)
FROM	HEM_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from HEM_Portfolio)
		and Claim_Closed_Flag <> 'Y'
GROUP BY dbo.udf_HEM_GetGroupByTeam(Team), Team
ORDER BY Team

UNION ALL

SELECT		top 1000000
			[Type] = 'account_manager'
			,EmployerSize_Group = RTRIM([Account_Manager])
			,Team_Sub = rtrim(EMPL_SIZE)
			,No_Of_New_Claims = 0
        --            (SELECT     COUNT(distinct Claim_No)
        --                FROM	[dbo].[udf_CPR_Overall]('HEM', 'account_manager', 0)
        --                WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
								--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
								--and Value = [Account_Manager]
								--and SubValue = EMPL_SIZE)
            ,No_Of_Open_Claims =
                    (SELECT     COUNT(distinct Claim_No)
                        FROM    [dbo].[udf_CPR_Overall]('HEM', 'account_manager', 0)
                        WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
								and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
								and Claim_Closed_Flag <> 'Y'
								and Value = [Account_Manager]
								and SubValue = EMPL_SIZE)
            ,No_Of_Claim_Closures = 0
        --            (SELECT     COUNT(distinct Claim_No)
        --                FROM    [dbo].[udf_CPR_Overall]('HEM', 'account_manager', 0)
        --                WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
								--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
								--and Value = [Account_Manager]
								--and SubValue = EMPL_SIZE)
FROM	HEM_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from HEM_Portfolio)
        and RTRIM([Account_Manager]) is not null
        and Claim_Closed_Flag <> 'Y'
GROUP BY [Account_Manager], Empl_Size
ORDER BY Empl_Size

UNION ALL

SELECT		top 1000000
			[Type] = 'portfolio'
			,EmployerSize_Group = RTRIM([Portfolio])
			,Team_Sub = rtrim(EMPL_SIZE)
			,No_Of_New_Claims = 0
        --            (SELECT     COUNT(distinct Claim_No)
        --                FROM	[dbo].[udf_CPR_Overall]('HEM', 'portfolio', 0)
        --                WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
								--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
								--and Value = [Portfolio]
								--and SubValue = EMPL_SIZE)
            ,No_Of_Open_Claims =
                    (SELECT     COUNT(distinct Claim_No)
                        FROM    [dbo].[udf_CPR_Overall]('HEM', 'portfolio', 0)
                        WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
								and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
								and Claim_Closed_Flag <> 'Y'
								and Value = [Portfolio]
								and SubValue = EMPL_SIZE)
            ,No_Of_Claim_Closures = 0
        --            (SELECT     COUNT(distinct Claim_No)
        --                FROM    [dbo].[udf_CPR_Overall]('HEM', 'portfolio', 0)
        --                WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
								--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
								--and Value = [Portfolio]
								--and SubValue = EMPL_SIZE)
FROM	HEM_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from HEM_Portfolio)
        and RTRIM([portfolio]) is not null
        and Claim_Closed_Flag <> 'Y'
GROUP BY [portfolio], Empl_Size
ORDER BY Empl_Size

--Uncomment this section to active the combine grouping logic--
----Portfolio Hotel Summay--
--UNION ALL

--SELECT		top 1000000   
--			[Type] = 'portfolio'
--			,EmployerSize_Group = 'Hotel'
--			,Team_Sub = rtrim(EMPL_SIZE)
--			,No_Of_New_Claims =
--                    (SELECT     COUNT(distinct Claim_No)
--                        FROM	[dbo].[udf_CPR_Overall]('HEM', 'portfolio', 0)
--                        WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
--								and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
--								and Value in ('Accommodation','Pubs, Taverns and Bars')
--								and SubValue = EMPL_SIZE)
--            ,No_Of_Open_Claims =
--                    (SELECT     COUNT(distinct Claim_No)
--                        FROM    [dbo].[udf_CPR_Overall]('HEM', 'portfolio', 0)
--                        WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
--								and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
--								and Claim_Closed_Flag <> 'Y'
--								and Value in ('Accommodation','Pubs, Taverns and Bars')
--								and SubValue = EMPL_SIZE)
--            ,No_Of_Claim_Closures =
--                    (SELECT     COUNT(distinct Claim_No)
--                        FROM    [dbo].[udf_CPR_Overall]('HEM', 'portfolio', 0)
--                        WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
--								and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
--								and Value in ('Accommodation','Pubs, Taverns and Bars')
--								and SubValue = EMPL_SIZE)
--FROM	HEM_Portfolio
--WHERE	Reporting_Date = (select MAX(Reporting_Date) from HEM_Portfolio)
--        and RTRIM([portfolio]) is not null
--        and RTRIM([Portfolio]) in ('Accommodation','Pubs, Taverns and Bars')
--GROUP BY [portfolio], Empl_Size
--ORDER BY Empl_Size
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_HEM_CPR_Team_Sub_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_TMF_AWC_Agency_Group_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_TMF_AWC_Agency_Group_Summary')
	DROP VIEW [dbo].[uv_TMF_AWC_Agency_Group_Summary]
GO
CREATE VIEW [dbo].[uv_TMF_AWC_Agency_Group_Summary] 
AS
SELECT   top 1  Agency_Group= 'TMF'
				,[Type]='agency'
                ,No_Of_Active_Weekly_Claims =
                        (SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF
                            WHERE      (UnitType = 'group')  AND (Type = 'Actual'))
                ,Projection =
						 100*(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF
                            WHERE      (UnitType = 'group')  AND (Type = 'Actual')) 
						/NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF AS uv_TMF_AWC_Whole_TMF_1
                            WHERE      (UnitType = 'group') AND (Type = 'Projection')),0)                       
FROM         dbo.TMF_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.TMF_AWC AS TMF_AWC_1)))
UNION ALL

SELECT  top 1000 Agency_Group = RTRIM(ISNULL(AgencyName, 'Miscellaneous'))
				,[Type]='agency'
                ,No_Of_Active_Weekly_Claims =				
					      (SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF
                            WHERE      (UnitType = 'agency') AND (Unit = RTRIM(ISNULL(AgencyName, 'Miscellaneous'))) AND (Type = 'Actual'))
                ,Projection = 
						100*(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF
                            WHERE      (UnitType = 'agency') AND (Unit = RTRIM(ISNULL(AgencyName, 'Miscellaneous'))) AND (Type = 'Actual'))
						/NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF AS uv_TMF_AWC_Whole_TMF_1
                            WHERE      (UnitType = 'agency') AND (Unit = RTRIM(ISNULL(AgencyName, 'Miscellaneous'))) AND (Type = 'Projection')),0)
                        
FROM         dbo.TMF_AWC awc left join TMF_Agencies_Sub_Category sub on awc.POLICY_NO = sub.POLICY_NO
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.TMF_AWC AS TMF_AWC_1)))
GROUP BY RTRIM(ISNULL(AgencyName, 'Miscellaneous'))
ORDER BY RTRIM(ISNULL(AgencyName, 'Miscellaneous'))

UNION ALL

--Agency Police & Fire--
SELECT  top 1 Agency_Group = 'POLICE & FIRE' 
				,[Type]='agency'
                ,No_Of_Active_Weekly_Claims =				
					      (SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF
                            WHERE      (UnitType = 'agency') AND (Unit in ('Police','Fire')) AND (Type = 'Actual'))
                ,Projection = 
						100*(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF
                            WHERE      (UnitType = 'agency') AND (Unit in ('Police','Fire')) AND (Type = 'Actual'))
						/NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF AS uv_TMF_AWC_Whole_TMF_1
                            WHERE      (UnitType = 'agency') AND (Unit in ('Police','Fire')) AND (Type = 'Projection')),0)
                        
FROM         dbo.TMF_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.TMF_AWC AS TMF_AWC_1)))

UNION ALL
--Agency Health & Other--
SELECT  top 1 Agency_Group = 'HEALTH & OTHER'
				,[Type]='agency'
                ,No_Of_Active_Weekly_Claims =				
					      (SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF
                            WHERE      (UnitType = 'agency') AND (Unit in ('Health','Other')) AND (Type = 'Actual'))
                ,Projection = 
						100*(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF
                            WHERE      (UnitType = 'agency') AND (Unit in ('Health','Other')) AND (Type = 'Actual'))
						/NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF AS uv_TMF_AWC_Whole_TMF_1
                            WHERE      (UnitType = 'agency') AND (Unit in ('Health','Other')) AND (Type = 'Projection')),0)
                        
FROM         dbo.TMF_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.TMF_AWC AS TMF_AWC_1)))

UNION ALL
SELECT top 1000 Agency_Group = dbo.udf_TMF_GetGroupByTeam(Team)
				,[Type]='group'
                ,No_Of_Active_Weekly_Claims =
						(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF
                            WHERE      (UnitType = 'group') AND (Unit = dbo.udf_TMF_GetGroupByTeam(Team)) AND (Type = 'Actual'))
                ,Projection =                        
                        100 * (SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF
                            WHERE      (UnitType = 'group') AND (Unit = dbo.udf_TMF_GetGroupByTeam(Team)) AND (Type = 'Actual'))
                        /NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF AS uv_TMF_AWC_Whole_TMF_1
                            WHERE      (UnitType = 'group') AND (Unit = dbo.udf_TMF_GetGroupByTeam(Team)) AND (Type = 'Projection')),0)
FROM         dbo.TMF_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.TMF_AWC AS TMF_AWC_1)))
GROUP BY dbo.udf_TMF_GetGroupByTeam(Team)
ORDER BY CASE ISNUMERIC(dbo.udf_TMF_GetGroupByTeam(Team))
			WHEN 1 THEN REPLICATE('0', 100 - LEN(dbo.udf_TMF_GetGroupByTeam(Team))) + dbo.udf_TMF_GetGroupByTeam(Team)
			ELSE dbo.udf_TMF_GetGroupByTeam(Team)
		 END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_TMF_AWC_Agency_Group_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_TMF_AWC_Team_Sub_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_TMF_AWC_Team_Sub_Summary')
	DROP VIEW [dbo].[uv_TMF_AWC_Team_Sub_Summary]
GO
CREATE VIEW [dbo].[uv_TMF_AWC_Team_Sub_Summary] 
AS

SELECT   top 1000000  
		   [Type] ='agency'
		   ,Agency_Group = RTRIM(ISNULL(AgencyName, 'Miscellaneous'))
		   ,Team_Sub = RTRIM(ISNULL(Sub_Category, 'Miscellaneous'))
           ,No_Of_Active_Weekly_Claims =
				(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
					FROM          dbo.uv_TMF_AWC_Whole_TMF
					WHERE      (UnitType = 'sub_category') AND (Unit = RTRIM(ISNULL(Sub_Category, 'Miscellaneous'))) AND (Type = 'Actual'))
           ,Projection =
				100*
				(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
					FROM          dbo.uv_TMF_AWC_Whole_TMF
					WHERE      (UnitType = 'sub_category') AND (Unit = RTRIM(ISNULL(Sub_Category, 'Miscellaneous'))) AND (Type = 'Actual'))
				/NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
						FROM          dbo.uv_TMF_AWC_Whole_TMF AS uv_TMF_AWC_Whole_TMF_1
						WHERE      (UnitType = 'sub_category') AND (Unit = RTRIM(ISNULL(Sub_Category, 'Miscellaneous'))) AND (Type = 'Projection')),0)
FROM         dbo.TMF_AWC awc left join TMF_Agencies_Sub_Category sub on awc.POLICY_NO = sub.POLICY_NO
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.TMF_AWC AS TMF_AWC_1)))
GROUP BY RTRIM(ISNULL(Sub_Category, 'Miscellaneous')), RTRIM(ISNULL(AgencyName, 'Miscellaneous'))
ORDER BY RTRIM(ISNULL(Sub_Category, 'Miscellaneous'))

--Agency Police & Fire--
UNION ALL
SELECT   top 1000000  
		   [Type] ='agency'
		   ,Agency_Group = 'Police & Fire'
		   ,Team_Sub = RTRIM(ISNULL(Sub_Category, 'Miscellaneous'))
           ,No_Of_Active_Weekly_Claims =
				(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
					FROM          dbo.uv_TMF_AWC_Whole_TMF
					WHERE      (UnitType = 'sub_category') AND (Unit = RTRIM(ISNULL(Sub_Category, 'Miscellaneous'))) AND (Type = 'Actual'))
           ,Projection =
				100*
				(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
					FROM          dbo.uv_TMF_AWC_Whole_TMF
					WHERE      (UnitType = 'sub_category') AND (Unit = RTRIM(ISNULL(Sub_Category, 'Miscellaneous'))) AND (Type = 'Actual'))
				/NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
						FROM          dbo.uv_TMF_AWC_Whole_TMF AS uv_TMF_AWC_Whole_TMF_1
						WHERE      (UnitType = 'sub_category') AND (Unit = RTRIM(ISNULL(Sub_Category, 'Miscellaneous'))) AND (Type = 'Projection')),0)
FROM         dbo.TMF_AWC awc left join TMF_Agencies_Sub_Category sub on awc.POLICY_NO = sub.POLICY_NO
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.TMF_AWC AS TMF_AWC_1)))
           AND RTRIM(AgencyName) in ('Police','Fire')	
GROUP BY RTRIM(ISNULL(Sub_Category, 'Miscellaneous')), RTRIM(AgencyName)
ORDER BY RTRIM(ISNULL(Sub_Category, 'Miscellaneous'))

--Agency Health & Other--
UNION ALL
SELECT   top 1000000  
		   [Type] ='agency'
		   ,Agency_Group = 'Health & Other'
		   ,Team_Sub = RTRIM(ISNULL(Sub_Category, 'Miscellaneous'))
           ,No_Of_Active_Weekly_Claims =
				(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
					FROM          dbo.uv_TMF_AWC_Whole_TMF
					WHERE      (UnitType = 'sub_category') AND (Unit = RTRIM(ISNULL(Sub_Category, 'Miscellaneous'))) AND (Type = 'Actual'))
           ,Projection =
				100*
				(SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
					FROM          dbo.uv_TMF_AWC_Whole_TMF
					WHERE      (UnitType = 'sub_category') AND (Unit = RTRIM(ISNULL(Sub_Category, 'Miscellaneous'))) AND (Type = 'Actual'))
				/NULLIF((SELECT     SUM(No_of_Active_Weekly_Claims) AS Expr1
						FROM          dbo.uv_TMF_AWC_Whole_TMF AS uv_TMF_AWC_Whole_TMF_1
						WHERE      (UnitType = 'sub_category') AND (Unit = RTRIM(ISNULL(Sub_Category, 'Miscellaneous'))) AND (Type = 'Projection')),0)
FROM         dbo.TMF_AWC awc left join TMF_Agencies_Sub_Category sub on awc.POLICY_NO = sub.POLICY_NO
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.TMF_AWC AS TMF_AWC_1)))
           AND RTRIM(AgencyName) in ('Health','Other')	
GROUP BY RTRIM(ISNULL(Sub_Category, 'Miscellaneous')), RTRIM(AgencyName)
ORDER BY RTRIM(ISNULL(Sub_Category, 'Miscellaneous'))

UNION ALL
SELECT  top 1000000   
		   [Type] ='group'
		   ,Agency_Group = dbo.udf_TMF_GetGroupByTeam(Team)
		   ,Team_Sub = RTRIM(ISNULL(Team, 'Miscellaneous'))
		   ,No_Of_Active_Weekly_Claims =
					(SELECT SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF
                            WHERE      (UnitType = 'team') AND (Unit = RTRIM(ISNULL(dbo.TMF_AWC.Team, 'Miscellaneous'))) AND (Type = 'Actual'))
           ,Projection =
					100*(SELECT SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF
                            WHERE      (UnitType = 'team') AND (Unit = RTRIM(ISNULL(dbo.TMF_AWC.Team, 'Miscellaneous'))) AND (Type = 'Actual'))
					/NULLIF((SELECT SUM(No_of_Active_Weekly_Claims) AS Expr1
                            FROM          dbo.uv_TMF_AWC_Whole_TMF AS uv_TMF_AWC_Whole_TMF_1
                            WHERE      (UnitType = 'team') AND (Unit = RTRIM(ISNULL(dbo.TMF_AWC.Team, 'Miscellaneous'))) AND (Type = 'Projection')),0) 
FROM         dbo.TMF_AWC
WHERE     (Time_ID >= DATEADD(mm, - 2,
                          (SELECT     MAX(Time_ID) AS Expr1
                            FROM          dbo.TMF_AWC AS TMF_AWC_1)))
GROUP BY dbo.udf_TMF_GetGroupByTeam(Team), RTRIM(ISNULL(Team, 'Miscellaneous'))
ORDER BY RTRIM(ISNULL(Team, 'Miscellaneous'))
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_TMF_AWC_Team_Sub_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_TMF_AWC_Weekly_Open.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_TMF_AWC_Weekly_Open')
	DROP VIEW [dbo].[uv_TMF_AWC_Weekly_Open]
GO
CREATE VIEW [dbo].[uv_TMF_AWC_Weekly_Open] 
AS
	select * from [dbo].[uv_TMF_AWC_Weekly_Open_1_2] 
	union select * from [dbo].[uv_TMF_AWC_Weekly_Open_3_5]
	union select * from [dbo].[uv_TMF_AWC_Weekly_Open_5_Plus]
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_TMF_AWC_Weekly_Open.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_TMF_CPR_Agency_Group_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_TMF_CPR_Agency_Group_Summary')
	DROP VIEW [dbo].[uv_TMF_CPR_Agency_Group_Summary]
GO
CREATE VIEW [dbo].[uv_TMF_CPR_Agency_Group_Summary]
AS
SELECT   top 1  Agency_Group = 'TMF'
				,[Type] = 'agency'
				,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y')
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
FROM	TMF_Portfolio uv left join TMF_Agencies_Sub_Category sub on sub.POLICY_NO = uv.Policy_No
WHERE	Reporting_Date = (select MAX(Reporting_Date) from TMF_Portfolio)

UNION ALL

SELECT  top 1000 Agency_Group = rtrim(isnull(sub.AgencyName,'Miscellaneous'))
				,[Type] = 'agency'
                ,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value = rtrim(isnull(sub.AgencyName,'Miscellaneous')))
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y'
									and Value = rtrim(isnull(sub.AgencyName,'Miscellaneous')))
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value = rtrim(isnull(sub.AgencyName,'Miscellaneous')))
FROM	TMF_Portfolio uv left join TMF_Agencies_Sub_Category sub on sub.POLICY_NO = uv.Policy_No
WHERE	Reporting_Date = (select MAX(Reporting_Date) from TMF_Portfolio)
		and Claim_Closed_Flag <> 'Y'
GROUP BY rtrim(isnull(sub.AgencyName,'Miscellaneous'))
ORDER BY rtrim(isnull(sub.AgencyName,'Miscellaneous'))

UNION ALL

--Agency Police & Fire--
SELECT  top 1 Agency_Group = 'POLICE & FIRE'
				,[Type] = 'agency'
                ,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value in ('Police','Fire'))
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y'
									and Value in ('Police','Fire'))
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value in ('Police','Fire'))
FROM	TMF_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from TMF_Portfolio)

UNION ALL

--Agency Health & Other--
SELECT  top 1 Agency_Group = 'HEALTH & OTHER'
				,[Type] = 'agency'
                ,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value in ('Health','Other'))
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y'
									and Value in ('Health','Other'))
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value in ('Health','Other'))
FROM	TMF_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from TMF_Portfolio)

UNION ALL

SELECT top 1 Agency_Group = 'TMF'
				,[Type] = 'group'
                ,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('TMF', 'group', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('TMF', 'group', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y')
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('TMF', 'group', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
FROM	TMF_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from TMF_Portfolio)
		 
UNION ALL
		 
SELECT top 1000 Agency_Group = rtrim(isnull(sub.[Group],'Miscellaneous'))
				,[Type] = 'group'
                ,No_Of_New_Claims = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM	[dbo].[udf_CPR_Overall]('TMF', 'group', 0)
         --                   WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value = rtrim(isnull(sub.[Group],'Miscellaneous')))
                ,No_Of_Open_Claims =
                        (SELECT     COUNT(distinct Claim_No)
                            FROM    [dbo].[udf_CPR_Overall]('TMF', 'group', 0)
                            WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
									and Claim_Closed_Flag <> 'Y'
									and Value = rtrim(isnull(sub.[Group],'Miscellaneous')))
                ,No_Of_Claim_Closures = 0
         --               (SELECT     COUNT(distinct Claim_No)
         --                   FROM    [dbo].[udf_CPR_Overall]('TMF', 'group', 0)
         --                   WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
									--and Value = rtrim(isnull(sub.[Group],'Miscellaneous')))
FROM	TMF_Portfolio uv left join TMF_Agencies_Sub_Category sub on sub.POLICY_NO = uv.Policy_No
WHERE	Reporting_Date = (select MAX(Reporting_Date) from TMF_Portfolio)
		and Claim_Closed_Flag <> 'Y'
GROUP BY rtrim(isnull(sub.[Group],'Miscellaneous'))
ORDER BY CASE IsNumeric(rtrim(isnull(sub.[Group],'Miscellaneous'))) 
			WHEN 1 THEN Replicate('0', 100 - Len(rtrim(isnull(sub.[Group],'Miscellaneous')))) + rtrim(isnull(sub.[Group],'Miscellaneous'))
			ELSE rtrim(isnull(sub.[Group],'Miscellaneous'))
		 END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_TMF_CPR_Agency_Group_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_TMF_CPR_ClaimOfficer_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_TMF_CPR_ClaimOfficer_Summary')
	DROP VIEW [dbo].[uv_TMF_CPR_ClaimOfficer_Summary]
GO
CREATE VIEW [dbo].[uv_TMF_CPR_ClaimOfficer_Summary]
AS
SELECT		top 1000000
			[Type] = 'group'
			,Agency_Group = dbo.udf_TMF_GetGroupByTeam(Team)
			,Team_Sub = RTRIM(Team)
			,ClaimOfficer = RTRIM(Claims_Officer_Name)
            ,No_Of_New_Claims = 0
       --         (SELECT     COUNT(distinct Claim_No)
       --             FROM	[dbo].[udf_CPR_Overall]('TMF', 'group', 0)
       --             WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and Value = dbo.udf_TMF_GetGroupByTeam(Team)
							--and SubValue = Team
							--and SubValue2 = Claims_Officer_Name)
            ,No_Of_Open_Claims =
                (SELECT     COUNT(distinct Claim_No)
                    FROM    [dbo].[udf_CPR_Overall]('TMF', 'group', 0)
                    WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
							and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
							and Claim_Closed_Flag <> 'Y'
							and Value = dbo.udf_TMF_GetGroupByTeam(Team)
							and SubValue = Team
							and SubValue2 = Claims_Officer_Name)
            ,No_Of_Claim_Closures = 0
       --         (SELECT     COUNT(distinct Claim_No)
       --             FROM    [dbo].[udf_CPR_Overall]('TMF', 'group', 0)
       --             WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and Value = dbo.udf_TMF_GetGroupByTeam(Team)
							--and SubValue = Team
							--and SubValue2 = Claims_Officer_Name)
FROM	TMF_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from TMF_Portfolio)
		and Claim_Closed_Flag <> 'Y'
GROUP BY dbo.udf_TMF_GetGroupByTeam(Team), Team, Claims_Officer_Name
ORDER BY Claims_Officer_Name
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_TMF_CPR_ClaimOfficer_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_TMF_CPR_Team_Sub_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================

IF EXISTS(select * FROM sys.views where name = 'uv_TMF_CPR_Team_Sub_Summary')
	DROP VIEW [dbo].[uv_TMF_CPR_Team_Sub_Summary]
GO
CREATE VIEW [dbo].[uv_TMF_CPR_Team_Sub_Summary]
AS
SELECT		top 1000000
			[Type] = 'agency'
			,Agency_Group = rtrim(isnull(sub.AgencyName,'Miscellaneous'))
			,Team_Sub = rtrim(isnull(sub.Sub_Category,'Miscellaneous'))
			,No_Of_New_Claims = 0
       --         (SELECT     COUNT(distinct Claim_No)
       --             FROM	[dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
       --             WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and Value = rtrim(isnull(sub.AgencyName,'Miscellaneous'))
							--and SubValue = rtrim(isnull(sub.Sub_Category,'Miscellaneous')))
            ,No_Of_Open_Claims =
                (SELECT     COUNT(distinct Claim_No)
                    FROM    [dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
                    WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
							and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
							and Claim_Closed_Flag <> 'Y'
							and Value = rtrim(isnull(sub.AgencyName,'Miscellaneous'))
							and SubValue = rtrim(isnull(sub.Sub_Category,'Miscellaneous')))
            ,No_Of_Claim_Closures = 0
       --         (SELECT     COUNT(distinct Claim_No)
       --             FROM    [dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
       --             WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and Value = rtrim(isnull(sub.AgencyName,'Miscellaneous'))
							--and SubValue = rtrim(isnull(sub.Sub_Category,'Miscellaneous')))
FROM	TMF_Portfolio uv left join TMF_Agencies_Sub_Category sub on sub.POLICY_NO = uv.Policy_No
WHERE	Reporting_Date = (select MAX(Reporting_Date) from TMF_Portfolio)
		and Claim_Closed_Flag <> 'Y'
GROUP BY rtrim(isnull(sub.Sub_Category,'Miscellaneous')), rtrim(isnull(sub.AgencyName,'Miscellaneous'))
ORDER BY rtrim(isnull(sub.Sub_Category,'Miscellaneous'))

--Uncomment this to active the combine grouping logic--
----Agency Police & Fire--
--UNION ALL

--SELECT		top 1000000
--			[Type] = 'agency'
--			,Agency_Group = 'Police & Fire'
--			,Team_Sub = rtrim(Sub_Category)
--			,No_Of_New_Claims =
--                (SELECT     COUNT(distinct Claim_No)
--                    FROM	[dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
--                    WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
--							and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
--							and Value in ('Police','Fire')
--							and SubValue = Sub_Category)
--            ,No_Of_Open_Claims =
--                (SELECT     COUNT(distinct Claim_No)
--                    FROM    [dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
--                    WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
--							and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
--							and Claim_Closed_Flag <> 'Y'
--							and Value in ('Police','Fire')
--							and SubValue = Sub_Category)
--            ,No_Of_Claim_Closures =
--                (SELECT     COUNT(distinct Claim_No)
--                    FROM    [dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
--                    WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
--							and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
--							and Value in ('Police','Fire')
--							and SubValue = Sub_Category)
--FROM	TMF_Portfolio
--WHERE	Reporting_Date = (select MAX(Reporting_Date) from TMF_Portfolio)
--        AND RTRIM(Agency_Name) in ('Police','Fire')
--GROUP BY Sub_Category, Agency_Name
--ORDER BY Sub_Category

----Agency Health & Other--
--UNION ALL

--SELECT		top 1000000
--			[Type] = 'agency'
--			,Agency_Group = 'Health & Other'
--			,Team_Sub = rtrim(Sub_Category)
--			,No_Of_New_Claims =
--                (SELECT     COUNT(distinct Claim_No)
--                    FROM	[dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
--                    WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
--							and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
--							and Value in ('Health','Other')
--							and SubValue = Sub_Category)
--            ,No_Of_Open_Claims =
--                (SELECT     COUNT(distinct Claim_No)
--                    FROM    [dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
--                    WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
--							and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
--							and Claim_Closed_Flag <> 'Y'
--							and Value in ('Health','Other')
--							and SubValue = Sub_Category)
--            ,No_Of_Claim_Closures =
--                (SELECT     COUNT(distinct Claim_No)
--                    FROM    [dbo].[udf_CPR_Overall]('TMF', 'agency', 0)
--                    WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
--							and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
--							and Value in ('Health','Other')
--							and SubValue = Sub_Category)
--FROM	TMF_Portfolio
--WHERE	Reporting_Date = (select MAX(Reporting_Date) from TMF_Portfolio)
--        AND RTRIM(Agency_Name) in ('Health','Other')
--GROUP BY Sub_Category, Agency_Name
--ORDER BY Sub_Category

UNION ALL

SELECT		top 1000000
			[Type] = 'group'
			,Agency_Group = dbo.udf_TMF_GetGroupByTeam(Team)
			,Team_Sub = rtrim(Team)
            ,No_Of_New_Claims = 0
       --         (SELECT     COUNT(distinct Claim_No)
       --             FROM	[dbo].[udf_CPR_Overall]('TMF', 'group', 0)
       --             WHERE	Date_Claim_Received between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and Value = dbo.udf_TMF_GetGroupByTeam(Team)
							--and SubValue = Team)
            ,No_Of_Open_Claims =
                (SELECT     COUNT(distinct Claim_No)
                    FROM    [dbo].[udf_CPR_Overall]('TMF', 'group', 0)
                    WHERE	(Date_Claim_Closed is null or Date_Claim_Closed < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
							and (Date_Claim_Reopened is null or Date_Claim_Reopened < DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))))
							and Claim_Closed_Flag <> 'Y'
							and Value = dbo.udf_TMF_GetGroupByTeam(Team)
							and SubValue = Team)
            ,No_Of_Claim_Closures = 0
       --         (SELECT     COUNT(distinct Claim_No)
       --             FROM    [dbo].[udf_CPR_Overall]('TMF', 'group', 0)
       --             WHERE   Date_Claim_Closed between DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
							--and Value = dbo.udf_TMF_GetGroupByTeam(Team)
							--and SubValue = Team)
FROM	TMF_Portfolio
WHERE	Reporting_Date = (select MAX(Reporting_Date) from TMF_Portfolio)
		and Claim_Closed_Flag <> 'Y'
GROUP BY dbo.udf_TMF_GetGroupByTeam(Team), Team
ORDER BY Team
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\View\View_2\uv_TMF_CPR_Team_Sub_Summary.sql  
--------------------------------  
---------------------------------------------------------- 
------------------- StoredProcedure 
---------------------------------------------------------- 
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\ArrangeLevel_Role.sql  
--------------------------------  
/****** Object:  StoredProcedure [dbo].[sp_ArrangeLevel_Role]    Script Date: 01/03/2012 13:56:21 ******/
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_ArrangeLevel_Role]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[sp_ArrangeLevel_Role]
GO

/****** Object:  StoredProcedure [dbo].[sp_ArrangeLevel_Role]    Script Date: 01/03/2012 13:56:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
/****** Object:  Stored Procedure dbo.usp_GetPaymntFlgCommonLaw    Script Date: 1/17/04 12:27:14 PM ******/
create PROC [dbo].[sp_ArrangeLevel_Role](@data varchar(500),@updatedby int)
AS	
	DECLARE @Item varchar(20)	
	begin try
	BEGIN TRANSACTION trans	
		
		DECLARE cur CURSOR FOR 			
			with cte as
			(
				select 0 a, 1 b
				union all
				select b, charindex(',', @data, b) + len(',')
				from cte
				where b > a
			)
			select substring(@data,a,
			case when b > len(',') then b-a-len(',') else len(@data) - a + 1 end) value      
			from cte where a >0					
		OPEN cur
		FETCH NEXT FROM cur	INTO @Item
		WHILE @@FETCH_STATUS = 0
			BEGIN				
				update Organisation_Levels
				set sort = Convert(int,SUBSTRING(@Item,CHARINDEX('|', @Item)+1,LEN(@Item))),UpdatedBy=@updatedby 
				where LevelId = CONVERT(int,SUBSTRING(@Item, 1, CHARINDEX('|', @Item)-1))
				FETCH NEXT FROM cur INTO @Item  
			END
		CLOSE cur
		DEALLOCATE cur
		COMMIT TRANSACTION trans		
	end try
	begin catch
		ROLLBACK TRANSACTION trans		
	end catch;
GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\ArrangeLevel_Role.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\GetUser.sql  
--------------------------------  
/****** Object:  StoredProcedure [dbo].[PRO_Login]    Script Date: 01/03/2012 13:56:21 ******/
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[PRO_GetUser]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PRO_GetUser]
GO

/****** Object:  StoredProcedure [dbo].[PRO_GetUser]    Script Date: 20/09/2012 13:56:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create PROCEDURE [dbo].[PRO_GetUser] (@UserName varchar(150)) 
	
AS
BEGIN	
	select UserName, [Password] from dbo.Users where UserName = @UserName and [Status] = 1		
END

GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\GetUser.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\PRO_GetUser.sql  
--------------------------------  

/****** Object:  StoredProcedure [dbo].[PRO_GetUser]    Script Date: 08/13/2014 13:38:30 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PRO_GetUser]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PRO_GetUser]
GO


/****** Object:  StoredProcedure [dbo].[PRO_GetUser]    Script Date: 08/13/2014 13:38:30 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[PRO_GetUser] (@UserName varchar(150)) 
	
AS
BEGIN	
	select UserName, [Password], [Is_System_User] from dbo.Users where UserName = @UserName or Email = @UserName and [Status] = 1		
END
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\PRO_GetUser.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\PRO_Internal_Login.sql  
--------------------------------  

/****** Object:  StoredProcedure [dbo].[PRO_Internal_Login]    Script Date: 07/03/2014 16:14:34 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PRO_Internal_Login]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PRO_Internal_Login]
GO



/****** Object:  StoredProcedure [dbo].[PRO_Internal_Login]    Script Date: 07/03/2014 16:14:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




-- exec PRO_Login
CREATE PROCEDURE [dbo].[PRO_Internal_Login] (@Username varchar(150), @NoLimitLoginAttempts int = 3, @NoDaysBlockedAttempts int = 1, @SystemId int)
	
AS
BEGIN
	declare @loginAttempts int;
	declare @UserId int	
	declare @Status_Active smallint
	
	select @Status_Active = statusid from dbo.[Status] where name='Active'
	
	select @UserId =
		u.UserId from Users u left join ReportUsers r on u.UserId=r.UserId left join Organisation_Roles o 
		on r.Organisation_RoleId=o.Organisation_RoleId 
		left join Organisation_Levels ol on o.LevelId=ol.LevelId 
		left join Systems s on s.SystemId=ol.SystemId 
		where u.UserName=@Username and s.SystemId = @SystemId and o.[Status]=@Status_Active 
		and ol.[Status]=@Status_Active and u.[Status]=@Status_Active
	if @UserId >0
		select @UserId
	else if exists(select top 1 UserId,UserName from dbo.Users where UserName=@Username and [Status] = @Status_Active)
		begin						
			select @UserId = UserId from dbo.Users where UserId =(select top 1 userid from dbo.Users where UserName=@Username and [Status] = @Status_Active)
			if exists(select UserId from SystemUsers where UserId=@UserId)
				or exists(select UserId from ReportUsers r left join External_Groups e on r.External_GroupId=e.External_GroupId where  Is_External_User = 1 and UserId=@UserId and e.[Status]=@Status_Active)
				or exists(select UserId 
							from ReportUsers r 
								left join Organisation_Roles o on r.Organisation_RoleId=o.Organisation_RoleId 
								left join Organisation_Levels ol on o.LevelId=ol.LevelId 
							where UserId=@UserId and o.[Status]=@Status_Active and ol.[Status]=@Status_Active)
					select @UserId
			else
					select @loginAttempts = ISNULL(Online_No_Of_Login_Attempts, 0) + 1 from Users
						where UserName=@Username
									
					update Users set Online_No_Of_Login_Attempts = @loginAttempts
						where UserName=@Username
					
					if @loginAttempts >= @NoLimitLoginAttempts
					begin
						update Users set [Status] = 2, Online_Locked_Until_Datetime = DATEADD(dd, @NoDaysBlockedAttempts, GETDATE()) 
							where UserName=@Username	
						select -2 -- account has been blocked
					end
					else
						select -1
		end
	else
		begin
			if exists(select top 1 UserId, UserName from dbo.Users where UserName=@Username and [Status] = 2 and Online_Locked_Until_Datetime is not null and Online_Locked_Until_Datetime <= GETDATE())
				begin
					-- unblock user login
					update Users set [Status] = 1, Online_No_Of_Login_Attempts = NULL, Online_Locked_Until_Datetime = NULL
						where UserName=@Username
					
					select UserId from dbo.Users where UserName=@Username
				end
			else if exists(select top 1 UserId, UserName from dbo.Users where UserName=@Username and [Status] = 2 and Online_Locked_Until_Datetime is not null and Online_Locked_Until_Datetime > GETDATE())
				select -2 -- account has been blocking
			else if exists(select top 1 UserId, UserName from dbo.Users where UserName=@Username and [Status] = 1)
			begin
				select @loginAttempts = ISNULL(Online_No_Of_Login_Attempts, 0) + 1 from Users where UserName=@Username
									
				update Users set Online_No_Of_Login_Attempts = @loginAttempts where UserName=@Username
				
				if @loginAttempts >= @NoLimitLoginAttempts
				begin
					update Users set [Status] = 2, Online_Locked_Until_Datetime = DATEADD(dd, @NoDaysBlockedAttempts, GETDATE())where UserName=@Username
					select -2 -- account has been blocked
				end
				else
					select -1 -- wrong password
			end	
			else
				select -1 -- wrong password
		end
	
	--Update Last_Online_Login_Date column if user exist	
	if @UserId > 0
		begin
			update Users set Last_Online_Login_Date = getdate() where UserId = @UserId
		end
END


GO


--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\PRO_Internal_Login.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\PRO_Login.sql  
--------------------------------  
/****** Object:  StoredProcedure [dbo].[PRO_Login]    Script Date: 01/03/2012 13:56:21 ******/
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[PRO_Login]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PRO_Login]
GO

/****** Object:  StoredProcedure [dbo].[PRO_Login]    Script Date: 20/09/2012 13:56:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


-- exec PRO_Login
CREATE PROCEDURE [dbo].[PRO_Login] (@Email varchar(150),@PassWord varchar(300), @NoLimitLoginAttempts int = 3, @NoDaysBlockedAttempts int = 1, @SystemId int)
	
AS
BEGIN
	declare @loginAttempts int;
	declare @UserId int	
	declare @Status_Active smallint
	
	select @Status_Active = statusid from dbo.[Status] where name='Active'
	
	select @UserId =
		u.UserId from Users u left join ReportUsers r on u.UserId=r.UserId left join Organisation_Roles o 
		on r.Organisation_RoleId=o.Organisation_RoleId 
		left join Organisation_Levels ol on o.LevelId=ol.LevelId 
		left join Systems s on s.SystemId=ol.SystemId 
		where u.Email=@Email and [Password]=@Password and s.SystemId = @SystemId and o.[Status]=@Status_Active 
		and ol.[Status]=@Status_Active and u.[Status]=@Status_Active
	if @UserId >0
		select @UserId
	else if exists(select top 1 UserId,Email,[Password] from dbo.Users where Email=@Email and [Password]=@PassWord and [Status] = @Status_Active)
		begin						
			select @UserId = UserId from dbo.Users where UserId =(select top 1 userid from dbo.Users where Email=@Email and [Password]=@PassWord and [Status] = @Status_Active)
			if exists(select UserId from SystemUsers where UserId=@UserId)
				or exists(select UserId from ReportUsers r left join External_Groups e on r.External_GroupId=e.External_GroupId where  Is_External_User = 1 and UserId=@UserId and e.[Status]=@Status_Active)
				or exists(select UserId 
							from ReportUsers r 
								left join Organisation_Roles o on r.Organisation_RoleId=o.Organisation_RoleId 
								left join Organisation_Levels ol on o.LevelId=ol.LevelId 
							where UserId=@UserId and o.[Status]=@Status_Active and ol.[Status]=@Status_Active)
					select @UserId
			else
					select @loginAttempts = ISNULL(Online_No_Of_Login_Attempts, 0) + 1 from Users
						where Email=@Email and [Password]=@PassWord
									
					update Users set Online_No_Of_Login_Attempts = @loginAttempts
						where Email=@Email and [Password]=@PassWord
					
					if @loginAttempts >= @NoLimitLoginAttempts
					begin
						update Users set [Status] = 2, Online_Locked_Until_Datetime = DATEADD(dd, @NoDaysBlockedAttempts, GETDATE()) 
							where Email=@Email and [Password]=@PassWord		
						select -2 -- account has been blocked
					end
					else
						select -1
		end
	else
		begin
			if exists(select top 1 UserId, Email,[Password] from dbo.Users where Email=@Email and [Password]=@PassWord and [Status] = 2 and Online_Locked_Until_Datetime is not null and Online_Locked_Until_Datetime <= GETDATE())
				begin
					-- unblock user login
					update Users set [Status] = 1, Online_No_Of_Login_Attempts = NULL, Online_Locked_Until_Datetime = NULL
						where Email=@Email and [Password]=@PassWord
					
					select UserId from dbo.Users where Email=@Email and [Password]=@PassWord
				end
			else if exists(select top 1 UserId, Email,[Password] from dbo.Users where Email=@Email and [Status] = 2 and Online_Locked_Until_Datetime is not null and Online_Locked_Until_Datetime > GETDATE())
				select -2 -- account has been blocking
			else if exists(select top 1 UserId, Email,[Password] from dbo.Users where Email=@Email and [Password]<>@PassWord and [Status] = 1)
			begin
				select @loginAttempts = ISNULL(Online_No_Of_Login_Attempts, 0) + 1 from Users where Email=@Email
									
				update Users set Online_No_Of_Login_Attempts = @loginAttempts where Email=@Email
				
				if @loginAttempts >= @NoLimitLoginAttempts
				begin
					update Users set [Status] = 2, Online_Locked_Until_Datetime = DATEADD(dd, @NoDaysBlockedAttempts, GETDATE()) where Email=@Email
					select -2 -- account has been blocked
				end
				else
					select -1 -- wrong password
			end	
			else
				select -1 -- wrong password
		end
	
	--Update Last_Online_Login_Date column if user exist	
	if @UserId > 0
		begin
			update Users set Last_Online_Login_Date = getdate() where UserId = @UserId
		end
END
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\PRO_Login.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\Register.sql  
--------------------------------  
/****** Object:  StoredProcedure [dbo].[PRO_Register]    Script Date: 09/23/2013 13:05:31 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PRO_Register]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PRO_Register]
GO

/****** Object:  StoredProcedure [dbo].[PRO_Register]    Script Date: 09/23/2013 13:05:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[PRO_Register] (@UserName varchar(150),@PassWord varchar(300),@Email varchar(256),@FirstName nvarchar(256),@LastName nvarchar(256),@Address nvarchar(400),@i_Status int) 
	
AS
BEGIN
	If exists(select UserId from USERs where Email=@Email and Address<>'')
		select -2
	Else If exists(select UserId from USERs where UserName=@UserName)
		select -1
	Else
		Begin
			Insert into USERs (UserName,Password,Email,FirstName,LastName,Address,Status) values(@UserName,@Password,@Email,@FirstName,@LastName,@Address,@i_Status)
			select SCOPE_IDENTITY()
		End
END

GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\Register.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\ResetPassword.sql  
--------------------------------  
/****** Object:  StoredProcedure [dbo].[PRO_ResetPassword]    Script Date: 01/03/2012 13:56:21 ******/
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[PRO_ResetPassword]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PRO_ResetPassword]
GO

/****** Object:  StoredProcedure [dbo].[PRO_ResetPassword]    Script Date: 01/03/2012 13:56:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE [dbo].[PRO_ResetPassword] (@UserNameOrEmail varchar(256),@PassWordReset varchar(256)) 
	
AS
BEGIN
	If exists(select UserId from USERs where Email=@UserNameOrEmail)
		begin
			update USERs set Password = @PassWordReset where Email =@UserNameOrEmail
			select userid from Users where Email =@UserNameOrEmail
		end
	Else If exists(select UserId from USERs where UserName=@UserNameOrEmail)
		begin
			update USERs set Password = @PassWordReset where UserName =@UserNameOrEmail
			select userid from Users where UserName =@UserNameOrEmail
		end
	Else
		select -1
END
GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\ResetPassword.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\SaveSystemRoles.sql  
--------------------------------  
/****** Object:  StoredProcedure [dbo].[sp_SaveSystemRoles]    Script Date: 01/03/2012 13:56:21 ******/
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_SaveSystemRoles]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[sp_SaveSystemRoles]
GO

/****** Object:  StoredProcedure [dbo].[sp_SaveSystemRoles]    Script Date: 01/03/2012 13:56:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
/****** Object:  Stored Procedure dbo.usp_GetPaymntFlgCommonLaw    Script Date: 1/17/04 12:27:14 PM ******/
create PROC [dbo].[sp_SaveSystemRoles](@System_RoleId bigint,@Name varchar(256),@Description nvarchar(500),@SystemRoles varchar(500),@UpdatedBy int)
AS	
	DECLARE @Item varchar(20)	
	begin try
	BEGIN TRANSACTION trans
	
		if(exists(select top 1 System_RoleId from System_Roles where System_RoleId=@System_RoleId))
			begin
				update System_Roles set Name=@Name,[Description] =@Description where System_RoleId =@System_RoleId			
				delete from System_Role_Permissions where System_RoleId = @System_RoleId
			end 
		else
			begin
				insert into System_Roles(Name,[Description]) values(@Name,@Description)	
				select @System_RoleId =SCOPE_IDENTITY()
			end 
		
		DECLARE cur CURSOR FOR 			
			with cte as
			(
				select 0 a, 1 b
				union all
				select b, charindex(',', @SystemRoles, b) + len(',')
				from cte
				where b > a
			)
			select substring(@SystemRoles,a,
			case when b > len(',') then b-a-len(',') else len(@SystemRoles) - a + 1 end) value      
			from cte where a >0					
		OPEN cur
		FETCH NEXT FROM cur	INTO @Item
		WHILE @@FETCH_STATUS = 0
			BEGIN				
				insert into System_Role_Permissions(System_RoleId,System_PermissionId,PermissionId,[Status],UpdatedBy) 
				values(@System_RoleId,Convert(bigint,SUBSTRING(@Item, 1,CHARINDEX('_', @Item) - 1)),Convert(bigint,SUBSTRING(@Item, CHARINDEX('_', @Item)+1,CHARINDEX('_', @Item) - 1)),1,@UpdatedBy)				
				FETCH NEXT FROM cur INTO @Item  
			END
		CLOSE cur
		DEALLOCATE cur
		COMMIT TRANSACTION trans
		select 1
	end try
	begin catch
		ROLLBACK TRANSACTION trans
		select -1
	end catch;
GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\SaveSystemRoles.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\SetScheduleType.sql  
--------------------------------  
/****** Object:  StoredProcedure [dbo].[PRO_SetScheduleType]    Script Date: 01/03/2012 13:56:21 ******/
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[PRO_SetScheduleType]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PRO_SetScheduleType]
GO

/****** Object:  StoredProcedure [dbo].[PRO_SetScheduleType]    Script Date: 01/03/2012 13:56:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
-- Batch submitted through debugger: SQLQuery1.sql|0|0|C:\Users\Administrator.ASWLAP08\AppData\Local\Temp\~vs2B93.sql
create proc [dbo].[PRO_SetScheduleType]
	@SubID varchar(50),
	@ScheduleType smallint
as
begin
	update Subscriptions
	set ScheduleType = @ScheduleType
	where SubscriptionID = @SubID
end
GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\SetScheduleType.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\SetSubscriptonStatus.sql  
--------------------------------  
/****** Object:  StoredProcedure [dbo].[PRO_SetSubscriptonStatus]    Script Date: 01/03/2012 13:56:21 ******/
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[PRO_SetSubscriptonStatus]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PRO_SetSubscriptonStatus]
GO

/****** Object:  StoredProcedure [dbo].[PRO_SetSubscriptonStatus]    Script Date: 01/03/2012 13:56:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[PRO_SetSubscriptonStatus]
	@SubID varchar(50),
	@Status smallint
as
begin
	declare @scheduleID varchar(50)
	update Subscriptions
	set [Status] = @Status,
		@scheduleID = ScheduleID
	where SubscriptionID = @SubID
	select @scheduleID
end
GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\SetSubscriptonStatus.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\Update_OrganisationRole_Level.sql  
--------------------------------  
/****** Object:  StoredProcedure [dbo].[sp_Update_OrganisationRole_Level]    Script Date: 01/03/2012 13:56:21 ******/
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_Update_OrganisationRole_Level]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[sp_Update_OrganisationRole_Level]
GO

/****** Object:  StoredProcedure [dbo].[sp_Update_OrganisationRole_Level]    Script Date: 01/03/2012 13:56:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
/****** Object:  Stored Procedure dbo.usp_GetPaymntFlgCommonLaw    Script Date: 1/17/04 12:27:14 PM ******/
create PROC [dbo].[sp_Update_OrganisationRole_Level](@roleid bigint ,@levelid bigint,@updatedby int)
AS	
	update Organisation_Roles 
	set UpdatedBy = @updatedby
	,LevelId = @levelid
	where Organisation_RoleId = @roleid
GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\Update_OrganisationRole_Level.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_CPR_Dashboard_Period.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[usp_CPR_Dashboard_Period]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE [dbo].[usp_CPR_Dashboard_Period]
GO

CREATE PROCEDURE [dbo].[usp_CPR_Dashboard_Period]
(
	@System VARCHAR(10)			-- TMF, EML, HEM
	,@ViewType VARCHAR(20)		-- Agency_Group, Sub_Team, ClaimOfficer
	,@PeriodType VARCHAR(20)	-- last_two_weeks, last_month
)
AS
BEGIN
	DECLARE @Start_Date datetime
	DECLARE @End_Date datetime
	DECLARE @Is_Last_Month bit = 0

	IF LOWER(RTRIM(@PeriodType)) = 'last_month'
	BEGIN
		-- Last month
		SET @Start_Date = DATEADD(m, -1, DATEADD(m, DATEDIFF(m, 0, GETDATE()), 0))
		SET @End_Date = DATEADD(m, DATEDIFF(m, 0, GETDATE()), -1) + '23:59'
		SET @Is_Last_Month = 1
	END
	ELSE
	BEGIN
		-- default period: Last two weeks: Start = last two weeks from yesterday; End = yesterday
		SET @Start_Date = DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
		SET @End_Date = DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))) + '23:59'
	END

	IF UPPER(RTRIM(@ViewType)) = 'AGENCY_GROUP'
	BEGIN
		EXEC('EXEC usp_' + @System + '_CPR_Dashboard_Agency_Group ''' + @Start_Date + ''',''' + @End_Date + ''',' + @Is_Last_Month + '')
	END
	ELSE IF UPPER(RTRIM(@ViewType)) = 'SUB_TEAM'
	BEGIN
		EXEC('EXEC usp_' + @System + '_CPR_Dashboard_Sub_Team ''' + @Start_Date + ''',''' + @End_Date + ''',' + @Is_Last_Month + '')
	END
	ELSE IF UPPER(RTRIM(@ViewType)) = 'CLAIMOFFICER'
	BEGIN
		EXEC('EXEC usp_' + @System + '_CPR_Dashboard_ClaimOfficer ''' + @Start_Date + ''',''' + @End_Date + ''',' + @Is_Last_Month + '')
	END
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_CPR_Dashboard_Period.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_CPR_Raw.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[usp_CPR_Raw]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE [dbo].[usp_CPR_Raw]
GO

CREATE PROCEDURE [dbo].[usp_CPR_Raw]
(
	@System VARCHAR(3)
	,@Type VARCHAR(20)
	,@Value VARCHAR(256)
	,@SubValue VARCHAR(256)
	,@SubSubValue VARCHAR(256)
	,@ClaimType VARCHAR(256)
	,@Start_Date DATETIME
	,@End_Date DATETIME
	,@Claim_Liability_Indicator NVARCHAR(256)
	,@Psychological_Claims VARCHAR(10)
	,@Inactive_Claims VARCHAR(10)
	,@Medically_Discharged VARCHAR(10)
	,@Exempt_From_Reform VARCHAR(10)
	,@Reactivation VARCHAR(10)
)
AS
BEGIN
	IF @System =  'eml'
	BEGIN
		EXEC('EXEC usp_EML_CPR_Raw ''' + @Type + ''',''' + @Value + ''',''' + @SubValue + ''',''' + @SubSubValue + ''',''' + @ClaimType + ''',''' + @Start_Date + ''',''' + @End_Date 
				+ ''',''' + @Claim_Liability_Indicator + ''',''' + @Psychological_Claims + ''',''' + @Inactive_Claims
				+ ''',''' + @Medically_Discharged + ''',''' + @Exempt_From_Reform + ''',''' + @Reactivation + '''')
	END
	ELSE
	BEGIN
		IF @System  = 'tmf'
		BEGIN
			EXEC('EXEC usp_TMF_CPR_Raw ''' + @Type + ''',''' + @Value + ''',''' + @SubValue + ''',''' + @SubSubValue + ''',''' + @ClaimType + ''',''' + @Start_Date + ''',''' + @End_Date 
				+ ''',''' + @Claim_Liability_Indicator + ''',''' + @Psychological_Claims + ''',''' + @Inactive_Claims
				+ ''',''' + @Medically_Discharged + ''',''' + @Exempt_From_Reform + ''',''' + @Reactivation + '''')
		END
		ELSE
		BEGIN
			EXEC('EXEC usp_HEM_CPR_Raw ''' + @Type + ''',''' + @Value + ''',''' + @SubValue + ''',''' + @SubSubValue + ''',''' + @ClaimType + ''',''' + @Start_Date + ''',''' + @End_Date 
				+ ''',''' + @Claim_Liability_Indicator + ''',''' + @Psychological_Claims + ''',''' + @Inactive_Claims
				+ ''',''' + @Medically_Discharged + ''',''' + @Exempt_From_Reform + ''',''' + @Reactivation + '''')
		END
	END
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_CPR_Raw.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_DART_Index.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[usp_DART_Index]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE [dbo].[usp_DART_Index]
GO

CREATE PROCEDURE [dbo].[usp_DART_Index]
AS
BEGIN	
	Print ' Need to delete current index first if change mapping'
	---------------------- DROP INDEXES FIRST --------------------
	DECLARE @qry nvarchar(max);
	SELECT @qry = 
	(SELECT  'DROP INDEX ' + idx.name + ' ON ' + OBJECT_NAME(ID) + '; '
	FROM  sysindexes idx
	WHERE   idx.Name IS NOT null and idx.Name like 'idx_%'
	FOR XML PATH(''));
	EXEC sp_executesql @qry

	-------------------------------------- CPR INDEXES --------------------------------------
	--- EML ---	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_Portfolio_RAW_Data')
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_EML_Portfolio_RAW_Data] ON [dbo].[EML_Portfolio]
		(
			[Reporting_Date] ASC,
			[Med_Cert_Status_This_Week] ASC,
			[Id] ASC,
			[Team] ASC,
			[Case_Manager] ASC,
			[EMPL_SIZE] ASC,
			[Account_Manager] ASC
		)
		INCLUDE ([Policy_No],
		[Portfolio],
		[Claim_No],
		[WIC_Code],
		[Company_Name],
		[Worker_Name],
		[Employee_Number],
		[Worker_Phone_Number],
		[Claims_Officer_Name],
		[Date_Of_Birth],
		[Date_Of_Injury],
		[Date_Of_Notification],
		[Notification_Lag],
		[Entered_Lag],
		[Claim_Liability_Indicator_Group],
		[Investigation_Incurred],
		[Total_Paid],
		[Is_Time_Lost],
		[Claim_Closed_Flag],
		[Date_Claim_Entered],
		[Date_Claim_Closed],
		[Date_Claim_Received],
		[Date_Claim_Reopened],
		[Result_Of_Injury_Code],
		[WPI],
		[Common_Law],
		[Total_Recoveries],
		[Is_Working],
		[Physio_Paid],
		[Chiro_Paid],
		[Massage_Paid],
		[Osteopathy_Paid],
		[Acupuncture_Paid],
		[Create_Date],
		[Is_Stress],
		[Is_Inactive_Claims],
		[Is_Medically_Discharged],
		[Is_Exempt],
		[Is_Reactive],
		[Is_Medical_Only],
		[Is_D_D],
		[NCMM_Actions_This_Week],
		[NCMM_Actions_Next_Week],
		[HoursPerWeek],
		[Is_Industrial_Deafness],
		[Rehab_Paid],
		[Action_Required],
		[RTW_Impacting],
		[Weeks_In],
		[Weeks_Band],
		[Hindsight],
		[Active_Weekly],
		[Active_Medical],
		[Cost_Code],
		[Cost_Code2],
		[CC_Injury],
		[CC_Current],
		[Med_Cert_Status_Next_Week],
		[Capacity],
		[Entitlement_Weeks],
		[Med_Cert_Status_Prev_1_Week],
		[Med_Cert_Status_Prev_2_Week],
		[Med_Cert_Status_Prev_3_Week],
		[Med_Cert_Status_Prev_4_Week],
		[Is_Last_Month]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
		
	--- HEM ---
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_Portfolio_RAW_Data') 
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_Portfolio_RAW_Data] ON [dbo].[HEM_Portfolio] 
		(
			[Reporting_Date] ASC,
			[Med_Cert_Status_This_Week] ASC,
			[Id] ASC,
			[Team] ASC,
			[Case_Manager] ASC,
			[EMPL_SIZE] ASC,
			[Account_Manager] ASC
		)
		INCLUDE ([Policy_No],
		[Portfolio],
		[Claim_No],
		[WIC_Code],
		[Company_Name],
		[Worker_Name],
		[Employee_Number],
		[Worker_Phone_Number],
		[Claims_Officer_Name],
		[Date_Of_Birth],
		[Date_Of_Injury],
		[Date_Of_Notification],
		[Notification_Lag],
		[Entered_Lag],
		[Claim_Liability_Indicator_Group],
		[Investigation_Incurred],
		[Total_Paid],
		[Is_Time_Lost],
		[Claim_Closed_Flag],
		[Date_Claim_Entered],
		[Date_Claim_Closed],
		[Date_Claim_Received],
		[Date_Claim_Reopened],
		[Result_Of_Injury_Code],
		[WPI],
		[Common_Law],
		[Total_Recoveries],
		[Is_Working],
		[Physio_Paid],
		[Chiro_Paid],
		[Massage_Paid],
		[Osteopathy_Paid],
		[Acupuncture_Paid],
		[Create_Date],
		[Is_Stress],
		[Is_Inactive_Claims],
		[Is_Medically_Discharged],
		[Is_Exempt],
		[Is_Reactive],
		[Is_Medical_Only],
		[Is_D_D],
		[NCMM_Actions_This_Week],
		[NCMM_Actions_Next_Week],
		[HoursPerWeek],
		[Is_Industrial_Deafness],
		[Rehab_Paid],
		[Action_Required],
		[RTW_Impacting],
		[Weeks_In],
		[Weeks_Band],
		[Hindsight],
		[Active_Weekly],
		[Active_Medical],
		[Cost_Code],
		[Cost_Code2],
		[CC_Injury],
		[CC_Current],
		[Med_Cert_Status_Next_Week],
		[Capacity],
		[Entitlement_Weeks],
		[Med_Cert_Status_Prev_1_Week],
		[Med_Cert_Status_Prev_2_Week],
		[Med_Cert_Status_Prev_3_Week],
		[Med_Cert_Status_Prev_4_Week],
		[Is_Last_Month]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	-------------------------------------- RTW INDEXES --------------------------------------
	--- EML ---
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_RTW_RE_RS_Measure') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_EML_RTW_RE_RS_Measure] ON [dbo].[EML_RTW] 
		(
			[Remuneration_End] ASC,
			[Remuneration_Start] ASC,
			[Measure] ASC
		)
		INCLUDE ( [LT],
		[WGT]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_RTW_RE_RS_Measure_Include_Team') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_EML_RTW_RE_RS_Measure_Include_Team] ON [dbo].[EML_RTW] 
		(
			[Remuneration_End] ASC,
			[Remuneration_Start] ASC,
			[Measure] ASC
		)
		INCLUDE ( [Team],
		[LT],
		[WGT]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_RTW_RE_RS_Measure_EMPL') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_EML_RTW_RE_RS_Measure_EMPL] ON [dbo].[EML_RTW] 
		(
			[Remuneration_End] ASC,
			[Remuneration_Start] ASC,
			[Measure] ASC,
			[EMPL_SIZE] ASC
		)
		INCLUDE ( [LT],
		[WGT]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_RTW_RE_RS_Measure_Acc') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_EML_RTW_RE_RS_Measure_Acc] ON [dbo].[EML_RTW] 
		(
			[Remuneration_End] ASC,
			[Remuneration_Start] ASC,
			[Measure] ASC,
			[Account_Manager] ASC
		)
		INCLUDE ( [LT],
		[WGT]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_RTW_RE_RS_Id_Measure_Team_EMPL_Acc') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_EML_RTW_RE_RS_Id_Measure_Team_EMPL_Acc] ON [dbo].[EML_RTW] 
		(
			[Remuneration_End] ASC,
			[Remuneration_Start] ASC,
			[Id] ASC,
			[Measure] ASC,
			[Team] ASC,
			[EMPL_SIZE] ASC,
			[Account_Manager] ASC
		)
		INCLUDE ( [LT],
		[WGT]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	--- TMF ---
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_TMF_RTW_RE_POLICY_NO_RS_Measure') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_TMF_RTW_RE_POLICY_NO_RS_Measure] ON [dbo].[TMF_RTW] 
		(
			[Remuneration_End] ASC,
			[POLICY_NO] ASC,
			[Remuneration_Start] ASC,
			[Measure] ASC
		)
		INCLUDE ( [LT],[WGT]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_TMF_RTW_RE_Id_POLICY_NO_RS_Measure_Team') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_TMF_RTW_RE_Id_POLICY_NO_RS_Measure_Team] ON [dbo].[TMF_RTW]
		(
			[Remuneration_End] ASC,
			[Id] ASC,
			[POLICY_NO] ASC,
			[Remuneration_Start] ASC,
			[Measure] ASC,
			[Team] ASC
		)
		INCLUDE ( [LT],[WGT]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
		
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_TMF_RTW_RE_Measure_RS_POLICY_NO')
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_TMF_RTW_RE_Measure_RS_POLICY_NO] ON [dbo].[TMF_RTW] 
		(
			[Remuneration_End] ASC,
			[Measure] ASC,
			[Remuneration_Start] ASC,
			[POLICY_NO] ASC
		)
		INCLUDE ( [LT],[WGT]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	--- HEM ---
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_RTW_Raw_Data')
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_RTW_Raw_Data] ON [dbo].[HEM_RTW] 
		(
			[Remuneration_End] ASC,
			[Id] ASC
		)
		INCLUDE ( [Remuneration_Start],
		[Team],
		[Case_manager],
		[Claim_no],
		[DTE_OF_INJURY],
		[POLICY_NO],
		[LT],
		[WGT],
		[EMPL_SIZE],
		[Weeks_paid],
		[Measure],
		[Cert_Type],
		[Med_cert_From],
		[Med_cert_To],
		[Account_Manager],
		[Cell_no],
		[Portfolio],
		[Stress],
		[Liability_Status],
		[cost_code],
		[cost_code2],
		[Claim_Closed_flag]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_RTW_RE') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_RTW_RE] ON [dbo].[HEM_RTW] 
		(
			[Remuneration_End] ASC
		)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_RTW_RE_RS_Measure') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_RTW_RE_RS_Measure] ON [dbo].[HEM_RTW] 
		(
			[Remuneration_End] ASC,
			[Remuneration_Start] ASC,
			[Measure] ASC
		)
		INCLUDE ( [LT],[WGT]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_RTW_RE_RS_Measure_Include_Team') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_RTW_RE_RS_Measure_Include_Team] ON [dbo].[HEM_RTW] 
		(
			[Remuneration_End] ASC,
			[Remuneration_Start] ASC,
			[Measure] ASC
		)
		INCLUDE ( [Team],
		[LT],
		[WGT]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_RTW_RE_RS_Measure_Acc') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_RTW_RE_RS_Measure_Acc] ON [dbo].[HEM_RTW] 
		(
			[Remuneration_End] ASC,
			[Remuneration_Start] ASC,
			[Measure] ASC,
			[Account_Manager] ASC
		)
		INCLUDE ( [LT],[WGT]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
		
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_RTW_RE_RS_Measure_Port') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_RTW_RE_RS_Measure_Port] ON [dbo].[HEM_RTW] 
		(
			[Remuneration_End] ASC,
			[Remuneration_Start] ASC,
			[Measure] ASC,
			[Portfolio] ASC
		)
		INCLUDE ( [LT],[WGT]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_RTW_RE_RS_Measure_Acc_EMPL') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_RTW_RE_RS_Measure_Acc_EMPL] ON [dbo].[HEM_RTW] 
		(
			[Remuneration_End] ASC,
			[Remuneration_Start] ASC,
			[Measure] ASC,
			[Account_Manager] ASC,
			[EMPL_SIZE] ASC
		)
		INCLUDE ( [LT],
		[WGT]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_RTW_RE_RS_Measure_Port_EMPL') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_RTW_RE_RS_Measure_Port_EMPL] ON [dbo].[HEM_RTW] 
		(
			[Remuneration_End] ASC,
			[Remuneration_Start] ASC,
			[Measure] ASC,
			[Portfolio] ASC,
			[EMPL_SIZE] ASC
		)
		INCLUDE ( [LT],
		[WGT]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	-------------------------------------- AWC INDEXES --------------------------------------
	--- EML ---
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_AWC_Claim_no_Time_ID') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_EML_AWC_Claim_no_Time_ID] ON [dbo].[EML_AWC] 
		(
			[Claim_no] ASC,
			[Time_ID] ASC
		)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_AWC_Team') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_EML_AWC_Team] ON [dbo].[EML_AWC] 
		(
			[Team] ASC
		)
		INCLUDE ( [EMPL_SIZE],
		[Account_Manager]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_AWC_Time_ID') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_EML_AWC_Time_ID] ON [dbo].[EML_AWC] 
		(
			[Time_ID] ASC
		)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_AWC_Claim_no_Time_ID_Acc') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_EML_AWC_Claim_no_Time_ID_Acc] ON [dbo].[EML_AWC] 
		(
			[Claim_no] ASC,
			[Time_ID] ASC,
			[Account_Manager] ASC
		)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_AWC_Time_ID_Team_Claim_no') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_EML_AWC_Time_ID_Team_Claim_no] ON [dbo].[EML_AWC] 
		(
			[Time_ID] ASC,
			[Team] ASC,
			[Claim_no] ASC
		)
		INCLUDE ( [Date_of_Injury]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_AWC_Time_ID_Claim_no_Include_EMPL')
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_EML_AWC_Time_ID_Claim_no_Include_EMPL] ON [dbo].[EML_AWC] 
		(
			[Time_ID] ASC,
			[Claim_no] ASC
		)
		INCLUDE ( [Date_of_Injury],
		[EMPL_SIZE]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_AWC_Time_ID_Claim_no_Include_Team')
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_EML_AWC_Time_ID_Claim_no_Include_Team] ON [dbo].[EML_AWC] 
		(
			[Time_ID] ASC,
			[Claim_no] ASC
		)
		INCLUDE ( [Team]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_AWC_Time_ID_Claim_no_Acc') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_EML_AWC_Time_ID_Claim_no_Acc] ON [dbo].[EML_AWC] 
		(
			[Time_ID] ASC,
			[Claim_no] ASC,
			[Account_Manager] ASC
		)
		INCLUDE ( [Date_of_Injury]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_AWC_Time_ID_Claim_no_Team_Acc') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_EML_AWC_Time_ID_Claim_no_Team_Acc] ON [dbo].[EML_AWC] 
		(
			[Time_ID] ASC,
			[Claim_no] ASC,
			[Team] ASC,
			[Account_Manager] ASC
		)
		INCLUDE ( [Date_of_Injury],
		[EMPL_SIZE]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_AWC_Acc_Time_ID_Claim_no_Team') 	
	BEGIN	
		CREATE NONCLUSTERED INDEX [idx_EML_AWC_Acc_Time_ID_Claim_no_Team] ON [dbo].[EML_AWC] 
		(
			[Account_Manager] ASC,
			[Time_ID] ASC,
			[Claim_no] ASC,
			[Team] ASC
		)
		INCLUDE ( [Date_of_Injury],
		[EMPL_SIZE]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_AWC_Team_Time_ID_Claim_no_Acc') 	
	BEGIN	
		CREATE NONCLUSTERED INDEX [idx_EML_AWC_Team_Time_ID_Claim_no_Acc] ON [dbo].[EML_AWC] 
		(
			[Team] ASC,
			[Time_ID] ASC,
			[Claim_no] ASC,
			[Account_Manager] ASC
		)
		INCLUDE ( [Date_of_Injury],
		[EMPL_SIZE]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_EML_AWC_Projections_Unit_Type_Type') 	
	BEGIN	
		CREATE NONCLUSTERED INDEX [idx_EML_AWC_Projections_Unit_Type_Type] ON [dbo].[EML_AWC_Projections] 
		(
			[Unit_Type] ASC,
			[Type] ASC
		)
		INCLUDE ( [Unit_Name],
		[Time_Id],
		[Projection]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
		
	--- TMF ---
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_TMF_AWC_POLICY_NO_Team')
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_TMF_AWC_POLICY_NO_Team] ON [dbo].[TMF_AWC] 
		(
			[POLICY_NO] ASC,
			Team ASC
		)
		WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_TMF_AWC_Time_ID')
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_TMF_AWC_Time_ID] ON [dbo].[TMF_AWC]
		(
			[Time_ID] ASC
		)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_TMF_AWC_Claim_no_Time_ID_Team')
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_TMF_AWC_Claim_no_Time_ID_Team] ON [dbo].[TMF_AWC]
		(
			[Claim_no] ASC,
			[Time_ID] ASC,
			Team ASC
		)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_TMF_AWC_Claim_no_Time_ID')
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_TMF_AWC_Claim_no_Time_ID] ON [dbo].[TMF_AWC] 
		(
			[Claim_no] ASC,
			[Time_ID] ASC
		)
		INCLUDE ( Team,[Date_of_Injury],POLICY_NO) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_TMF_AWC_Time_ID_Claim_no_Team')
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_TMF_AWC_Time_ID_Claim_no_Team] ON [dbo].[TMF_AWC]
		(
			[Time_ID] ASC,
			[Claim_no] ASC,
			[Team] ASC
		)
		INCLUDE ( [Date_of_Injury]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_TMF_AWC_Time_ID_POLICY_NO_Claim_no')
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_TMF_AWC_Time_ID_POLICY_NO_Claim_no] ON [dbo].[TMF_AWC] 
		(
			[Time_ID] ASC,
			[POLICY_NO] ASC,
			[Claim_no] ASC
		)
		INCLUDE ( [Date_of_Injury]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_TMF_AWC_Projections_Type_Unit_Type')
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_TMF_AWC_Projections_Type_Unit_Type] ON [dbo].[TMF_AWC_Projections] 
		(
			[Type] ASC,
			[Unit_Type] ASC
		)
		INCLUDE ( [Unit_Name],
		[Time_Id],
		[Projection]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_TMF_AWC_Projections_Unit_Type_Type')
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_TMF_AWC_Projections_Unit_Type_Type] ON [dbo].[TMF_AWC_Projections] 
		(
			[Unit_Type] ASC,
			[Type] ASC
		)
		INCLUDE ( [Unit_Name],
		[Time_Id],
		[Projection]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	--- HEM ---
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_AWC_Claim_no_Time_ID')
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_AWC_Claim_no_Time_ID] ON [dbo].[HEM_AWC] 
		(
			[Claim_no] ASC,
			[Time_ID] ASC
		)
		INCLUDE ( [Date_of_Injury],
		[Account_Manager]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_AWC_Claim_no_Time_ID_Acc') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_AWC_Claim_no_Time_ID_Acc] ON [dbo].[HEM_AWC] 
		(
			[Claim_no] ASC,
			[Time_ID] ASC,
			[Account_Manager] ASC
		)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_AWC_Claim_no_Team_Time_ID') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_AWC_Claim_no_Team_Time_ID] ON [dbo].[HEM_AWC] 
		(
			[Claim_no] ASC,
			[Team] ASC,
			[Time_ID] ASC
		)
		INCLUDE ( [Date_of_Injury]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_AWC_Claim_no_Port_Time_ID') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_AWC_Claim_no_Port_Time_ID] ON [dbo].[HEM_AWC] 
		(
			[Claim_no] ASC,
			[Portfolio] ASC,
			[Time_ID] ASC
		)
		INCLUDE ( [Date_of_Injury]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_AWC_Claim_no_Port_Time_ID_Include_EMPL') 
	BEGIN	
		CREATE NONCLUSTERED INDEX [idx_HEM_AWC_Claim_no_Port_Time_ID_Include_EMPL] ON [dbo].[HEM_AWC] 
		(
			[Claim_no] ASC,
			[Portfolio] ASC,
			[Time_ID] ASC
		)
		INCLUDE ( [Date_of_Injury],
		[EMPL_SIZE]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_AWC_Team') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_AWC_Team] ON [dbo].[HEM_AWC] 
		(
			[Team] ASC
		)
		INCLUDE ( [EMPL_SIZE],
		[Account_Manager],
		[Portfolio]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_AWC_Time_ID')
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_AWC_Time_ID] ON [dbo].[HEM_AWC] 
		(
			[Time_ID] ASC
		)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_AWC_Time_ID_Claim_no_Acc') 	
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_AWC_Time_ID_Claim_no_Acc] ON [dbo].[HEM_AWC] 
		(
			[Time_ID] ASC,
			[Claim_no] ASC,
			[Account_Manager] ASC
		)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_AWC_Time_ID_Claim_no_Acc_Include') 
	BEGIN	
		CREATE NONCLUSTERED INDEX [idx_HEM_AWC_Time_ID_Claim_no_Acc_Include] ON [dbo].[HEM_AWC] 
		(
			[Time_ID] ASC,
			[Claim_no] ASC,
			[Account_Manager] ASC
		)
		INCLUDE ( [Date_of_Injury]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_AWC_Time_ID_Claim_no_Port') 	
	BEGIN	
		CREATE NONCLUSTERED INDEX [idx_HEM_AWC_Time_ID_Claim_no_Port] ON [dbo].[HEM_AWC] 
		(
			[Time_ID] ASC,
			[Claim_no] ASC,
			[Portfolio] ASC
		)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_AWC_Time_ID_Claim_no_Port_Include_EMPL') 
	BEGIN	
		CREATE NONCLUSTERED INDEX [idx_HEM_AWC_Time_ID_Claim_no_Port_Include_EMPL] ON [dbo].[HEM_AWC] 
		(
			[Time_ID] ASC,
			[Claim_no] ASC,
			[Portfolio] ASC
		)
		INCLUDE ( [Date_of_Injury],
		[EMPL_SIZE]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_AWC_Claim_no_Acc_Time_ID') 
	BEGIN	
		CREATE NONCLUSTERED INDEX [idx_HEM_AWC_Claim_no_Acc_Time_ID] ON [dbo].[HEM_AWC] 
		(
			[Claim_no] ASC,
			[Account_Manager] ASC,
			[Time_ID] ASC
		)
		INCLUDE ( [Date_of_Injury],
		[EMPL_SIZE]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_AWC_Acc_Time_ID_Claim_no_Team_Port') 
	BEGIN	
		CREATE NONCLUSTERED INDEX [idx_HEM_AWC_Acc_Time_ID_Claim_no_Team_Port] ON [dbo].[HEM_AWC] 
		(
			[Account_Manager] ASC,
			[Time_ID] ASC,
			[Claim_no] ASC,
			[Team] ASC,
			[Portfolio] ASC
		)
		INCLUDE ( [Date_of_Injury],
		[EMPL_SIZE]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_AWC_Claim_no_Time_ID_Port_Team_Acc') 
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_AWC_Claim_no_Time_ID_Port_Team_Acc] ON [dbo].[HEM_AWC]
		(
			[Claim_no] ASC,
			[Time_ID] ASC,
			[Portfolio] ASC,
			[Team] ASC,
			[Account_Manager] ASC
		)
		INCLUDE ( [Date_of_Injury],
		[EMPL_SIZE]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
	
	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_AWC_Team_Time_ID_Claim_no_Acc_Port') 
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_AWC_Team_Time_ID_Claim_no_Acc_Port] ON [dbo].[HEM_AWC] 
		(
			[Team] ASC,
			[Time_ID] ASC,
			[Claim_no] ASC,
			[Account_Manager] ASC,
			[Portfolio] ASC
		)
		INCLUDE ( [Date_of_Injury],
		[EMPL_SIZE]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END

	IF NOT EXISTS (SELECT name FROM sys.indexes  WHERE name = N'idx_HEM_AWC_Port_Time_ID_Claim_no_Team_Acc') 
	BEGIN
		CREATE NONCLUSTERED INDEX [idx_HEM_AWC_Port_Time_ID_Claim_no_Team_Acc] ON [dbo].[HEM_AWC] 
		(
			[Portfolio] ASC,
			[Time_ID] ASC,
			[Claim_no] ASC,
			[Team] ASC,
			[Account_Manager] ASC
		)
		INCLUDE ( [Date_of_Injury],
		[EMPL_SIZE]) WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
	END
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

EXEC [dbo].[usp_DART_Index]--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_DART_Index.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_Dashboard_EML_RTW_AddTargetAndBase_GenerateData.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================
-- execute [usp_Dashboard_EML_RTW_AddTargetAndBase] 2013, 2
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[usp_Dashboard_EML_RTW_AddTargetAndBase_GenerateData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE [dbo].[usp_Dashboard_EML_RTW_AddTargetAndBase_GenerateData]
GO

CREATE PROCEDURE [dbo].[usp_Dashboard_EML_RTW_AddTargetAndBase_GenerateData]

AS
BEGIN
	DELETE FROM [dbo].[EML_RTW_Target_Base]
	DBCC CHECKIDENT('EML_RTW_Target_Base', RESEED, 0)
	
	INSERT INTO [EML_RTW_Target_Base]([Type], [Value], [Sub_Value], 
				[Measure], [Target], [Base],[Create_Date],Remuneration)
	
	-- EML --
	SELECT [Type] = ''
		   ,[Value] = 'EML'
		   ,[Sub_Value] = NULL
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))
		 			   FROM EML_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							)
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))*1.15
						FROM EML_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							)					
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select [Value]='') as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp
		
	-- Group --
	UNION ALL
	SELECT [Type] = 'group'
		   ,[Value] = tmp.[group] 
		   ,[Sub_Value] = NULL
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))
		 			   FROM EML_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.[group]) =RTRIM([group]))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))*1.15
						FROM EML_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.[group]) =RTRIM([group]))					
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select distinct dbo.udf_EML_GetGroupByTeam(Team) as [group] from EML_RTW) as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp
		
	-- Employer size --
	UNION ALL
	SELECT [Type] = 'employer_size'
		   ,[Value] = tmp.EMPL_SIZE
		   ,[Sub_Value] = NULL
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))
		 			   FROM EML_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.EMPL_SIZE) =RTRIM(EMPL_SIZE))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))*1.15
						FROM EML_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.EMPL_SIZE) =RTRIM(EMPL_SIZE))					
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select distinct  [EMPL_SIZE] from EML_RTW) as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp
	
	-- Account manager --
	UNION ALL
	SELECT [Type] = 'account_manager'
		   ,[Value] = tmp.[Account_Manager] 
		   ,[Sub_Value] = NULL
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))
		 			   FROM EML_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.[Account_Manager]) =RTRIM([Account_Manager]))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))*1.15
						FROM EML_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.[Account_Manager]) =RTRIM([Account_Manager]))					
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select distinct  [Account_Manager] from EML_RTW) as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp
		
	-- Group -> Team --
	UNION ALL
	SELECT [Type] = 'group'
		   ,[Value] = tmp.[group] 
		   ,[Sub_Value] = tmp.Team
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))
		 			   FROM EML_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.[group]) =RTRIM([group])
							AND RTRIM(tmp.[Team]) =RTRIM([Team]))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))*1.15
						FROM EML_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.[group]) =RTRIM([group])
							AND RTRIM(tmp.[Team]) =RTRIM([Team]))					
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select distinct dbo.udf_EML_GetGroupByTeam(Team) as [group],[Team] from EML_RTW) as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp

	-- Account manager -> Employer size --
	UNION ALL
	SELECT [Type] = 'account_manager'
		   ,[Value] = tmp.Account_Manager 
		   ,[Sub_Value] = tmp.EMPL_SIZE
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))
		 			   FROM EML_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.Account_Manager) =RTRIM(Account_Manager)
							AND RTRIM(tmp.EMPL_SIZE) =RTRIM(EMPL_SIZE))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))*1.15
						FROM EML_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.Account_Manager) =RTRIM(Account_Manager)
							AND RTRIM(tmp.EMPL_SIZE) =RTRIM(EMPL_SIZE))
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select distinct  [Account_Manager],[EMPL_SIZE] from EML_RTW) as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp
END


GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_Dashboard_EML_RTW_AddTargetAndBase_GenerateData.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_Dashboard_HEM_RTW_AddTargetAndBase_GenerateData.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================
-- execute [usp_Dashboard_HEM_RTW_AddTargetAndBase] 2013, 2
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[usp_Dashboard_HEM_RTW_AddTargetAndBase_GenerateData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE [dbo].[usp_Dashboard_HEM_RTW_AddTargetAndBase_GenerateData]
GO

CREATE PROCEDURE [dbo].[usp_Dashboard_HEM_RTW_AddTargetAndBase_GenerateData]

AS
BEGIN
	DELETE FROM [dbo].[HEM_RTW_Target_Base]
	DBCC CHECKIDENT('HEM_RTW_Target_Base', RESEED, 0)
	
	INSERT INTO [HEM_RTW_Target_Base]([Type], [Value], [Sub_Value], 
				[Measure], [Target], [Base],[Create_Date],Remuneration)
	
	-- HEM --
	SELECT [Type] = ''
		   ,[Value] = 'Hospitality'
		   ,[Sub_Value] = NULL
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))
		 			   FROM HEM_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							)
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))*1.15
						FROM HEM_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							)					
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select [Value]='') as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp

	-- Group --
	UNION ALL
	SELECT [Type] = 'group'
		   ,[Value] = tmp.[group] 
		   ,[Sub_Value] = NULL
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))
		 			   FROM HEM_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.[group]) =RTRIM([group]))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))*1.15
						FROM HEM_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.[group]) =RTRIM([group]))					
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select distinct dbo.udf_HEM_GetGroupByTeam(Team) as [group] from HEM_RTW) as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp
		
	-- Portfolio --
	UNION ALL
	SELECT [Type] = 'portfolio'
		   ,[Value] = tmp.Portfolio 
		   ,[Sub_Value] = NULL
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))
		 			   FROM HEM_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.Portfolio) =RTRIM(Portfolio))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))*1.15
						FROM HEM_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.Portfolio) =RTRIM(Portfolio))
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select distinct  [Portfolio] from HEM_RTW) as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp
		
	-- Portfolio: Hotel Summary --
	UNION ALL
	SELECT [Type] = 'portfolio'
		   ,[Value] = 'Hotel'
		   ,[Sub_Value] = NULL
		   ,[Measure]= tmp.measure
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))
		 			   FROM HEM_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(Portfolio) in ('Accommodation','Pubs, Taverns and Bars'))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))*1.15
						FROM HEM_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(Portfolio) in ('Accommodation','Pubs, Taverns and Bars'))
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select [Portfolio] = 'Hotel') as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp
		
	-- Account Manager --
	UNION ALL
	SELECT [Type] = 'account_manager'
		   ,[Value] = tmp.Account_Manager 
		   ,[Sub_Value] = NULL
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))
		 			   FROM HEM_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.Account_Manager) =RTRIM(Account_Manager))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))*1.15
						FROM HEM_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.Account_Manager) =RTRIM(Account_Manager))
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select distinct  [Account_Manager] from HEM_RTW) as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp

	-- Group -> Team --
	UNION ALL
	SELECT [Type] = 'group'
		   ,[Value] = tmp.[group]
		   ,[Sub_Value] = tmp.Team
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))
		 			   FROM HEM_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.[group]) =RTRIM([group])
							AND RTRIM(tmp.[Team]) =RTRIM([Team]))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))*1.15
						FROM HEM_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.[group]) =RTRIM([group])
							AND RTRIM(tmp.[Team]) =RTRIM([Team]))					
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select distinct dbo.udf_HEM_GetGroupByTeam(Team) as [group],[Team] from HEM_RTW) as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp

	-- Portfolio - Employer Size --
	UNION ALL
	SELECT [Type] = 'portfolio'
		   ,[Value] = tmp.Portfolio 
		   ,[Sub_Value] = tmp.EMPL_SIZE
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))
		 			   FROM HEM_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.Portfolio) =RTRIM(Portfolio)
							AND RTRIM(tmp.EMPL_SIZE) =RTRIM(EMPL_SIZE))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))*1.15
						FROM HEM_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.Portfolio) =RTRIM(Portfolio)
							AND RTRIM(tmp.EMPL_SIZE) =RTRIM(EMPL_SIZE))
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar)
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select distinct  [Portfolio],[EMPL_SIZE] from HEM_RTW) as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp
		
	--Account Manager - Employer Size--
	UNION ALL
	SELECT [Type] = 'account_manager'
		   ,[Value] = tmp.Account_Manager 
		   ,[Sub_Value] = tmp.EMPL_SIZE
		   ,[Measure]= tmp.measure
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))
		 			   FROM HEM_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.Account_Manager) =RTRIM(Account_Manager)
							AND RTRIM(tmp.EMPL_SIZE) =RTRIM(EMPL_SIZE))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(tmp.Remuneration) -1 as varchar(10)) +'/06/30',tmp.Remuneration)) as float)/18))*1.15
						FROM HEM_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(tmp.Remuneration) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.Account_Manager) =RTRIM(Account_Manager)
							AND RTRIM(tmp.EMPL_SIZE) =RTRIM(EMPL_SIZE))
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select distinct  [Account_Manager],[EMPL_SIZE] from HEM_RTW) as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp
END


GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO
--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_Dashboard_HEM_RTW_AddTargetAndBase_GenerateData.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_Dashboard_TMF_RTW_AddTargetAndBase_GenerateData.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================
-- execute [usp_Dashboard_TMF_RTW_AddTargetAndBase] 2013, 2
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[usp_Dashboard_TMF_RTW_AddTargetAndBase_GenerateData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE [dbo].[usp_Dashboard_TMF_RTW_AddTargetAndBase_GenerateData]
GO

CREATE PROCEDURE [dbo].[usp_Dashboard_TMF_RTW_AddTargetAndBase_GenerateData]

AS
BEGIN
	DELETE FROM [dbo].[TMF_RTW_Target_Base]
	DBCC CHECKIDENT('TMF_RTW_Target_Base', RESEED, 0)
	INSERT INTO [TMF_RTW_Target_Base]([Type], [Value], [Sub_Value], 
				[Measure], [Target], [Base],[Create_Date],Remuneration)
	
	--TMF--
	SELECT [Type] = ''
		   ,[Value] = 'TMF'
		   ,[Sub_Value] = NULL
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/06/30',DATEADD(mm,-3,tmp.Remuneration))) as float)/18))
		 			   FROM TMF_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							)
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/06/30',DATEADD(mm,-3,tmp.Remuneration))) as float)/18))*1.15
						FROM TMF_RTW
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							)					
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select [Value]='') as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp
		
	--Agency--
	UNION ALL
	SELECT [Type] = 'agency'
		   ,[Value] = tmp.agencyname 
		   ,[Sub_Value] = NULL
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/06/30',DATEADD(mm,-3,tmp.Remuneration))) as float)/18))
		 			   FROM TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.agencyname) = rtrim(isnull(sub.AgencyName,'Miscellaneous')))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/06/30',DATEADD(mm,-3,tmp.Remuneration))) as float)/18))*1.15
						FROM TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.agencyname) = rtrim(isnull(sub.AgencyName,'Miscellaneous')))					
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select distinct rtrim(isnull(sub.AgencyName,'Miscellaneous')) as agencyname from TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO) as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp
		
	--Agency Police & Fire
	UNION ALL
	SELECT [Type] = 'agency'
		   ,[Value] = 'Police & Fire'
		   ,[Sub_Value] = NULL
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/06/30',DATEADD(mm,-3,tmp.Remuneration))) as float)/18))
		 			   FROM TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Police','Fire'))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/06/30',DATEADD(mm,-3,tmp.Remuneration))) as float)/18))*1.15
						FROM TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Police','Fire'))
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select [agencyname] = 'Police & Fire') as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp
		
	--Agency Health & Other
	UNION ALL
	SELECT [Type] = 'agency'
		   ,[Value] = 'Health & Other'
		   ,[Sub_Value] = NULL
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/06/30',DATEADD(mm,-3,tmp.Remuneration))) as float)/18))
		 			   FROM TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Health','Other'))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/06/30',DATEADD(mm,-3,tmp.Remuneration))) as float)/18))*1.15
						FROM TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							and rtrim(isnull(sub.AgencyName,'Miscellaneous')) in ('Health','Other'))
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select [agencyname] = 'Health & Other') as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp

	--Group--
	UNION ALL
	SELECT [Type] = 'group'
		   ,[Value] = tmp.[group] 
		   ,[Sub_Value] = NULL
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/06/30',DATEADD(mm,-3,tmp.Remuneration))) as float)/18))
		 			   FROM TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.[group]) = rtrim(isnull(sub.[Group],'Miscellaneous')))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/06/30',DATEADD(mm,-3,tmp.Remuneration))) as float)/18))*1.15
						FROM TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.[group]) = rtrim(isnull(sub.[Group],'Miscellaneous')))					
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select distinct rtrim(isnull(sub.[Group],'Miscellaneous')) as [group] from TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO) as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp

	--Team--
	UNION ALL
	SELECT [Type] = 'group'
		   ,[Value] = tmp.[group] 
		   ,[Sub_Value] = Team
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/06/30',DATEADD(mm,-3,tmp.Remuneration))) as float)/18))
		 			   FROM TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.[group]) = rtrim(isnull(sub.[Group],'Miscellaneous'))
							AND RTRIM(tmp.[Team]) =RTRIM([Team]))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/06/30',DATEADD(mm,-3,tmp.Remuneration))) as float)/18))*1.15
						FROM TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.[group]) = rtrim(isnull(sub.[Group],'Miscellaneous'))
							AND RTRIM(tmp.[Team]) =RTRIM([Team]))					
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select distinct rtrim(isnull(sub.[Group],'Miscellaneous')) as [group],[Team] from TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO) as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp

	--Sub cagetory--
	UNION ALL
	SELECT [Type] = 'agency'
		   ,[Value] = tmp.agencyname 
		   ,[Sub_Value] = tmp.Sub_Category
		   ,[Measure]= tmp.measure 	   
		   ,[Target] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
		 					 * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/06/30',DATEADD(mm,-3,tmp.Remuneration))) as float)/18))
		 			   FROM TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.agencyname) = rtrim(isnull(sub.AgencyName,'Miscellaneous'))
							AND RTRIM(tmp.sub_category) = rtrim(isnull(sub.Sub_Category,'Miscellaneous')))
		   ,[Base] = (select ISNULL(SUM(LT) / nullif(SUM(WGT),0),0) 
					   * POWER(CAST(0.9 as float), (CAST((DATEDIFF(mm,cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/06/30',DATEADD(mm,-3,tmp.Remuneration))) as float)/18))*1.15
						FROM TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO
					   WHERE Measure=tmp.Measure								 
							AND Remuneration_End = cast(year(DATEADD(mm,-3,tmp.Remuneration)) -1 as varchar(10)) +'/09/30 23:59:00.000'
							AND DATEDIFF(MM, Remuneration_Start, Remuneration_End) =11
							AND RTRIM(tmp.agencyname) = rtrim(isnull(sub.AgencyName,'Miscellaneous'))
							AND RTRIM(tmp.sub_category) = rtrim(isnull(sub.Sub_Category,'Miscellaneous')))					
		   ,Create_Date = GETDATE()
		   ,Remuneration = cast(year(tmp.Remuneration) AS varchar) 
		  + 'M' + CASE WHEN MONTH(tmp.Remuneration) <= 9 THEN '0' ELSE '' END 
		  + cast(month(tmp.Remuneration) AS varchar)
	FROM 
	(select * from 
		(SELECT   Remuneration = dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59'
			FROM          master.dbo.spt_values t1
			WHERE      'P' = type 
			AND dateadd(dd, - 1, DateAdd(m, number, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) - 23, 0))) + '23:59' 
			<= cast(year(getdate()) as  varchar(10)) + '-12-31 ' + '23:59') as t1
	CROSS JOIN

	(select distinct rtrim(isnull(sub.AgencyName,'Miscellaneous')) as agencyname, rtrim(isnull(sub.Sub_Category,'Miscellaneous')) as sub_category from TMF_RTW uv left join TMF_Agencies_Sub_Category sub on uv.POLICY_NO = sub.POLICY_NO) as t2

	CROSS JOIN

	(select 13 as Measure
		union select 26 as Measure
		union select 52 as Measure
		union select 78 as Measure
		union select 104 as Measure	) as t3) as tmp

END


GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON

GO

--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_Dashboard_TMF_RTW_AddTargetAndBase_GenerateData.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_EML_CPR_Dashboard_Agency_Group.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_EML_CPR_Dashboard_Agency_Group]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_EML_CPR_Dashboard_Agency_Group]
GO

CREATE PROCEDURE [dbo].[usp_EML_CPR_Dashboard_Agency_Group]
(
	@Start_Date datetime
	,@End_Date datetime
	,@Is_Last_Month bit
)
AS
BEGIN
	-- PREPARE DATA FOR QUERYING
	
	-- NEW CLAIMS
	SELECT *,[UnitType] = 'employer_size', weeks_since_injury = 0
	INTO #claim_new_all 
		FROM [dbo].[udf_CPR_Overall]('EML', 'employer_size', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	UNION ALL
	SELECT *,[UnitType] = 'account_manager', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('EML', 'account_manager', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	
	-- CLAIM CLOSURES
	SELECT *,[UnitType] = 'employer_size', weeks_since_injury = 0
	INTO #claim_closure 
		FROM [dbo].[udf_CPR_Overall]('EML', 'employer_size', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	UNION ALL
	SELECT *,[UnitType] = 'account_manager', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('EML', 'account_manager', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	
	-- REOPEN CLAIMS
	SELECT *,[UnitType] = 'employer_size', weeks_since_injury = 0
	INTO #claim_re_open 
		FROM [dbo].[udf_CPR_Overall]('EML', 'employer_size', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
	UNION ALL
	SELECT *,[UnitType] = 'account_manager', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('EML', 'account_manager', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
		
	-- REOPEN CLAIMS: STILL OPEN
	SELECT *,[UnitType] = 'employer_size', weeks_since_injury = 0
	INTO #claim_re_open_still_open 
		FROM [dbo].[udf_CPR_Overall]('EML', 'employer_size', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	UNION ALL
	SELECT *,[UnitType] = 'account_manager', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('EML', 'account_manager', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	
	-- OPEN CLAIMS
	SELECT *,[UnitType] = 'employer_size', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
	INTO #claim_open_all
		FROM [dbo].[udf_CPR_Overall]('EML', 'employer_size', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
		FROM [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	UNION ALL
	SELECT *,[UnitType] = 'account_manager', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
		FROM [dbo].[udf_CPR_Overall]('EML', 'account_manager', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	
	SELECT *
	INTO #claim_all
	FROM (select *,claim_type='claim_new_all' from #claim_new_all
			   union all select *,claim_type='claim_new_nlt' from #claim_new_all where is_Time_Lost=0
			   union all select *,claim_type='claim_new_lt' from #claim_new_all where is_Time_Lost=1
			   union all select *,claim_type='claim_closure' from #claim_closure
			   union all select *,claim_type='claim_re_open' from #claim_re_open
			   union all select *,claim_type='claim_still_open' from #claim_re_open_still_open
			   union all select *,claim_type='claim_open_all' from #claim_open_all
			   union all select *,claim_type='claim_open_nlt' from #claim_open_all where is_Time_Lost=0
			   union all select *,claim_type='claim_open_0_13' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 13
			   union all select *,claim_type='claim_open_13_26' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 13 and weeks_since_injury <= 26
			   union all select *,claim_type='claim_open_26_52' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 26 and weeks_since_injury <= 52
			   union all select *,claim_type='claim_open_52_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 52 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_0_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_78_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 78 and weeks_since_injury <= 130
			   union all select *,claim_type='claim_open_gt_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 130
			   union all select *,claim_type='claim_open_ncmm_this_week' from #claim_open_all WHERE NCMM_Actions_This_Week <> ''
			   union all select *,claim_type='claim_open_ncmm_next_week' from #claim_open_all WHERE NCMM_Actions_Next_Week <> ''
			   union all select *,claim_type='claim_open_acupuncture' from #claim_open_all WHERE Acupuncture_Paid > 0
			   union all select *,claim_type='claim_open_chiro' from #claim_open_all  WHERE Chiro_Paid > 1000
			   union all select *,claim_type='claim_open_massage' from #claim_open_all  WHERE Massage_Paid > 0
			   union all select *,claim_type='claim_open_osteo' from #claim_open_all  WHERE Osteopathy_Paid > 0
			   union all select *,claim_type='claim_open_physio' from #claim_open_all  WHERE Physio_Paid > 2000
			   union all select *,claim_type='claim_open_rehab' from #claim_open_all WHERE Rehab_Paid > 0
			   union all select *,claim_type='claim_open_death' from #claim_open_all WHERE Result_Of_Injury_Code = 1
			   union all select *,claim_type='claim_open_industrial_deafness' from #claim_open_all  WHERE Is_Industrial_Deafness = 1
			   union all select *,claim_type='claim_open_ppd' from #claim_open_all  WHERE Result_Of_Injury_Code = 3
			   union all select *,claim_type='claim_open_recovery' from #claim_open_all WHERE Total_Recoveries <> 0
			   union all select *,claim_type='claim_open_wpi_all' from #claim_open_all WHERE WPI > 0
			   union all select *,claim_type='claim_open_wpi_0_10' from #claim_open_all WHERE WPI > 0 AND WPI <= 10
			   union all select *,claim_type='claim_open_wpi_11_14' from #claim_open_all WHERE WPI >= 11 AND WPI <= 14
			   union all select *,claim_type='claim_open_wpi_15_20' from #claim_open_all WHERE WPI >= 15 AND WPI <= 20
			   union all select *,claim_type='claim_open_wpi_21_30' from #claim_open_all WHERE WPI >= 21 AND WPI <= 30
			   union all select *,claim_type='claim_open_wpi_31_more' from #claim_open_all WHERE WPI >= 31
			   union all select *,claim_type='claim_open_wid' from #claim_open_all WHERE Common_Law = 1
			   ) as tmp
	
	-- drop temp tables
	DROP TABLE #claim_new_all
	DROP TABLE #claim_closure
	DROP TABLE #claim_re_open
	DROP TABLE #claim_re_open_still_open
	DROP TABLE #claim_open_all
	
	SELECT  tmp.[Value] as [Unit], tmp.[UnitType], Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType])

		,med_only = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Is_Medical_Only = 1)

		,d_d = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Is_D_D = 1)
			
		,lum_sum_in = (select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType]
			and (Total_Recoveries <> 0 or Common_Law = 1 or WPI >= 0 or Result_Of_Injury_Code = 3 or Result_Of_Injury_Code = 1 or Is_Industrial_Deafness = 1))
			
		,totally_unfit = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'TU')
			
		,ffsd_at_work_15_less = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek <= 15)
			
		,ffsd_at_work_15_more = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek > 15)
							
		,ffsd_not_at_work = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 0)
			
		,pid = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'PID')
			
		,therapy_treat=(select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType]
			and (Physio_Paid > 2000 or Chiro_Paid > 1000 or Massage_Paid > 0 or Osteopathy_Paid > 0 or Acupuncture_Paid > 0 or Rehab_Paid > 0))		
		
		,ncmm_this_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and NCMM_Actions_This_Week <> '')
			
		,ncmm_next_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and NCMM_Actions_Next_Week <> '')
	INTO #total
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct Value, [UnitType] = 'employer_size'
						from [dbo].[udf_CPR_Overall]('EML', 'employer_size', @Is_Last_Month)
						where Value <> '' and Claim_Closed_Flag <> 'Y'
						group by Value
						having COUNT(*) > 0
					union all
					select distinct Value, [UnitType] = 'group'
						from [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
						where Value <> '' and Claim_Closed_Flag <> 'Y'
						group by Value
						having COUNT(*) > 0
					union all
					select distinct Value, [UnitType] = 'account_manager'
						from [dbo].[udf_CPR_Overall]('EML', 'account_manager', @Is_Last_Month)
						where Value <> '' and Claim_Closed_Flag <> 'Y'
						group by Value
						having COUNT(*) > 0) as tmp_value
	) as tmp
	
	-- drop temp table
	DROP TABLE #claim_all
	
	-- GET RESULTS
	
	SELECT * FROM #total
		
	UNION ALL -- WCNSW
		
	SELECT [Unit] = 'WCNSW', [UnitType] = 'WCNSW', Claim_Type, SUM(overall) as overall, SUM(med_only) as med_only, SUM(d_d) as d_d, SUM(lum_sum_in) as lum_sum_in, SUM(totally_unfit) as totally_unfit, SUM(ffsd_at_work_15_less) as ffsd_at_work_15_less, SUM(ffsd_at_work_15_more) as ffsd_at_work_15_more, SUM(ffsd_not_at_work) as ffsd_not_at_work, SUM(pid) as pid, SUM(therapy_treat) as therapy_treat, SUM(ncmm_this_week) as ncmm_this_week, SUM(ncmm_next_week) as ncmm_next_week
	FROM #total
	WHERE [UnitType] = 'employer_size'
	GROUP BY Claim_Type
		
	--drop temp table
	DROP table #total
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_EML_CPR_Dashboard_Agency_Group.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_EML_CPR_Dashboard_ClaimOfficer.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_EML_CPR_Dashboard_ClaimOfficer]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_EML_CPR_Dashboard_ClaimOfficer]
GO

CREATE PROCEDURE [dbo].[usp_EML_CPR_Dashboard_ClaimOfficer]
(
	@Start_Date datetime
	,@End_Date datetime
	,@Is_Last_Month bit
)
AS
BEGIN
	-- PREPARE DATA FOR QUERYING
	
	-- NEW CLAIMS
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
	INTO #claim_new_all
		FROM [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	
	-- CLAIM CLOSURES
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
	INTO #claim_closure
		FROM [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	
	-- REOPEN CLAIMS
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
	INTO #claim_re_open
		FROM [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
		
	-- REOPEN CLAIMS: STILL OPEN
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
	INTO #claim_re_open_still_open
		FROM [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	
	-- OPEN CLAIMS
	SELECT *,[UnitType] = 'group', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
	INTO #claim_open_all
		FROM [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	
	SELECT *
	INTO #claim_all
	FROM (select *,claim_type='claim_new_all' from #claim_new_all
			   union all select *,claim_type='claim_new_nlt' from #claim_new_all where is_Time_Lost=0
			   union all select *,claim_type='claim_new_lt' from #claim_new_all where is_Time_Lost=1
			   union all select *,claim_type='claim_closure' from #claim_closure
			   union all select *,claim_type='claim_re_open' from #claim_re_open
			   union all select *,claim_type='claim_still_open' from #claim_re_open_still_open
			   union all select *,claim_type='claim_open_all' from #claim_open_all
			   union all select *,claim_type='claim_open_nlt' from #claim_open_all where is_Time_Lost=0
			   union all select *,claim_type='claim_open_0_13' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 13
			   union all select *,claim_type='claim_open_13_26' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 13 and weeks_since_injury <= 26
			   union all select *,claim_type='claim_open_26_52' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 26 and weeks_since_injury <= 52
			   union all select *,claim_type='claim_open_52_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 52 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_0_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_78_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 78 and weeks_since_injury <= 130
			   union all select *,claim_type='claim_open_gt_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 130
			   union all select *,claim_type='claim_open_ncmm_this_week' from #claim_open_all WHERE NCMM_Actions_This_Week <> ''
			   union all select *,claim_type='claim_open_ncmm_next_week' from #claim_open_all WHERE NCMM_Actions_Next_Week <> ''
			   union all select *,claim_type='claim_open_acupuncture' from #claim_open_all WHERE Acupuncture_Paid > 0
			   union all select *,claim_type='claim_open_chiro' from #claim_open_all  WHERE Chiro_Paid > 1000
			   union all select *,claim_type='claim_open_massage' from #claim_open_all  WHERE Massage_Paid > 0
			   union all select *,claim_type='claim_open_osteo' from #claim_open_all  WHERE Osteopathy_Paid > 0
			   union all select *,claim_type='claim_open_physio' from #claim_open_all  WHERE Physio_Paid > 2000
			   union all select *,claim_type='claim_open_rehab' from #claim_open_all WHERE Rehab_Paid > 0
			   union all select *,claim_type='claim_open_death' from #claim_open_all WHERE Result_Of_Injury_Code = 1
			   union all select *,claim_type='claim_open_industrial_deafness' from #claim_open_all  WHERE Is_Industrial_Deafness = 1
			   union all select *,claim_type='claim_open_ppd' from #claim_open_all  WHERE Result_Of_Injury_Code = 3
			   union all select *,claim_type='claim_open_recovery' from #claim_open_all WHERE Total_Recoveries <> 0
			   union all select *,claim_type='claim_open_wpi_all' from #claim_open_all WHERE WPI > 0
			   union all select *,claim_type='claim_open_wpi_0_10' from #claim_open_all WHERE WPI > 0 AND WPI <= 10
			   union all select *,claim_type='claim_open_wpi_11_14' from #claim_open_all WHERE WPI >= 11 AND WPI <= 14
			   union all select *,claim_type='claim_open_wpi_15_20' from #claim_open_all WHERE WPI >= 15 AND WPI <= 20
			   union all select *,claim_type='claim_open_wpi_21_30' from #claim_open_all WHERE WPI >= 21 AND WPI <= 30
			   union all select *,claim_type='claim_open_wpi_31_more' from #claim_open_all WHERE WPI >= 31
			   union all select *,claim_type='claim_open_wid' from #claim_open_all WHERE Common_Law = 1
			   ) as tmp
	
	-- drop temp tables
	DROP TABLE #claim_new_all
	DROP TABLE #claim_closure
	DROP TABLE #claim_re_open
	DROP TABLE #claim_re_open_still_open
	DROP TABLE #claim_open_all
	
	SELECT  tmp.[SubValue2] as [Unit], tmp.[SubValue] as [Primary], tmp.[Value] as [Parent], tmp.[UnitType], Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType])

		,med_only = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Is_Medical_Only = 1)

		,d_d = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Is_D_D = 1)
			
		,lum_sum_in = (select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType]
			and (Total_Recoveries <> 0 or Common_Law = 1 or WPI >= 0 or Result_Of_Injury_Code = 3 or Result_Of_Injury_Code = 1 or Is_Industrial_Deafness = 1))
			
		,totally_unfit = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'TU')
			
		,ffsd_at_work_15_less = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek <= 15)
			
		,ffsd_at_work_15_more = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek > 15)
							
		,ffsd_not_at_work = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 0)
			
		,pid = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'PID')
			
		,therapy_treat=(select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType]
			and (Physio_Paid > 2000 or Chiro_Paid > 1000 or Massage_Paid > 0 or Osteopathy_Paid > 0 or Acupuncture_Paid > 0 or Rehab_Paid > 0))		
		
		,ncmm_this_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and NCMM_Actions_This_Week <> '')
			
		,ncmm_next_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and NCMM_Actions_Next_Week <> '')
	INTO #total
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct Value, SubValue, SubValue2, [UnitType] = 'group'
							from [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
							where Value <> '' and SubValue <> '' and SubValue2 <> '' and Claim_Closed_Flag <> 'Y'
							group by Value, SubValue, SubValue2
							having COUNT(*) > 0) as tmp_value
	) as tmp
	
	-- Add an overall column for Teams
	SELECT  tmp.[SubValue2] as [Unit], tmp.[SubValue] as [Primary], tmp.[Value] as [Parent], tmp.[UnitType], Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType])

		,med_only = 0
		,d_d = 0
		,lum_sum_in = 0
		,totally_unfit = 0
		,ffsd_at_work_15_less = 0
		,ffsd_at_work_15_more = 0
		,ffsd_not_at_work = 0
		,pid = 0
		,therapy_treat = 0
		,ncmm_this_week = 0
		,ncmm_next_week = 0
	INTO #total2
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct Value, SubValue, [SubValue2] = SubValue, [UnitType] = 'group'
							from [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
							where Value <> '' and SubValue <> '' and Claim_Closed_Flag <> 'Y'
							group by Value, SubValue
							having COUNT(*) > 0) as tmp_value
	) as tmp
	
	-- drop temp table
	DROP TABLE #claim_all
	
	-- GET RESULTS
	SELECT * FROM #total
	UNION ALL
	SELECT * FROM #total2
		
	--drop temp table
	DROP table #total
	DROP table #total2
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_EML_CPR_Dashboard_ClaimOfficer.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_EML_CPR_Dashboard_Sub_Team.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_EML_CPR_Dashboard_Sub_Team]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_EML_CPR_Dashboard_Sub_Team]
GO

CREATE PROCEDURE [dbo].[usp_EML_CPR_Dashboard_Sub_Team]
(
	@Start_Date datetime
	,@End_Date datetime
	,@Is_Last_Month bit
)
AS
BEGIN
	-- PREPARE DATA FOR QUERYING
	
	-- NEW CLAIMS
	SELECT *,[UnitType] = 'employer_size', weeks_since_injury = 0
	INTO #claim_new_all 
		FROM [dbo].[udf_CPR_Overall]('EML', 'employer_size', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	UNION ALL
	SELECT *,[UnitType] = 'account_manager', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('EML', 'account_manager', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	
	-- CLAIM CLOSURES
	SELECT *,[UnitType] = 'employer_size', weeks_since_injury = 0
	INTO #claim_closure 
		FROM [dbo].[udf_CPR_Overall]('EML', 'employer_size', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	UNION ALL
	SELECT *,[UnitType] = 'account_manager', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('EML', 'account_manager', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	
	-- REOPEN CLAIMS
	SELECT *,[UnitType] = 'employer_size', weeks_since_injury = 0
	INTO #claim_re_open 
		FROM [dbo].[udf_CPR_Overall]('EML', 'employer_size', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
	UNION ALL
	SELECT *,[UnitType] = 'account_manager', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('EML', 'account_manager', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
		
	-- REOPEN CLAIMS: STILL OPEN
	SELECT *,[UnitType] = 'employer_size', weeks_since_injury = 0
	INTO #claim_re_open_still_open 
		FROM [dbo].[udf_CPR_Overall]('EML', 'employer_size', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	UNION ALL
	SELECT *,[UnitType] = 'account_manager', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('EML', 'account_manager', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	
	-- OPEN CLAIMS
	SELECT *,[UnitType] = 'employer_size', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
	INTO #claim_open_all
		FROM [dbo].[udf_CPR_Overall]('EML', 'employer_size', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
		FROM [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	UNION ALL
	SELECT *,[UnitType] = 'account_manager', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
		FROM [dbo].[udf_CPR_Overall]('EML', 'account_manager', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	
	SELECT *
	INTO #claim_all
	FROM (select *,claim_type='claim_new_all' from #claim_new_all
			   union all select *,claim_type='claim_new_nlt' from #claim_new_all where is_Time_Lost=0
			   union all select *,claim_type='claim_new_lt' from #claim_new_all where is_Time_Lost=1
			   union all select *,claim_type='claim_closure' from #claim_closure
			   union all select *,claim_type='claim_re_open' from #claim_re_open
			   union all select *,claim_type='claim_still_open' from #claim_re_open_still_open
			   union all select *,claim_type='claim_open_all' from #claim_open_all
			   union all select *,claim_type='claim_open_nlt' from #claim_open_all where is_Time_Lost=0
			   union all select *,claim_type='claim_open_0_13' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 13
			   union all select *,claim_type='claim_open_13_26' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 13 and weeks_since_injury <= 26
			   union all select *,claim_type='claim_open_26_52' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 26 and weeks_since_injury <= 52
			   union all select *,claim_type='claim_open_52_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 52 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_0_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_78_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 78 and weeks_since_injury <= 130
			   union all select *,claim_type='claim_open_gt_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 130
			   union all select *,claim_type='claim_open_ncmm_this_week' from #claim_open_all WHERE NCMM_Actions_This_Week <> ''
			   union all select *,claim_type='claim_open_ncmm_next_week' from #claim_open_all WHERE NCMM_Actions_Next_Week <> ''
			   union all select *,claim_type='claim_open_acupuncture' from #claim_open_all WHERE Acupuncture_Paid > 0
			   union all select *,claim_type='claim_open_chiro' from #claim_open_all  WHERE Chiro_Paid > 1000
			   union all select *,claim_type='claim_open_massage' from #claim_open_all  WHERE Massage_Paid > 0
			   union all select *,claim_type='claim_open_osteo' from #claim_open_all  WHERE Osteopathy_Paid > 0
			   union all select *,claim_type='claim_open_physio' from #claim_open_all  WHERE Physio_Paid > 2000
			   union all select *,claim_type='claim_open_rehab' from #claim_open_all WHERE Rehab_Paid > 0
			   union all select *,claim_type='claim_open_death' from #claim_open_all WHERE Result_Of_Injury_Code = 1
			   union all select *,claim_type='claim_open_industrial_deafness' from #claim_open_all  WHERE Is_Industrial_Deafness = 1
			   union all select *,claim_type='claim_open_ppd' from #claim_open_all  WHERE Result_Of_Injury_Code = 3
			   union all select *,claim_type='claim_open_recovery' from #claim_open_all WHERE Total_Recoveries <> 0
			   union all select *,claim_type='claim_open_wpi_all' from #claim_open_all WHERE WPI > 0
			   union all select *,claim_type='claim_open_wpi_0_10' from #claim_open_all WHERE WPI > 0 AND WPI <= 10
			   union all select *,claim_type='claim_open_wpi_11_14' from #claim_open_all WHERE WPI >= 11 AND WPI <= 14
			   union all select *,claim_type='claim_open_wpi_15_20' from #claim_open_all WHERE WPI >= 15 AND WPI <= 20
			   union all select *,claim_type='claim_open_wpi_21_30' from #claim_open_all WHERE WPI >= 21 AND WPI <= 30
			   union all select *,claim_type='claim_open_wpi_31_more' from #claim_open_all WHERE WPI >= 31
			   union all select *,claim_type='claim_open_wid' from #claim_open_all WHERE Common_Law = 1
			   ) as tmp
	
	-- drop temp tables
	DROP TABLE #claim_new_all
	DROP TABLE #claim_closure
	DROP TABLE #claim_re_open
	DROP TABLE #claim_re_open_still_open
	DROP TABLE #claim_open_all
	
	SELECT  tmp.[SubValue] as [Unit], tmp.[Value] as [Primary], tmp.[UnitType], Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType])

		,med_only = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Is_Medical_Only = 1)

		,d_d = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Is_D_D = 1)
			
		,lum_sum_in = (select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType]
			and (Total_Recoveries <> 0 or Common_Law = 1 or WPI >= 0 or Result_Of_Injury_Code = 3 or Result_Of_Injury_Code = 1 or Is_Industrial_Deafness = 1))
			
		,totally_unfit = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'TU')
			
		,ffsd_at_work_15_less = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek <= 15)
			
		,ffsd_at_work_15_more = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek > 15)
							
		,ffsd_not_at_work = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 0)
			
		,pid = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'PID')
			
		,therapy_treat=(select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType]
			and (Physio_Paid > 2000 or Chiro_Paid > 1000 or Massage_Paid > 0 or Osteopathy_Paid > 0 or Acupuncture_Paid > 0 or Rehab_Paid > 0))		
		
		,ncmm_this_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and NCMM_Actions_This_Week <> '')
			
		,ncmm_next_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and NCMM_Actions_Next_Week <> '')
	INTO #total
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct Value, SubValue, [UnitType] = 'employer_size'
							from [dbo].[udf_CPR_Overall]('EML', 'employer_size', @Is_Last_Month)
							where Value <> '' and SubValue <> '' and Claim_Closed_Flag <> 'Y'
							group by Value, SubValue
							having COUNT(*) > 0
					union all
					select distinct Value, SubValue, [UnitType] = 'group'
							from [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
							where Value <> '' and SubValue <> '' and Claim_Closed_Flag <> 'Y'
							group by Value, SubValue
							having COUNT(*) > 0
					union all
					select distinct Value, SubValue, [UnitType] = 'account_manager'
							from [dbo].[udf_CPR_Overall]('EML', 'account_manager', @Is_Last_Month)
							where Value <> '' and SubValue <> '' and Claim_Closed_Flag <> 'Y'
							group by Value, SubValue
							having COUNT(*) > 0) as tmp_value
	) as tmp
	
	-- add an overall column for employer sizes, groups and account managers
	SELECT  tmp.[SubValue] + '_total' as [Unit], tmp.[Value] as [Primary], tmp.[UnitType], Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [Value]=tmp.[SubValue] and [UnitType]=tmp.[UnitType])

		,med_only = 0
		,d_d = 0
		,lum_sum_in = 0
		,totally_unfit = 0
		,ffsd_at_work_15_less = 0
		,ffsd_at_work_15_more = 0
		,ffsd_not_at_work = 0
		,pid = 0
		,therapy_treat = 0
		,ncmm_this_week = 0
		,ncmm_next_week = 0
	INTO #total2
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct Value, [SubValue] = Value, [UnitType] = 'employer_size'
							from [dbo].[udf_CPR_Overall]('EML', 'employer_size', @Is_Last_Month)
							where Value <> '' and Claim_Closed_Flag <> 'Y'
							group by Value
							having COUNT(*) > 0
					union all
					select distinct Value, [SubValue] = Value, [UnitType] = 'group'
							from [dbo].[udf_CPR_Overall]('EML', 'group', @Is_Last_Month)
							where Value <> '' and Claim_Closed_Flag <> 'Y'
							group by Value
							having COUNT(*) > 0
					union all
					select distinct Value, [SubValue] = Value, [UnitType] = 'account_manager'
							from [dbo].[udf_CPR_Overall]('EML', 'account_manager', @Is_Last_Month)
							where Value <> '' and Claim_Closed_Flag <> 'Y'
							group by Value
							having COUNT(*) > 0) as tmp_value
	) as tmp
	
	-- drop temp table
	DROP TABLE #claim_all
	
	-- GET RESULTS
	SELECT * FROM #total
	UNION ALL
	SELECT * FROM #total2
		
	--drop temp table
	DROP table #total
	DROP table #total2
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_EML_CPR_Dashboard_Sub_Team.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_EML_CPR_Raw.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[usp_EML_CPR_Raw]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE [dbo].[usp_EML_CPR_Raw]
GO

CREATE PROCEDURE [dbo].[usp_EML_CPR_Raw]
(	
	@Type VARCHAR(20)
	,@Value VARCHAR(256)
	,@SubValue VARCHAR(256)
	,@SubSubValue VARCHAR(256)
	,@ClaimType VARCHAR(256)
	,@Start_Date DATETIME
	,@End_Date DATETIME
	,@Claim_Liability_Indicator NVARCHAR(256)
	,@Psychological_Claims VARCHAR(10)
	,@Inactive_Claims VARCHAR(10)
	,@Medically_Discharged VARCHAR(10)
	,@Exempt_From_Reform VARCHAR(10)
	,@Reactivation VARCHAR(10)
)
AS
BEGIN
	-- Determine the last month period
	DECLARE @LastMonth_Start_Date datetime = DATEADD(m, -1, DATEADD(m, DATEDIFF(m, 0, GETDATE()), 0))
	DECLARE @LastMonth_End_Date datetime = DATEADD(m, DATEDIFF(m, 0, GETDATE()), -1) + '23:59'
	
	-- Determine last two weeks: Start = last two weeks from yesterday; End = yesterday
	DECLARE @Last2Weeks_Start_Date datetime = DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
	DECLARE @Last2Weeks_End_Date datetime = DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))) + '23:59'
	
	DECLARE @IsLastMonthRange bit = 0
	IF DATEDIFF(d, @LastMonth_Start_Date, @Start_Date) = 0 AND DATEDIFF(d, @LastMonth_End_Date, @End_Date) = 0
	BEGIN
		SET @IsLastMonthRange = 1
	END
	
	DECLARE @IsLast2WeeksRange bit = 0
	IF DATEDIFF(d, @Last2Weeks_Start_Date, @Start_Date) = 0 AND DATEDIFF(d, @Last2Weeks_End_Date, @End_Date) = 0
	BEGIN
		SET @IsLast2WeeksRange = 1
	END
	
	DECLARE @Period_Type int
	IF @IsLastMonthRange = 1
	BEGIN
		SET @Period_Type = 1
	END
	ELSE IF @IsLast2WeeksRange = 1
	BEGIN
		SET @Period_Type = 0
	END
	ELSE IF @IsLastMonthRange = 0 AND @IsLast2WeeksRange = 0
	BEGIN
		SET @Period_Type = -1
	END
	
	IF @ClaimType like 'claim_new%'
	BEGIN
		select *
		from [dbo].[udf_CPR_Raw] ('eml', @End_Date, @Period_Type) cpr 
		where @Value = case when @Value <> 'all' and @Type = 'employer_size' then EMPL_SIZE
							  when @Value <> 'all' and @Type = 'group' then [Group]
							  when @Value <> 'all' and @Type = 'account_manager' then Account_Manager
							  when @Value = 'all' then 'all'
						 end
			AND @SubValue = case when @SubValue <> 'all' and @Type = 'group' then Team
								 when @SubValue <> 'all' and @Type = 'account_manager' then EMPL_SIZE
								 when @SubValue = 'all' then 'all'
							end
			AND @SubSubValue = case when @SubSubValue <> 'all' then Claims_Officer_Name
									else 'all'
							   end
			AND (case when @Claim_Liability_Indicator <> 'all' then Claim_Liability_Indicator_Group	else '1' end)
				= (case when @Claim_Liability_Indicator <> 'all' then @Claim_Liability_Indicator else '1' end)
			AND ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
			AND Is_Time_Lost = case when @ClaimType like 'claim_new_nlt%' then 0
									when @ClaimType like 'claim_new_lt%' then 1
									else Is_Time_Lost end
			--common condition--
			AND Is_Medical_Only = case when @ClaimType like '%med_only' then 1 else Is_Medical_Only end
			AND Is_D_D = case when @ClaimType like '%d_d' then 1 else Is_D_D end
			AND (Total_Recoveries = case when @ClaimType like '%lum_sum_in' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
										 else Total_Recoveries end
				OR Common_Law = case when @ClaimType like '%lum_sum_in' then 1 else Common_Law end
				OR isnull(WPI,0) = case when @ClaimType like '%lum_sum_in' then case when WPI >= 0 then WPI else 1 end
							  else isnull(WPI,0) end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 3 else Result_Of_Injury_Code end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 1 else Result_Of_Injury_Code end
				OR Is_Industrial_Deafness = case when @ClaimType like '%lum_sum_in' then 1 else Is_Industrial_Deafness end 
				)
			AND Med_Cert_Status = case when @ClaimType like '%totally_unfit' then 'TU'
									   when @ClaimType like '%ffsd_at_work_15_less' then 'SID'
									   when @ClaimType like '%ffsd_at_work_15_more' then 'SID'
									   when @ClaimType like '%ffsd_not_at_work' then 'SID'
									   when @ClaimType like '%pid' then 'PID'
									   else Med_Cert_Status end
			AND case when @ClaimType like '%ffsd_not_at_work'
						or @ClaimType like '%ffsd_at_work_15_more'
						or @ClaimType like '%ffsd_at_work_15_less' then Is_Working
					 else isnull(Is_Working,0) end 
					 = 
					 case when @ClaimType like '%ffsd_at_work_15_less' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_at_work_15_more' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_not_at_work' and Is_Working is not null then 0
						  else isnull(Is_Working,0) end
			AND HoursPerWeek = case when @ClaimType like '%ffsd_at_work_15_less' then case when HoursPerWeek <= 15 then HoursPerWeek else 15 end
									when @ClaimType like '%ffsd_at_work_15_more' then case when HoursPerWeek > 15 then HoursPerWeek else 16 end
									else HoursPerWeek end									
			AND (Isnull(Physio_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Physio_Paid > 2000 then Physio_Paid else 2001 end
								   else Isnull(Physio_Paid,0) end
				OR Isnull(Chiro_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 1000 then Chiro_Paid else 1001 end
								   else Isnull(Chiro_Paid,0) end
				OR Isnull(Massage_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Massage_Paid > 0 then Massage_Paid else 1 end
								   else Isnull(Massage_Paid,0) end
				OR Isnull(Osteopathy_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Osteopathy_Paid > 0 then Osteopathy_Paid else 1 end
								   else Isnull(Osteopathy_Paid,0) end
				OR Isnull(Acupuncture_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Acupuncture_Paid > 0 then Acupuncture_Paid else 1 end
								   else Isnull(Acupuncture_Paid,0) end
				OR Isnull(Rehab_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 0 then Rehab_Paid else 1 end
								   else Isnull(Rehab_Paid,0) end)
			AND NCMM_Actions_This_Week = case when @ClaimType like '%ncmm_this_week' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '1' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like '%ncmm_next_week' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '1' end
											  else NCMM_Actions_Next_Week end	
	END
	ELSE IF @ClaimType like 'claim_open%'
	BEGIN
		select *
		from [dbo].[udf_CPR_Raw] ('eml', @End_Date, @Period_Type) cpr 
		where @Value = case when @Value <> 'all' and @Type = 'employer_size' then EMPL_SIZE
							  when @Value <> 'all' and @Type = 'group' then [Group]
							  when @Value <> 'all' and @Type = 'account_manager' then Account_Manager
							  when @Value = 'all' then 'all'
						 end
			AND @SubValue = case when @SubValue <> 'all' and @Type = 'group' then Team
								 when @SubValue <> 'all' and @Type = 'account_manager' then EMPL_SIZE
								 when @SubValue = 'all' then 'all'
							end
			AND @SubSubValue = case when @SubSubValue <> 'all' then Claims_Officer_Name
									else 'all'
							   end
			AND (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date) 
			and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
			
			and (case when @Psychological_Claims <> 'all' then Is_Stress else '1' end)
				= (case when @Psychological_Claims <> 'all'	then @Psychological_Claims	else '1' end)

			and (case when @Inactive_Claims <> 'all' then Is_Inactive_Claims else '1' end)
				= (case when @Inactive_Claims <> 'all'	then  @Inactive_Claims	else '1' end)

			and (case when @Medically_Discharged <> 'all' then Is_Medically_Discharged	else '1' end)
				= (case when @Medically_Discharged <> 'all' then @Medically_Discharged else '1'	end)

			and (case when @Exempt_From_Reform <> 'all'	then Is_Exempt	else '1' end)
				= (case when @Exempt_From_Reform <> 'all' then @Exempt_From_Reform	else '1' end)

			and (case when @Reactivation <> 'all' then Is_Reactive	else '1' end)
				= (case when @Reactivation <> 'all'	then @Reactivation	else '1' end)
				
			AND Is_Time_Lost = case when @ClaimType like 'claim_open_nlt%' then 0
									when @ClaimType like 'claim_open_0_13%'
									  or @ClaimType like 'claim_open_13_26%' 
									  or @ClaimType like 'claim_open_26_52%' 
									  or @ClaimType like 'claim_open_52_78%' 
									  or @ClaimType like 'claim_open_0_78%' 
									  or @ClaimType like 'claim_open_78_130%' 
									  or @ClaimType like 'claim_open_gt_130%' then 1
									else Is_Time_Lost end
			AND DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 = 
					case when @ClaimType like 'claim_open_0_13%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 0 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 13 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 1 end
						 when @ClaimType like 'claim_open_13_26%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 13 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 26 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 14 end
						 when @ClaimType like 'claim_open_26_52%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 26 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 52 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 27 end
						 when @ClaimType like 'claim_open_52_78%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 52 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 78 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 53 end
						 when @ClaimType like 'claim_open_0_78%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 0 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 78 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 1 end
					     when @ClaimType like 'claim_open_78_130%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 78 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 130 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 79 end
					     when @ClaimType like 'claim_open_gt_130%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 130
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 131 end	
					else DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 end
					
			AND NCMM_Actions_This_Week = case when @ClaimType like 'claim_open_ncmm_this_week%' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '0' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like 'claim_open_ncmm_next_week%' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '0' end
											  else NCMM_Actions_Next_Week end
			AND Isnull(Acupuncture_Paid,0) = case when @ClaimType like 'claim_open_acupuncture%' then case when Isnull(Acupuncture_Paid,0) > 0 then Isnull(Acupuncture_Paid,0) else 1 end
										else Isnull(Acupuncture_Paid,0) end
			AND Isnull(Chiro_Paid,0) = case when @ClaimType like 'claim_open_chiro%' then case when Isnull(Chiro_Paid,0) > 1000 then Isnull(Chiro_Paid,0) else 1001 end
										else Isnull(Chiro_Paid,0) end
			AND Isnull(Massage_Paid,0) = case when @ClaimType like 'claim_open_massage%' then case when Isnull(Massage_Paid,0) > 0 then Isnull(Massage_Paid,0) else 1 end
										else Isnull(Massage_Paid,0) end
			AND Isnull(Osteopathy_Paid,0) = case when @ClaimType like 'claim_open_ost%' then case when Isnull(Osteopathy_Paid,0) > 0 then Isnull(Osteopathy_Paid,0) else 1 end
										else Isnull(Osteopathy_Paid,0) end
			AND Isnull(Physio_Paid,0) = case when @ClaimType like 'claim_open_physio%' then case when Isnull(Physio_Paid,0) > 2000 then Isnull(Physio_Paid,0) else 2001 end
										else Isnull(Physio_Paid,0) end
			AND Isnull(Rehab_Paid,0) = case when @ClaimType like 'claim_open_rehab%' then case when Isnull(Rehab_Paid,0) > 0 then Isnull(Rehab_Paid,0) else 1 end
										else Isnull(Rehab_Paid,0) end
			AND Isnull(Result_Of_Injury_Code,0) = case when @ClaimType like 'claim_open_death%' then 1
										else Isnull(Result_Of_Injury_Code,0) end	
			AND Isnull(Is_Industrial_Deafness,0) = case when @ClaimType like 'claim_open_industrial_deafness%' then 1
										else Isnull(Is_Industrial_Deafness,0) end	
			AND Isnull(Result_Of_Injury_Code,0) = case when @ClaimType like 'claim_open_ppd%' then 3
										else Isnull(Result_Of_Injury_Code,0) end	
			AND Isnull(Total_Recoveries,0) = case when @ClaimType like 'claim_open_recovery%' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
											  else Isnull(Total_Recoveries,0) end
			AND Isnull(WPI,0) = case when @ClaimType like 'claim_open_wpi_all%' then case when WPI > 0 then WPI else 1 end
						   when @ClaimType like 'claim_open_wpi_0_10%' then case when WPI > 0 and WPI <= 10 then WPI else 1 end
				           when @ClaimType like 'claim_open_wpi_11_14%' then case when WPI >= 11 and WPI <= 14 then WPI else 12 end
						   when @ClaimType like 'claim_open_wpi_15_20%' then case when WPI >= 15 and WPI <= 20 then WPI else 16 end
						   when @ClaimType like 'claim_open_wpi_21_30%' then case when WPI >= 21 and WPI <= 30 then WPI else 22 end
						   when @ClaimType like 'claim_open_wpi_31_more%' then case when WPI >= 31 then WPI else 32 end
					  else Isnull(WPI,0) end
			AND Isnull(Common_Law,0) = case when @ClaimType like 'claim_open_wid%' then 1 else Isnull(Common_Law,0) end		
			--common condition--
			AND Is_Medical_Only = case when @ClaimType like '%med_only' then 1 else Is_Medical_Only end
			AND Is_D_D = case when @ClaimType like '%d_d' then 1 else Is_D_D end
			AND (Total_Recoveries = case when @ClaimType like '%lum_sum_in' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
										 else Total_Recoveries end
				OR Common_Law = case when @ClaimType like '%lum_sum_in' then 1 else Common_Law end
				OR isnull(WPI,0) = case when @ClaimType like '%lum_sum_in' then case when WPI >= 0 then WPI else 1 end
							  else isnull(WPI,0) end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 3 else Result_Of_Injury_Code end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 1 else Result_Of_Injury_Code end
				OR Is_Industrial_Deafness = case when @ClaimType like '%lum_sum_in' then 1 else Is_Industrial_Deafness end 
				)
			AND Med_Cert_Status = case when @ClaimType like '%totally_unfit' then 'TU'
									   when @ClaimType like '%ffsd_at_work_15_less' then 'SID'
									   when @ClaimType like '%ffsd_at_work_15_more' then 'SID'
									   when @ClaimType like '%ffsd_not_at_work' then 'SID'
									   when @ClaimType like '%pid' then 'PID'
									   else Med_Cert_Status end
			AND case when @ClaimType like '%ffsd_not_at_work'
						or @ClaimType like '%ffsd_at_work_15_more'
						or @ClaimType like '%ffsd_at_work_15_less' then Is_Working
					 else isnull(Is_Working,0) end 
					 = 
					 case when @ClaimType like '%ffsd_at_work_15_less' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_at_work_15_more' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_not_at_work' and Is_Working is not null then 0
						  else isnull(Is_Working,0) end
			AND HoursPerWeek = case when @ClaimType like '%ffsd_at_work_15_less' then case when HoursPerWeek <= 15 then HoursPerWeek else 15 end
									when @ClaimType like '%ffsd_at_work_15_more' then case when HoursPerWeek > 15 then HoursPerWeek else 16 end
									else HoursPerWeek end									
			AND (Isnull(Physio_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Physio_Paid > 2000 then Physio_Paid else 2001 end
								   else Isnull(Physio_Paid,0) end
				OR Isnull(Chiro_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 1000 then Chiro_Paid else 1001 end
								   else Isnull(Chiro_Paid,0) end
				OR Isnull(Massage_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Massage_Paid > 0 then Massage_Paid else 1 end
								   else Isnull(Massage_Paid,0) end
				OR Isnull(Osteopathy_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Osteopathy_Paid > 0 then Osteopathy_Paid else 1 end
								   else Isnull(Osteopathy_Paid,0) end
				OR Isnull(Acupuncture_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Acupuncture_Paid > 0 then Acupuncture_Paid else 1 end
								   else Isnull(Acupuncture_Paid,0) end
				OR Isnull(Rehab_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 0 then Rehab_Paid else 1 end
								   else Isnull(Rehab_Paid,0) end)
			AND NCMM_Actions_This_Week = case when @ClaimType like '%ncmm_this_week' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '1' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like '%ncmm_next_week' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '1' end
											  else NCMM_Actions_Next_Week end							 																 
	END
	ELSE IF @ClaimType like 'claim_re_open%'
	BEGIN
		select *
		from [dbo].[udf_CPR_Raw] ('eml', @End_Date, @Period_Type) cpr 
		where @Value = case when @Value <> 'all' and @Type = 'employer_size' then EMPL_SIZE
							  when @Value <> 'all' and @Type = 'group' then [Group]
							  when @Value <> 'all' and @Type = 'account_manager' then Account_Manager
							  when @Value = 'all' then 'all'
						 end
			AND @SubValue = case when @SubValue <> 'all' and @Type = 'group' then Team
								 when @SubValue <> 'all' and @Type = 'account_manager' then EMPL_SIZE
								 when @SubValue = 'all' then 'all'
							end
			AND @SubSubValue = case when @SubSubValue <> 'all' then Claims_Officer_Name
									else 'all'
							   end
			AND Date_Claim_Reopened between @Start_Date and @End_Date	
			--common condition--
			AND Is_Medical_Only = case when @ClaimType like '%med_only' then 1 else Is_Medical_Only end
			AND Is_D_D = case when @ClaimType like '%d_d' then 1 else Is_D_D end
			AND (Total_Recoveries = case when @ClaimType like '%lum_sum_in' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
										 else Total_Recoveries end
				OR Common_Law = case when @ClaimType like '%lum_sum_in' then 1 else Common_Law end
				OR isnull(WPI,0) = case when @ClaimType like '%lum_sum_in' then case when WPI >= 0 then WPI else 1 end
							  else isnull(WPI,0) end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 3 else Result_Of_Injury_Code end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 1 else Result_Of_Injury_Code end
				OR Is_Industrial_Deafness = case when @ClaimType like '%lum_sum_in' then 1 else Is_Industrial_Deafness end 
				)
			AND Med_Cert_Status = case when @ClaimType like '%totally_unfit' then 'TU'
									   when @ClaimType like '%ffsd_at_work_15_less' then 'SID'
									   when @ClaimType like '%ffsd_at_work_15_more' then 'SID'
									   when @ClaimType like '%ffsd_not_at_work' then 'SID'
									   when @ClaimType like '%pid' then 'PID'
									   else Med_Cert_Status end
			AND case when @ClaimType like '%ffsd_not_at_work'
						or @ClaimType like '%ffsd_at_work_15_more'
						or @ClaimType like '%ffsd_at_work_15_less' then Is_Working
					 else isnull(Is_Working,0) end 
					 = 
					 case when @ClaimType like '%ffsd_at_work_15_less' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_at_work_15_more' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_not_at_work' and Is_Working is not null then 0
						  else isnull(Is_Working,0) end
			AND HoursPerWeek = case when @ClaimType like '%ffsd_at_work_15_less' then case when HoursPerWeek <= 15 then HoursPerWeek else 15 end
									when @ClaimType like '%ffsd_at_work_15_more' then case when HoursPerWeek > 15 then HoursPerWeek else 16 end
									else HoursPerWeek end									
			AND (Isnull(Physio_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Physio_Paid > 2000 then Physio_Paid else 2001 end
								   else Isnull(Physio_Paid,0) end
				OR Isnull(Chiro_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 1000 then Chiro_Paid else 1001 end
								   else Isnull(Chiro_Paid,0) end
				OR Isnull(Massage_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Massage_Paid > 0 then Massage_Paid else 1 end
								   else Isnull(Massage_Paid,0) end
				OR Isnull(Osteopathy_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Osteopathy_Paid > 0 then Osteopathy_Paid else 1 end
								   else Isnull(Osteopathy_Paid,0) end
				OR Isnull(Acupuncture_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Acupuncture_Paid > 0 then Acupuncture_Paid else 1 end
								   else Isnull(Acupuncture_Paid,0) end
				OR Isnull(Rehab_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 0 then Rehab_Paid else 1 end
								   else Isnull(Rehab_Paid,0) end)
			AND NCMM_Actions_This_Week = case when @ClaimType like '%ncmm_this_week' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '1' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like '%ncmm_next_week' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '1' end
											  else NCMM_Actions_Next_Week end							 																 
	END
	ELSE IF @ClaimType like 'claim_closure%'
	BEGIN
		select *
		from [dbo].[udf_CPR_Raw] ('eml', @End_Date, @Period_Type) cpr 
		where @Value = case when @Value <> 'all' and @Type = 'employer_size' then EMPL_SIZE
							  when @Value <> 'all' and @Type = 'group' then [Group]
							  when @Value <> 'all' and @Type = 'account_manager' then Account_Manager
							  when @Value = 'all' then 'all'
						 end
			AND @SubValue = case when @SubValue <> 'all' and @Type = 'group' then Team
								 when @SubValue <> 'all' and @Type = 'account_manager' then EMPL_SIZE
								 when @SubValue = 'all' then 'all'
							end
			AND @SubSubValue = case when @SubSubValue <> 'all' then Claims_Officer_Name
									else 'all'
							   end
			AND Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and (@IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 
				or exists (SELECT [Claim_No] FROM [dbo].[udf_CPR_Raw]('eml', DATEADD(DAY, -1, @Start_Date) + '23:59',-1) cpr_pre 
							WHERE cpr_pre.Claim_No = cpr.Claim_No AND cpr_pre.Claim_Closed_Flag = 'N')
				or ISNULL(Date_Claim_Entered, date_claim_received) >= @Start_Date)
			--common condition--
			AND Is_Medical_Only = case when @ClaimType like '%med_only' then 1 else Is_Medical_Only end
			AND Is_D_D = case when @ClaimType like '%d_d' then 1 else Is_D_D end
			AND (Total_Recoveries = case when @ClaimType like '%lum_sum_in' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
										 else Total_Recoveries end
				OR Common_Law = case when @ClaimType like '%lum_sum_in' then 1 else Common_Law end
				OR isnull(WPI,0) = case when @ClaimType like '%lum_sum_in' then case when WPI >= 0 then WPI else 1 end
							  else isnull(WPI,0) end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 3 else Result_Of_Injury_Code end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 1 else Result_Of_Injury_Code end
				OR Is_Industrial_Deafness = case when @ClaimType like '%lum_sum_in' then 1 else Is_Industrial_Deafness end 
				)
			AND Med_Cert_Status = case when @ClaimType like '%totally_unfit' then 'TU'
									   when @ClaimType like '%ffsd_at_work_15_less' then 'SID'
									   when @ClaimType like '%ffsd_at_work_15_more' then 'SID'
									   when @ClaimType like '%ffsd_not_at_work' then 'SID'
									   when @ClaimType like '%pid' then 'PID'
									   else Med_Cert_Status end
			AND case when @ClaimType like '%ffsd_not_at_work'
						or @ClaimType like '%ffsd_at_work_15_more'
						or @ClaimType like '%ffsd_at_work_15_less' then Is_Working
					 else isnull(Is_Working,0) end 
					 = 
					 case when @ClaimType like '%ffsd_at_work_15_less' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_at_work_15_more' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_not_at_work' and Is_Working is not null then 0
						  else isnull(Is_Working,0) end
			AND HoursPerWeek = case when @ClaimType like '%ffsd_at_work_15_less' then case when HoursPerWeek <= 15 then HoursPerWeek else 15 end
									when @ClaimType like '%ffsd_at_work_15_more' then case when HoursPerWeek > 15 then HoursPerWeek else 16 end
									else HoursPerWeek end									
			AND (Isnull(Physio_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Physio_Paid > 2000 then Physio_Paid else 2001 end
								   else Isnull(Physio_Paid,0) end
				OR Isnull(Chiro_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 1000 then Chiro_Paid else 1001 end
								   else Isnull(Chiro_Paid,0) end
				OR Isnull(Massage_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Massage_Paid > 0 then Massage_Paid else 1 end
								   else Isnull(Massage_Paid,0) end
				OR Isnull(Osteopathy_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Osteopathy_Paid > 0 then Osteopathy_Paid else 1 end
								   else Isnull(Osteopathy_Paid,0) end
				OR Isnull(Acupuncture_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Acupuncture_Paid > 0 then Acupuncture_Paid else 1 end
								   else Isnull(Acupuncture_Paid,0) end
				OR Isnull(Rehab_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 0 then Rehab_Paid else 1 end
								   else Isnull(Rehab_Paid,0) end)
			AND NCMM_Actions_This_Week = case when @ClaimType like '%ncmm_this_week' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '1' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like '%ncmm_next_week' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '1' end
											  else NCMM_Actions_Next_Week end								 																 
	END
	ELSE IF @ClaimType like 'claim_still_open%'
	BEGIN
		select *
		from [dbo].[udf_CPR_Raw] ('eml', @End_Date, @Period_Type) cpr 
		where @Value = case when @Value <> 'all' and @Type = 'employer_size' then EMPL_SIZE
							  when @Value <> 'all' and @Type = 'group' then [Group]
							  when @Value <> 'all' and @Type = 'account_manager' then Account_Manager
							  when @Value = 'all' then 'all'
						 end
			AND @SubValue = case when @SubValue <> 'all' and @Type = 'group' then Team
								 when @SubValue <> 'all' and @Type = 'account_manager' then EMPL_SIZE
								 when @SubValue = 'all' then 'all'
							end
			AND @SubSubValue = case when @SubSubValue <> 'all' then Claims_Officer_Name
									else 'all'
							   end
			AND Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and (case when @IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 then IsPreClosed else 1 end) = 1
			and (@IsLastMonthRange = 1 or @IsLast2WeeksRange = 1
				or exists (SELECT [Claim_No] FROM [dbo].[udf_CPR_Raw]('eml', DATEADD(DAY, -1, @Start_Date) + '23:59',-1) cpr_pre
							WHERE cpr_pre.Claim_No = cpr.Claim_No AND cpr_pre.Claim_Closed_Flag = 'Y'))
			--common condition--
			AND Is_Medical_Only = case when @ClaimType like '%med_only' then 1 else Is_Medical_Only end
			AND Is_D_D = case when @ClaimType like '%d_d' then 1 else Is_D_D end
			AND (Total_Recoveries = case when @ClaimType like '%lum_sum_in' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
										 else Total_Recoveries end
				OR Common_Law = case when @ClaimType like '%lum_sum_in' then 1 else Common_Law end
				OR isnull(WPI,0) = case when @ClaimType like '%lum_sum_in' then case when WPI >= 0 then WPI else 1 end
							  else isnull(WPI,0) end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 3 else Result_Of_Injury_Code end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 1 else Result_Of_Injury_Code end
				OR Is_Industrial_Deafness = case when @ClaimType like '%lum_sum_in' then 1 else Is_Industrial_Deafness end 
				)
			AND Med_Cert_Status = case when @ClaimType like '%totally_unfit' then 'TU'
									   when @ClaimType like '%ffsd_at_work_15_less' then 'SID'
									   when @ClaimType like '%ffsd_at_work_15_more' then 'SID'
									   when @ClaimType like '%ffsd_not_at_work' then 'SID'
									   when @ClaimType like '%pid' then 'PID'
									   else Med_Cert_Status end
			AND case when @ClaimType like '%ffsd_not_at_work'
						or @ClaimType like '%ffsd_at_work_15_more'
						or @ClaimType like '%ffsd_at_work_15_less' then Is_Working
					 else isnull(Is_Working,0) end 
					 = 
					 case when @ClaimType like '%ffsd_at_work_15_less' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_at_work_15_more' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_not_at_work' and Is_Working is not null then 0
						  else isnull(Is_Working,0) end
			AND HoursPerWeek = case when @ClaimType like '%ffsd_at_work_15_less' then case when HoursPerWeek <= 15 then HoursPerWeek else 15 end
									when @ClaimType like '%ffsd_at_work_15_more' then case when HoursPerWeek > 15 then HoursPerWeek else 16 end
									else HoursPerWeek end									
			AND (Isnull(Physio_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Physio_Paid > 2000 then Physio_Paid else 2001 end
								   else Isnull(Physio_Paid,0) end
				OR Isnull(Chiro_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 1000 then Chiro_Paid else 1001 end
								   else Isnull(Chiro_Paid,0) end
				OR Isnull(Massage_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Massage_Paid > 0 then Massage_Paid else 1 end
								   else Isnull(Massage_Paid,0) end
				OR Isnull(Osteopathy_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Osteopathy_Paid > 0 then Osteopathy_Paid else 1 end
								   else Isnull(Osteopathy_Paid,0) end
				OR Isnull(Acupuncture_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Acupuncture_Paid > 0 then Acupuncture_Paid else 1 end
								   else Isnull(Acupuncture_Paid,0) end
				OR Isnull(Rehab_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 0 then Rehab_Paid else 1 end
								   else Isnull(Rehab_Paid,0) end)
			AND NCMM_Actions_This_Week = case when @ClaimType like '%ncmm_this_week' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '1' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like '%ncmm_next_week' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '1' end
											  else NCMM_Actions_Next_Week end	
	END		
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_EML_CPR_Raw.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_Generate_active_directory_user.sql  
--------------------------------  
/****** Object:  StoredProcedure [dbo].[usp_Generate_active_directory_user]    Script Date: 20/05/2014 14:31:45 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- CREATE date: <CREATE Date,,>
-- Description:	<Description,,>
-- =============================================
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[usp_Generate_active_directory_user]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE [dbo].[usp_Generate_active_directory_user]
GO

CREATE PROCEDURE [dbo].[usp_Generate_active_directory_user]
	@tmfprod varchar(20),
	@emlprod varchar(20),
	@hemprod varchar(20)
AS
BEGIN
	IF OBJECT_ID('tempdb..#all_records') IS NOT NULL DROP TABLE #all_records
	
	declare @tmf_query varchar(500)
	declare @eml_query varchar(500)
	declare @hem_query varchar(500)
	set @tmf_query = 'SELECT 1 as TMF,
						   0 as EML,
						   0 as HEM,
						   Alias as Alias,
						   First_Name as FirstName,
						   Last_Name as LastName,
						   active as active
					 FROM ' + @tmfprod + '.[dbo].[CLAIMS_OFFICERS]'
					 
	set @eml_query = 'SELECT 0 as TMF,
						   1 as EML,
						   0 as HEM,
						   Alias as Alias,
						   First_Name as FirstName,
						   Last_Name as LastName,
						   active as active
					 FROM ' + @emlprod + '.[dbo].[CLAIMS_OFFICERS]'
					 
	set @hem_query = 'SELECT 0 as TMF,
						   0 as EML,
						   1 as HEM,
						   Alias as Alias,
						   First_Name as FirstName,
						   Last_Name as LastName,
						   active as active
					 FROM ' + @hemprod + '.[dbo].[CLAIMS_OFFICERS]'
								
	--CREATE TABLE TO STORE ALL RECORDS FROM EMIC DATABASE--
	CREATE TABLE #all_records
	(
		ID int identity,
		TMF bit null,
		EML bit null,
		HEM bit null,
		Alias nvarchar (10) null,
		FirstName nvarchar(256) null,
		LastName nvarchar(256) null,
		Email nvarchar (256) null,
		Status smallint null,
		Create_date datetime null,
		Is_System_User bit null,
		Default_System_Id int null,
		active bit null,
		Organisation_RoleId int null
	)

	INSERT INTO #all_records(TMF,EML,HEM,Alias,FirstName,LastName,active)
	exec(@tmf_query)
	
	INSERT INTO #all_records(TMF,EML,HEM,Alias,FirstName,LastName,active)
	exec(@eml_query)
	
	INSERT INTO #all_records(TMF,EML,HEM,Alias,FirstName,LastName,active)
	exec(@hem_query)
	
	--UPDATE OTHER FIELDS IN TEMPT TABLE
	UPDATE #all_records
	SET Email = '',
		Status = 1,
		Create_date = GETDATE(),
		Is_System_User = 0,
		Default_System_Id = (SELECT SystemId 
							 FROM [Dart].[dbo].[Systems]
							 WHERE LOWER(Name)  = case when TMF = 1 then 'tmf'
													   when HEM = 1 then 'hem'
													   when EML = 1 then 'eml'
												  end),
        Organisation_RoleId = (SELECT roles.Organisation_RoleId
												  FROM [Dart].[dbo].[Organisation_Levels] levels join [Dart].[dbo].[Organisation_Roles] roles 
														ON levels.LevelId = roles.LevelId
												  WHERE levels.SystemId = (SELECT SystemId 
																		   FROM [Dart].[dbo].[Systems]
																		   WHERE LOWER(Name)  = case when TMF = 1 then 'tmf'
																							    when HEM = 1 then 'hem'
																							    when EML = 1 then 'eml'
																						        end)
											            and roles.Name = 'Pilot Users') 												
									            	
	--DELETE EXISTING USER WITH ACTIVE = 0 FROM USER TABLE--
	DELETE FROM [Dart].[dbo].[Users]
	WHERE UserId in (SELECT UserId
				 FROM [Dart].[dbo].[Users] u1
				 WHERE UserName COLLATE Latin1_General_CI_AS in (SELECT distinct Alias
												   FROM #all_records ar join [Dart].[dbo].[Users] u 
															on ar.Alias = u.UserName COLLATE Latin1_General_CI_AS
												   WHERE ar.active = 0)
				  AND Default_System_Id in (SELECT ar.Default_System_Id
											FROM #all_records ar join [Dart].[dbo].[Users] u 
													on ar.Alias = u.UserName COLLATE Latin1_General_CI_AS
											WHERE ar.active = 0 and u.UserId = u1.UserId)
				)
				
	--INSERT NEW USER INTO DART USER TABLE--
	INSERT INTO [Dart].[dbo].[Users] (UserName,
									  Password,
									  FirstName,
									  LastName,
									  Email,
									  [Status],
									  Create_Date,
									  Is_System_User,
									  Default_System_Id)
	SELECT Alias,
		   '',
		   FirstName,
		   LastName,
		   Email,
		   Status, 
		   Create_date,
		   Is_System_User, 
		   Default_System_Id 
	FROM #all_records ar	
	WHERE ID = (SELECT MAX(ID) 
				FROM #all_records t1 
				WHERE t1.Alias = ar.Alias and active = 1)
		  AND NOT EXISTS (SELECT * 
						  FROM [Dart].[dbo].[Users] u
						  WHERE u.UserName COLLATE Latin1_General_CI_AS = ar.Alias)

	--INSERT NEW USER INTO DART REPORT USER TABLE--
	INSERT INTO [Dart].[dbo].[ReportUsers] (UserId,Is_External_User,Organisation_RoleId)
	SELECT u.UserId
		  ,0 as Is_External_User
		  ,Organisation_RoleId = Organisation_RoleId
	FROM #all_records join [Dart].[dbo].[Users] u ON u.UserName COLLATE Latin1_General_CI_AS = #all_records.Alias
	WHERE active = 1
		 AND NOT EXISTS (SELECT * 
						 FROM [Dart].[dbo].[ReportUsers] ru
						 WHERE ru.UserId = u.UserId)
							 
	--DELETE EXISTING USER WITH ACTIVE CHANGED FROM 1 TO 0 FROM REPORT USER TABLE--
	DELETE FROM [Dart].[dbo].[ReportUsers]
	WHERE Id in (SELECT Id 
				FROM [Dart].[dbo].[ReportUsers] ru
				WHERE UserId in (SELECT UserId
							 FROM [Dart].[dbo].[Users] u 
								inner join #all_records ar ON u.UserName COLLATE Latin1_General_CI_AS = ar.Alias
							 WHERE active = 0)
				and Organisation_RoleId in (SELECT ar.Organisation_RoleId
											 FROM [Dart].[dbo].[Users] u 
												inner join #all_records ar ON u.UserName COLLATE Latin1_General_CI_AS = ar.Alias
											 WHERE ar.active = 0 and u.UserId = ru.UserId)
				)
	
	--INSERT EXISTING USER WITH ACTIVE CHANGED FROM 0 TO 1 INTO REPORT USER TABLE--				
	INSERT INTO [Dart].[dbo].[ReportUsers] (UserId,Is_External_User,Organisation_RoleId)
	SELECT u.UserId
		  ,0 as Is_External_User
		  ,Organisation_RoleId = Organisation_RoleId
	FROM #all_records join [Dart].[dbo].[Users] u ON u.UserName COLLATE Latin1_General_CI_AS = #all_records.Alias
	WHERE active = 1
	AND u.UserId in (SELECT ru.UserId
					 FROM [Dart].[dbo].[ReportUsers] ru
					 WHERE ru.UserId = u.UserId)
	AND Organisation_RoleId not in (SELECT ru.Organisation_RoleId
									FROM [Dart].[dbo].[ReportUsers] ru
									WHERE ru.UserId = u.UserId)
						 			
	
	IF OBJECT_ID('tempdb..#all_records') IS NOT NULL DROP TABLE #all_records
			
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON


--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_Generate_active_directory_user.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_GetGroups.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[usp_GetGroups]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE [dbo].[usp_GetGroups]
GO

CREATE PROCEDURE [dbo].usp_GetGroups(@System varchar(20))
AS
BEGIN	
	DECLARE @Team varchar(20)
	
	/* create group table */
	IF OBJECT_ID('tempdb..#group') IS NULL
	BEGIN
		CREATE TABLE #group
		(
			[Group] varchar(20)
		)
	END
		
	IF UPPER(@System) = 'TMF'
	BEGIN
		DECLARE cur CURSOR FOR
		SELECT DISTINCT Team FROM TMF_Portfolio
		OPEN cur
		FETCH NEXT FROM cur	INTO @Team
		WHILE @@FETCH_STATUS = 0
		BEGIN	
			INSERT INTO #group SELECT dbo.udf_TMF_GetGroupByTeam(@Team)
			
			FETCH NEXT FROM cur INTO @Team
		END
		CLOSE cur
		DEALLOCATE cur
	END
	ELSE IF UPPER(@System) = 'EML'
	BEGIN
		DECLARE cur CURSOR FOR
		SELECT DISTINCT Team FROM EML_Portfolio
		OPEN cur
		FETCH NEXT FROM cur	INTO @Team
		WHILE @@FETCH_STATUS = 0
		BEGIN				
			INSERT INTO #group SELECT dbo.udf_EML_GetGroupByTeam(@Team)
			
			FETCH NEXT FROM cur INTO @Team
		END
		CLOSE cur
		DEALLOCATE cur
	END
	ELSE IF UPPER(@System) = 'HEM'
	BEGIN
		DECLARE cur CURSOR FOR
		SELECT DISTINCT Team FROM HEM_Portfolio
		OPEN cur
		FETCH NEXT FROM cur	INTO @Team
		WHILE @@FETCH_STATUS = 0
		BEGIN
			INSERT INTO #group SELECT dbo.udf_HEM_GetGroupByTeam(@Team)
			
			FETCH NEXT FROM cur INTO @Team
		END
		CLOSE cur
		DEALLOCATE cur
	END
	
	SELECT DISTINCT * FROM #group
	
	DROP TABLE #group
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_GetGroups.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_GetTeamsByGroup.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[usp_GetTeamsByGroup]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE [dbo].[usp_GetTeamsByGroup]
GO

CREATE PROCEDURE [dbo].usp_GetTeamsByGroup(@System varchar(20),@Group varchar(20))
AS
BEGIN	
	DECLARE @Team varchar(20)
	DECLARE @GroupName varchar(20)
	
	/* create team table */
	IF OBJECT_ID('tempdb..#team') IS NULL
	BEGIN
		CREATE TABLE #team
		(
			Team varchar(20)
		)
	END
		
	IF UPPER(@System) = 'TMF'
	BEGIN
		DECLARE cur CURSOR FOR
		SELECT DISTINCT Team FROM TMF_Portfolio
		OPEN cur
		FETCH NEXT FROM cur	INTO @Team
		WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @GroupName = dbo.udf_TMF_GetGroupByTeam(@Team)
			IF UPPER(@GroupName) = UPPER(@Group)
			BEGIN
				INSERT INTO #team SELECT @Team
			END
			
			FETCH NEXT FROM cur INTO @Team
		END
		CLOSE cur
		DEALLOCATE cur
	END
	ELSE IF UPPER(@System) = 'EML'
	BEGIN
		DECLARE cur CURSOR FOR
		SELECT DISTINCT Team FROM EML_Portfolio
		OPEN cur
		FETCH NEXT FROM cur	INTO @Team
		WHILE @@FETCH_STATUS = 0
		BEGIN				
			SET @GroupName = dbo.udf_EML_GetGroupByTeam(@Team)
			IF UPPER(@GroupName) = UPPER(@Group)
			BEGIN
				INSERT INTO #team SELECT @Team
			END
			
			FETCH NEXT FROM cur INTO @Team
		END
		CLOSE cur
		DEALLOCATE cur
	END
	ELSE IF UPPER(@System) = 'HEM'
	BEGIN
		DECLARE cur CURSOR FOR
		SELECT DISTINCT Team FROM HEM_Portfolio
		OPEN cur
		FETCH NEXT FROM cur	INTO @Team
		WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @GroupName = dbo.udf_HEM_GetGroupByTeam(@Team)
			IF UPPER(@GroupName) = UPPER(@Group)
			BEGIN
				INSERT INTO #team SELECT @Team
			END
			
			FETCH NEXT FROM cur INTO @Team
		END
		CLOSE cur
		DEALLOCATE cur
	END
	
	SELECT DISTINCT * FROM #team
	
	DROP TABLE #team
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_GetTeamsByGroup.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_HEM_CPR_Dashboard_Agency_Group.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_HEM_CPR_Dashboard_Agency_Group]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_HEM_CPR_Dashboard_Agency_Group]
GO

CREATE PROCEDURE [dbo].[usp_HEM_CPR_Dashboard_Agency_Group]
(
	@Start_Date datetime
	,@End_Date datetime
	,@Is_Last_Month bit
)
AS
BEGIN
	-- PREPARE DATA FOR QUERYING
	
	-- NEW CLAIMS
	SELECT *,[UnitType] = 'portfolio', weeks_since_injury = 0
	INTO #claim_new_all 
		FROM [dbo].[udf_CPR_Overall]('HEM', 'portfolio', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	
	-- CLAIM CLOSURES
	SELECT *,[UnitType] = 'portfolio', weeks_since_injury = 0
	INTO #claim_closure 
		FROM [dbo].[udf_CPR_Overall]('HEM', 'portfolio', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	
	-- REOPEN CLAIMS
	SELECT *,[UnitType] = 'portfolio', weeks_since_injury = 0
	INTO #claim_re_open 
		FROM [dbo].[udf_CPR_Overall]('HEM', 'portfolio', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
		
	-- REOPEN CLAIMS: STILL OPEN
	SELECT *,[UnitType] = 'portfolio', weeks_since_injury = 0
	INTO #claim_re_open_still_open
		FROM [dbo].[udf_CPR_Overall]('HEM', 'portfolio', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	
	-- OPEN CLAIMS
	SELECT *,[UnitType] = 'portfolio', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
	INTO #claim_open_all
		FROM [dbo].[udf_CPR_Overall]('HEM', 'portfolio', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
		FROM [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	
	SELECT *
	INTO #claim_all
	FROM (select *,claim_type='claim_new_all' from #claim_new_all
			   union all select *,claim_type='claim_new_nlt' from #claim_new_all where is_Time_Lost=0
			   union all select *,claim_type='claim_new_lt' from #claim_new_all where is_Time_Lost=1
			   union all select *,claim_type='claim_closure' from #claim_closure
			   union all select *,claim_type='claim_re_open' from #claim_re_open
			   union all select *,claim_type='claim_still_open' from #claim_re_open_still_open
			   union all select *,claim_type='claim_open_all' from #claim_open_all
			   union all select *,claim_type='claim_open_nlt' from #claim_open_all where is_Time_Lost=0
			   union all select *,claim_type='claim_open_0_13' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 13
			   union all select *,claim_type='claim_open_13_26' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 13 and weeks_since_injury <= 26
			   union all select *,claim_type='claim_open_26_52' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 26 and weeks_since_injury <= 52
			   union all select *,claim_type='claim_open_52_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 52 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_0_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_78_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 78 and weeks_since_injury <= 130
			   union all select *,claim_type='claim_open_gt_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 130
			   union all select *,claim_type='claim_open_ncmm_this_week' from #claim_open_all WHERE NCMM_Actions_This_Week <> ''
			   union all select *,claim_type='claim_open_ncmm_next_week' from #claim_open_all WHERE NCMM_Actions_Next_Week <> ''
			   union all select *,claim_type='claim_open_acupuncture' from #claim_open_all WHERE Acupuncture_Paid > 0
			   union all select *,claim_type='claim_open_chiro' from #claim_open_all  WHERE Chiro_Paid > 1000
			   union all select *,claim_type='claim_open_massage' from #claim_open_all  WHERE Massage_Paid > 0
			   union all select *,claim_type='claim_open_osteo' from #claim_open_all  WHERE Osteopathy_Paid > 0
			   union all select *,claim_type='claim_open_physio' from #claim_open_all  WHERE Physio_Paid > 2000
			   union all select *,claim_type='claim_open_rehab' from #claim_open_all WHERE Rehab_Paid > 0
			   union all select *,claim_type='claim_open_death' from #claim_open_all WHERE Result_Of_Injury_Code = 1
			   union all select *,claim_type='claim_open_industrial_deafness' from #claim_open_all  WHERE Is_Industrial_Deafness = 1
			   union all select *,claim_type='claim_open_ppd' from #claim_open_all  WHERE Result_Of_Injury_Code = 3
			   union all select *,claim_type='claim_open_recovery' from #claim_open_all WHERE Total_Recoveries <> 0
			   union all select *,claim_type='claim_open_wpi_all' from #claim_open_all WHERE WPI > 0
			   union all select *,claim_type='claim_open_wpi_0_10' from #claim_open_all WHERE WPI > 0 AND WPI <= 10
			   union all select *,claim_type='claim_open_wpi_11_14' from #claim_open_all WHERE WPI >= 11 AND WPI <= 14
			   union all select *,claim_type='claim_open_wpi_15_20' from #claim_open_all WHERE WPI >= 15 AND WPI <= 20
			   union all select *,claim_type='claim_open_wpi_21_30' from #claim_open_all WHERE WPI >= 21 AND WPI <= 30
			   union all select *,claim_type='claim_open_wpi_31_more' from #claim_open_all WHERE WPI >= 31
			   union all select *,claim_type='claim_open_wid' from #claim_open_all WHERE Common_Law = 1
			   ) as tmp
	
	-- drop temp tables
	DROP TABLE #claim_new_all
	DROP TABLE #claim_closure
	DROP TABLE #claim_re_open
	DROP TABLE #claim_re_open_still_open
	DROP TABLE #claim_open_all
	
	SELECT  tmp.[Value] as [Unit], tmp.[UnitType], Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType])

		,med_only = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Is_Medical_Only = 1)

		,d_d = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Is_D_D = 1)
			
		,lum_sum_in = (select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType]
			and (Total_Recoveries <> 0 or Common_Law = 1 or WPI >= 0 or Result_Of_Injury_Code = 3 or Result_Of_Injury_Code = 1 or Is_Industrial_Deafness = 1))
			
		,totally_unfit = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'TU')
			
		,ffsd_at_work_15_less = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek <= 15)
			
		,ffsd_at_work_15_more = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek > 15)
							
		,ffsd_not_at_work = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 0)
			
		,pid = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'PID')
			
		,therapy_treat=(select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType]
			and (Physio_Paid > 2000 or Chiro_Paid > 1000 or Massage_Paid > 0 or Osteopathy_Paid > 0 or Acupuncture_Paid > 0 or Rehab_Paid > 0))		
		
		,ncmm_this_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and NCMM_Actions_This_Week <> '')
			
		,ncmm_next_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and NCMM_Actions_Next_Week <> '')
	INTO #total
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct Value, [UnitType] = 'portfolio'
						from [dbo].[udf_CPR_Overall]('HEM', 'portfolio', @Is_Last_Month)
						where Value <> '' and Claim_Closed_Flag <> 'Y'
						group by Value
						having COUNT(*) > 0
					union all
					select distinct Value, [UnitType] = 'group'
						from [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
						where Value <> '' and Claim_Closed_Flag <> 'Y'
						group by Value
						having COUNT(*) > 0) as tmp_value
	) as tmp
	
	-- drop temp table
	DROP TABLE #claim_all
	
	-- GET RESULTS
	
	SELECT * FROM #total
		
	UNION ALL -- Grouping Value: Hotel
		
	SELECT [Unit] = 'Hotel', [UnitType] = 'portfolio', Claim_Type, SUM(overall) as overall, SUM(med_only) as med_only, SUM(d_d) as d_d, SUM(lum_sum_in) as lum_sum_in, SUM(totally_unfit) as totally_unfit, SUM(ffsd_at_work_15_less) as ffsd_at_work_15_less, SUM(ffsd_at_work_15_more) as ffsd_at_work_15_more, SUM(ffsd_not_at_work) as ffsd_not_at_work, SUM(pid) as pid, SUM(therapy_treat) as therapy_treat, SUM(ncmm_this_week) as ncmm_this_week, SUM(ncmm_next_week) as ncmm_next_week
	FROM #total
	WHERE ([Unit] = 'Accommodation' or [Unit] = 'Pubs, Taverns and Bars')
	GROUP BY Claim_Type
		
	UNION ALL -- Hospitality
		
	SELECT [Unit] = 'Hospitality', [UnitType] = 'Hospitality', Claim_Type, SUM(overall) as overall, SUM(med_only) as med_only, SUM(d_d) as d_d, SUM(lum_sum_in) as lum_sum_in, SUM(totally_unfit) as totally_unfit, SUM(ffsd_at_work_15_less) as ffsd_at_work_15_less, SUM(ffsd_at_work_15_more) as ffsd_at_work_15_more, SUM(ffsd_not_at_work) as ffsd_not_at_work, SUM(pid) as pid, SUM(therapy_treat) as therapy_treat, SUM(ncmm_this_week) as ncmm_this_week, SUM(ncmm_next_week) as ncmm_next_week
	FROM #total
	WHERE [UnitType] = 'portfolio'
	GROUP BY Claim_Type
		
	--drop temp table
	DROP table #total
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_HEM_CPR_Dashboard_Agency_Group.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_HEM_CPR_Dashboard_ClaimOfficer.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_HEM_CPR_Dashboard_ClaimOfficer]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_HEM_CPR_Dashboard_ClaimOfficer]
GO

CREATE PROCEDURE [dbo].[usp_HEM_CPR_Dashboard_ClaimOfficer]
(
	@Start_Date datetime
	,@End_Date datetime
	,@Is_Last_Month bit
)
AS
BEGIN
	-- PREPARE DATA FOR QUERYING
	
	-- NEW CLAIMS
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
	INTO #claim_new_all
		FROM [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	
	-- CLAIM CLOSURES
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
	INTO #claim_closure
		FROM [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	
	-- REOPEN CLAIMS
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
	INTO #claim_re_open
		FROM [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
		
	-- REOPEN CLAIMS: STILL OPEN
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
	INTO #claim_re_open_still_open
		FROM [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	
	-- OPEN CLAIMS
	SELECT *,[UnitType] = 'group', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
	INTO #claim_open_all
		FROM [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	
	SELECT *
	INTO #claim_all
	FROM (select *,claim_type='claim_new_all' from #claim_new_all
			   union all select *,claim_type='claim_new_nlt' from #claim_new_all where is_Time_Lost=0
			   union all select *,claim_type='claim_new_lt' from #claim_new_all where is_Time_Lost=1
			   union all select *,claim_type='claim_closure' from #claim_closure
			   union all select *,claim_type='claim_re_open' from #claim_re_open
			   union all select *,claim_type='claim_still_open' from #claim_re_open_still_open
			   union all select *,claim_type='claim_open_all' from #claim_open_all
			   union all select *,claim_type='claim_open_nlt' from #claim_open_all where is_Time_Lost=0
			   union all select *,claim_type='claim_open_0_13' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 13
			   union all select *,claim_type='claim_open_13_26' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 13 and weeks_since_injury <= 26
			   union all select *,claim_type='claim_open_26_52' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 26 and weeks_since_injury <= 52
			   union all select *,claim_type='claim_open_52_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 52 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_0_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_78_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 78 and weeks_since_injury <= 130
			   union all select *,claim_type='claim_open_gt_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 130
			   union all select *,claim_type='claim_open_ncmm_this_week' from #claim_open_all WHERE NCMM_Actions_This_Week <> ''
			   union all select *,claim_type='claim_open_ncmm_next_week' from #claim_open_all WHERE NCMM_Actions_Next_Week <> ''
			   union all select *,claim_type='claim_open_acupuncture' from #claim_open_all WHERE Acupuncture_Paid > 0
			   union all select *,claim_type='claim_open_chiro' from #claim_open_all  WHERE Chiro_Paid > 1000
			   union all select *,claim_type='claim_open_massage' from #claim_open_all  WHERE Massage_Paid > 0
			   union all select *,claim_type='claim_open_osteo' from #claim_open_all  WHERE Osteopathy_Paid > 0
			   union all select *,claim_type='claim_open_physio' from #claim_open_all  WHERE Physio_Paid > 2000
			   union all select *,claim_type='claim_open_rehab' from #claim_open_all WHERE Rehab_Paid > 0
			   union all select *,claim_type='claim_open_death' from #claim_open_all WHERE Result_Of_Injury_Code = 1
			   union all select *,claim_type='claim_open_industrial_deafness' from #claim_open_all  WHERE Is_Industrial_Deafness = 1
			   union all select *,claim_type='claim_open_ppd' from #claim_open_all  WHERE Result_Of_Injury_Code = 3
			   union all select *,claim_type='claim_open_recovery' from #claim_open_all WHERE Total_Recoveries <> 0
			   union all select *,claim_type='claim_open_wpi_all' from #claim_open_all WHERE WPI > 0
			   union all select *,claim_type='claim_open_wpi_0_10' from #claim_open_all WHERE WPI > 0 AND WPI <= 10
			   union all select *,claim_type='claim_open_wpi_11_14' from #claim_open_all WHERE WPI >= 11 AND WPI <= 14
			   union all select *,claim_type='claim_open_wpi_15_20' from #claim_open_all WHERE WPI >= 15 AND WPI <= 20
			   union all select *,claim_type='claim_open_wpi_21_30' from #claim_open_all WHERE WPI >= 21 AND WPI <= 30
			   union all select *,claim_type='claim_open_wpi_31_more' from #claim_open_all WHERE WPI >= 31
			   union all select *,claim_type='claim_open_wid' from #claim_open_all WHERE Common_Law = 1
			   ) as tmp
	
	-- drop temp tables
	DROP TABLE #claim_new_all
	DROP TABLE #claim_closure
	DROP TABLE #claim_re_open
	DROP TABLE #claim_re_open_still_open
	DROP TABLE #claim_open_all
	
	SELECT  tmp.[SubValue2] as [Unit], tmp.[SubValue] as [Primary], tmp.[Value] as [Parent], tmp.[UnitType], Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType])

		,med_only = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Is_Medical_Only = 1)

		,d_d = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Is_D_D = 1)
			
		,lum_sum_in = (select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType]
			and (Total_Recoveries <> 0 or Common_Law = 1 or WPI >= 0 or Result_Of_Injury_Code = 3 or Result_Of_Injury_Code = 1 or Is_Industrial_Deafness = 1))
			
		,totally_unfit = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'TU')
			
		,ffsd_at_work_15_less = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek <= 15)
			
		,ffsd_at_work_15_more = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek > 15)
							
		,ffsd_not_at_work = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 0)
			
		,pid = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'PID')
			
		,therapy_treat=(select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType]
			and (Physio_Paid > 2000 or Chiro_Paid > 1000 or Massage_Paid > 0 or Osteopathy_Paid > 0 or Acupuncture_Paid > 0 or Rehab_Paid > 0))		
		
		,ncmm_this_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and NCMM_Actions_This_Week <> '')
			
		,ncmm_next_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and NCMM_Actions_Next_Week <> '')
	INTO #total
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct Value, SubValue, SubValue2, [UnitType] = 'group'
							from [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
							where Value <> '' and SubValue <> '' and SubValue2 <> '' and Claim_Closed_Flag <> 'Y'
							group by Value, SubValue, SubValue2
							having COUNT(*) > 0) as tmp_value
	) as tmp
	
	--add an overal column for teams
	SELECT  tmp.[SubValue2] as [Unit], tmp.[SubValue] as [Primary], tmp.[Value] as [Parent], tmp.[UnitType], Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType])

		,med_only = 0
		,d_d = 0
		,lum_sum_in = 0
		,totally_unfit = 0
		,ffsd_at_work_15_less = 0
		,ffsd_at_work_15_more = 0
		,ffsd_not_at_work = 0
		,pid = 0
		,therapy_treat = 0
		,ncmm_this_week = 0
		,ncmm_next_week = 0
	INTO #total2
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct Value, SubValue, [SubValue2] = SubValue, [UnitType] = 'group'
							from [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
							where Value <> '' and SubValue <> '' and Claim_Closed_Flag <> 'Y'
							group by Value, SubValue
							having COUNT(*) > 0) as tmp_value
	) as tmp
	
	-- drop temp table
	DROP TABLE #claim_all
	
	-- GET RESULTS
	SELECT * FROM #total
	UNION ALL
	SELECT * FROM #total2
		
	--drop temp table
	DROP table #total
	DROP table #total2
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_HEM_CPR_Dashboard_ClaimOfficer.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_HEM_CPR_Dashboard_Sub_Team.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_HEM_CPR_Dashboard_Sub_Team]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_HEM_CPR_Dashboard_Sub_Team]
GO

CREATE PROCEDURE [dbo].[usp_HEM_CPR_Dashboard_Sub_Team]
(
	@Start_Date datetime
	,@End_Date datetime
	,@Is_Last_Month bit
)
AS
BEGIN
	-- PREPARE DATA FOR QUERYING
	
	-- NEW CLAIMS
	SELECT *,[UnitType] = 'portfolio', weeks_since_injury = 0
	INTO #claim_new_all 
		FROM [dbo].[udf_CPR_Overall]('HEM', 'portfolio', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	
	-- CLAIM CLOSURES
	SELECT *,[UnitType] = 'portfolio', weeks_since_injury = 0
	INTO #claim_closure 
		FROM [dbo].[udf_CPR_Overall]('HEM', 'portfolio', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	
	-- REOPEN CLAIMS
	SELECT *,[UnitType] = 'portfolio', weeks_since_injury = 0
	INTO #claim_re_open 
		FROM [dbo].[udf_CPR_Overall]('HEM', 'portfolio', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
		
	-- REOPEN CLAIMS: STILL OPEN
	SELECT *,[UnitType] = 'portfolio', weeks_since_injury = 0
	INTO #claim_re_open_still_open 
		FROM [dbo].[udf_CPR_Overall]('HEM', 'portfolio', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	
	-- OPEN CLAIMS
	SELECT *,[UnitType] = 'portfolio', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
	INTO #claim_open_all
		FROM [dbo].[udf_CPR_Overall]('HEM', 'portfolio', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
		FROM [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	
	SELECT *
	INTO #claim_all
	FROM (select *,claim_type='claim_new_all' from #claim_new_all
			   union all select *,claim_type='claim_new_nlt' from #claim_new_all where is_Time_Lost=0
			   union all select *,claim_type='claim_new_lt' from #claim_new_all where is_Time_Lost=1
			   union all select *,claim_type='claim_closure' from #claim_closure
			   union all select *,claim_type='claim_re_open' from #claim_re_open
			   union all select *,claim_type='claim_still_open' from #claim_re_open_still_open
			   union all select *,claim_type='claim_open_all' from #claim_open_all
			   union all select *,claim_type='claim_open_nlt' from #claim_open_all where is_Time_Lost=0
			   union all select *,claim_type='claim_open_0_13' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 13
			   union all select *,claim_type='claim_open_13_26' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 13 and weeks_since_injury <= 26
			   union all select *,claim_type='claim_open_26_52' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 26 and weeks_since_injury <= 52
			   union all select *,claim_type='claim_open_52_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 52 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_0_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_78_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 78 and weeks_since_injury <= 130
			   union all select *,claim_type='claim_open_gt_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 130
			   union all select *,claim_type='claim_open_ncmm_this_week' from #claim_open_all WHERE NCMM_Actions_This_Week <> ''
			   union all select *,claim_type='claim_open_ncmm_next_week' from #claim_open_all WHERE NCMM_Actions_Next_Week <> ''
			   union all select *,claim_type='claim_open_acupuncture' from #claim_open_all WHERE Acupuncture_Paid > 0
			   union all select *,claim_type='claim_open_chiro' from #claim_open_all  WHERE Chiro_Paid > 1000
			   union all select *,claim_type='claim_open_massage' from #claim_open_all  WHERE Massage_Paid > 0
			   union all select *,claim_type='claim_open_osteo' from #claim_open_all  WHERE Osteopathy_Paid > 0
			   union all select *,claim_type='claim_open_physio' from #claim_open_all  WHERE Physio_Paid > 2000
			   union all select *,claim_type='claim_open_rehab' from #claim_open_all WHERE Rehab_Paid > 0
			   union all select *,claim_type='claim_open_death' from #claim_open_all WHERE Result_Of_Injury_Code = 1
			   union all select *,claim_type='claim_open_industrial_deafness' from #claim_open_all  WHERE Is_Industrial_Deafness = 1
			   union all select *,claim_type='claim_open_ppd' from #claim_open_all  WHERE Result_Of_Injury_Code = 3
			   union all select *,claim_type='claim_open_recovery' from #claim_open_all WHERE Total_Recoveries <> 0
			   union all select *,claim_type='claim_open_wpi_all' from #claim_open_all WHERE WPI > 0
			   union all select *,claim_type='claim_open_wpi_0_10' from #claim_open_all WHERE WPI > 0 AND WPI <= 10
			   union all select *,claim_type='claim_open_wpi_11_14' from #claim_open_all WHERE WPI >= 11 AND WPI <= 14
			   union all select *,claim_type='claim_open_wpi_15_20' from #claim_open_all WHERE WPI >= 15 AND WPI <= 20
			   union all select *,claim_type='claim_open_wpi_21_30' from #claim_open_all WHERE WPI >= 21 AND WPI <= 30
			   union all select *,claim_type='claim_open_wpi_31_more' from #claim_open_all WHERE WPI >= 31
			   union all select *,claim_type='claim_open_wid' from #claim_open_all WHERE Common_Law = 1
			   ) as tmp
	
	-- drop temp tables
	DROP TABLE #claim_new_all
	DROP TABLE #claim_closure
	DROP TABLE #claim_re_open
	DROP TABLE #claim_re_open_still_open
	DROP TABLE #claim_open_all
	
	SELECT  tmp.[SubValue] as [Unit], tmp.[Value] as [Primary], tmp.[UnitType], Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType])

		,med_only = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Is_Medical_Only = 1)

		,d_d = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Is_D_D = 1)
			
		,lum_sum_in = (select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType]
			and (Total_Recoveries <> 0 or Common_Law = 1 or WPI >= 0 or Result_Of_Injury_Code = 3 or Result_Of_Injury_Code = 1 or Is_Industrial_Deafness = 1))
			
		,totally_unfit = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'TU')
			
		,ffsd_at_work_15_less = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek <= 15)
			
		,ffsd_at_work_15_more = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek > 15)
							
		,ffsd_not_at_work = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 0)
			
		,pid = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'PID')
			
		,therapy_treat=(select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType]
			and (Physio_Paid > 2000 or Chiro_Paid > 1000 or Massage_Paid > 0 or Osteopathy_Paid > 0 or Acupuncture_Paid > 0 or Rehab_Paid > 0))		
		
		,ncmm_this_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and NCMM_Actions_This_Week <> '')
			
		,ncmm_next_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and NCMM_Actions_Next_Week <> '')
	INTO #total
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct Value, SubValue, [UnitType] = 'portfolio'
							from [dbo].[udf_CPR_Overall]('HEM', 'portfolio', @Is_Last_Month)
							where Value <> '' and SubValue <> '' and Claim_Closed_Flag <> 'Y'
							group by Value, SubValue
							having COUNT(*) > 0
					union all
					select distinct Value, SubValue, [UnitType] = 'group'
							from [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
							where Value <> '' and SubValue <> '' and Claim_Closed_Flag <> 'Y'
							group by Value, SubValue
							having COUNT(*) > 0) as tmp_value
	) as tmp
	
	--add an overal column for portfolio, and groups
	SELECT  tmp.[SubValue] + '_total' as [Unit], tmp.[Value] as [Primary], tmp.[UnitType], Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [Value]=tmp.[SubValue] and [UnitType]=tmp.[UnitType])

		,med_only = 0
		,d_d = 0
		,lum_sum_in = 0
		,totally_unfit = 0
		,ffsd_at_work_15_less = 0
		,ffsd_at_work_15_more = 0
		,ffsd_not_at_work = 0
		,pid = 0
		,therapy_treat = 0
		,ncmm_this_week = 0
		,ncmm_next_week = 0
	INTO #total2
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct Value, [SubValue] = Value, [UnitType] = 'portfolio'
							from [dbo].[udf_CPR_Overall]('HEM', 'portfolio', @Is_Last_Month)
							where Value <> '' and Claim_Closed_Flag <> 'Y'
							group by Value
							having COUNT(*) > 0
					union all
					select distinct Value, [SubValue] = Value, [UnitType] = 'group'
							from [dbo].[udf_CPR_Overall]('HEM', 'group', @Is_Last_Month)
							where Value <> '' and Claim_Closed_Flag <> 'Y'
							group by Value
							having COUNT(*) > 0) as tmp_value
	) as tmp
	
	-- drop temp table
	DROP TABLE #claim_all
	
	-- GET RESULTS
	SELECT * FROM #total
	UNION ALL 
	SELECT * FROM #total2
		
	--drop temp table
	DROP table #total
	DROP table #total2
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_HEM_CPR_Dashboard_Sub_Team.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_HEM_CPR_Raw.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[usp_HEM_CPR_Raw]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE [dbo].[usp_HEM_CPR_Raw]
GO

CREATE PROCEDURE [dbo].[usp_HEM_CPR_Raw]
(
	@Type VARCHAR(20)
	,@Value VARCHAR(256)
	,@SubValue VARCHAR(256)
	,@SubSubValue VARCHAR(256)
	,@ClaimType VARCHAR(256)
	,@Start_Date DATETIME
	,@End_Date DATETIME
	,@Claim_Liability_Indicator NVARCHAR(256)
	,@Psychological_Claims VARCHAR(10)
	,@Inactive_Claims VARCHAR(10)
	,@Medically_Discharged VARCHAR(10)
	,@Exempt_From_Reform VARCHAR(10)
	,@Reactivation VARCHAR(10)
)
AS
BEGIN
	-- Determine the last month period
	DECLARE @LastMonth_Start_Date datetime = DATEADD(m, -1, DATEADD(m, DATEDIFF(m, 0, GETDATE()), 0))
	DECLARE @LastMonth_End_Date datetime = DATEADD(m, DATEDIFF(m, 0, GETDATE()), -1) + '23:59'
	
	-- Determine last two weeks: Start = last two weeks from yesterday; End = yesterday
	DECLARE @Last2Weeks_Start_Date datetime = DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
	DECLARE @Last2Weeks_End_Date datetime = DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))) + '23:59'
	
	DECLARE @IsLastMonthRange bit = 0
	IF DATEDIFF(d, @LastMonth_Start_Date, @Start_Date) = 0 AND DATEDIFF(d, @LastMonth_End_Date, @End_Date) = 0
	BEGIN
		SET @IsLastMonthRange = 1
	END
	
	DECLARE @IsLast2WeeksRange bit = 0
	IF DATEDIFF(d, @Last2Weeks_Start_Date, @Start_Date) = 0 AND DATEDIFF(d, @Last2Weeks_End_Date, @End_Date) = 0
	BEGIN
		SET @IsLast2WeeksRange = 1
	END
	
	DECLARE @Period_Type int
	IF @IsLastMonthRange = 1
	BEGIN
		SET @Period_Type = 1
	END
	ELSE IF @IsLast2WeeksRange = 1
	BEGIN
		SET @Period_Type = 0
	END
	ELSE IF @IsLastMonthRange = 0 AND @IsLast2WeeksRange = 0
	BEGIN
		SET @Period_Type = -1
	END
	
	IF @ClaimType like 'claim_new%'
	BEGIN
		select *
		from [dbo].[udf_CPR_Raw] ('hem', @End_Date, @Period_Type) cpr 
		where @Value = case when @Value <> 'all' and @Value <> 'hotel' and @Type = 'portfolio' then Portfolio
							  when @Value <> 'all' and @Type = 'group' then [Group]
							  when @Value = 'all' then 'all'
							  when @Value = 'hotel' and Portfolio in ('Accommodation','Pubs, Taverns and Bars') then 'hotel'
						 end
			AND @SubValue = case when @SubValue <> 'all' and @Type = 'portfolio' then EMPL_SIZE
								 when @SubValue <> 'all' and @Type = 'group' then Team
								 when @SubValue = 'all' then 'all'
							end
			AND @SubSubValue = case when @SubSubValue <> 'all' then Claims_Officer_Name
									else 'all'
							   end	
			AND (case when @Claim_Liability_Indicator <> 'all' then Claim_Liability_Indicator_Group	else '1' end)
				= (case when @Claim_Liability_Indicator <> 'all' then @Claim_Liability_Indicator else '1' end)
			AND ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
			AND Is_Time_Lost = case when @ClaimType like 'claim_new_nlt%' then 0
									when @ClaimType like 'claim_new_lt%' then 1
									else Is_Time_Lost end
			--common condition--
			AND Is_Medical_Only = case when @ClaimType like '%med_only' then 1 else Is_Medical_Only end
			AND Is_D_D = case when @ClaimType like '%d_d' then 1 else Is_D_D end
			AND (Total_Recoveries = case when @ClaimType like '%lum_sum_in' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
										 else Total_Recoveries end
				OR Common_Law = case when @ClaimType like '%lum_sum_in' then 1 else Common_Law end
				OR isnull(WPI,0) = case when @ClaimType like '%lum_sum_in' then case when WPI >= 0 then WPI else 1 end
							  else isnull(WPI,0) end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 3 else Result_Of_Injury_Code end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 1 else Result_Of_Injury_Code end
				OR Is_Industrial_Deafness = case when @ClaimType like '%lum_sum_in' then 1 else Is_Industrial_Deafness end 
				)
			AND Med_Cert_Status = case when @ClaimType like '%totally_unfit' then 'TU'
									   when @ClaimType like '%ffsd_at_work_15_less' then 'SID'
									   when @ClaimType like '%ffsd_at_work_15_more' then 'SID'
									   when @ClaimType like '%ffsd_not_at_work' then 'SID'
									   when @ClaimType like '%pid' then 'PID'
									   else Med_Cert_Status end
			AND case when @ClaimType like '%ffsd_not_at_work'
						or @ClaimType like '%ffsd_at_work_15_more'
						or @ClaimType like '%ffsd_at_work_15_less' then Is_Working
					 else isnull(Is_Working,0) end 
					 = 
					 case when @ClaimType like '%ffsd_at_work_15_less' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_at_work_15_more' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_not_at_work' and Is_Working is not null then 0
						  else isnull(Is_Working,0) end
			AND HoursPerWeek = case when @ClaimType like '%ffsd_at_work_15_less' then case when HoursPerWeek <= 15 then HoursPerWeek else 15 end
									when @ClaimType like '%ffsd_at_work_15_more' then case when HoursPerWeek > 15 then HoursPerWeek else 16 end
									else HoursPerWeek end									
			AND (Isnull(Physio_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Physio_Paid > 2000 then Physio_Paid else 2001 end
								   else Isnull(Physio_Paid,0) end
				OR Isnull(Chiro_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 1000 then Chiro_Paid else 1001 end
								   else Isnull(Chiro_Paid,0) end
				OR Isnull(Massage_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Massage_Paid > 0 then Massage_Paid else 1 end
								   else Isnull(Massage_Paid,0) end
				OR Isnull(Osteopathy_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Osteopathy_Paid > 0 then Osteopathy_Paid else 1 end
								   else Isnull(Osteopathy_Paid,0) end
				OR Isnull(Acupuncture_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Acupuncture_Paid > 0 then Acupuncture_Paid else 1 end
								   else Isnull(Acupuncture_Paid,0) end
				OR Isnull(Rehab_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 0 then Rehab_Paid else 1 end
								   else Isnull(Rehab_Paid,0) end)
			AND NCMM_Actions_This_Week = case when @ClaimType like '%ncmm_this_week' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '1' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like '%ncmm_next_week' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '1' end
											  else NCMM_Actions_Next_Week end	
	END
	ELSE IF @ClaimType like 'claim_open%'
	BEGIN
		select *
		from [dbo].[udf_CPR_Raw] ('hem', @End_Date, @Period_Type) cpr 
		where @Value = case when @Value <> 'all' and @Value <> 'hotel' and @Type = 'portfolio' then Portfolio
							  when @Value <> 'all' and @Type = 'group' then [Group]
							  when @Value = 'all' then 'all'
							  when @Value = 'hotel' and Portfolio in ('Accommodation','Pubs, Taverns and Bars') then 'hotel'
						 end
			AND @SubValue = case when @SubValue <> 'all' and @Type = 'portfolio' then EMPL_SIZE
								 when @SubValue <> 'all' and @Type = 'group' then Team
								 when @SubValue = 'all' then 'all'
							end
			AND @SubSubValue = case when @SubSubValue <> 'all' then Claims_Officer_Name
									else 'all'
							   end	
			AND (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date) 
			and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
			
			and (case when @Psychological_Claims <> 'all' then Is_Stress else '1' end)
				= (case when @Psychological_Claims <> 'all'	then @Psychological_Claims	else '1' end)

			and (case when @Inactive_Claims <> 'all' then Is_Inactive_Claims else '1' end)
				= (case when @Inactive_Claims <> 'all'	then  @Inactive_Claims	else '1' end)

			and (case when @Medically_Discharged <> 'all' then Is_Medically_Discharged	else '1' end)
				= (case when @Medically_Discharged <> 'all' then @Medically_Discharged else '1'	end)

			and (case when @Exempt_From_Reform <> 'all'	then Is_Exempt	else '1' end)
				= (case when @Exempt_From_Reform <> 'all' then @Exempt_From_Reform	else '1' end)

			and (case when @Reactivation <> 'all' then Is_Reactive	else '1' end)
				= (case when @Reactivation <> 'all'	then @Reactivation	else '1' end)
				
			AND Is_Time_Lost = case when @ClaimType like 'claim_open_nlt%' then 0
									when @ClaimType like 'claim_open_0_13%'
									  or @ClaimType like 'claim_open_13_26%' 
									  or @ClaimType like 'claim_open_26_52%' 
									  or @ClaimType like 'claim_open_52_78%' 
									  or @ClaimType like 'claim_open_0_78%' 
									  or @ClaimType like 'claim_open_78_130%' 
									  or @ClaimType like 'claim_open_gt_130%' then 1
									else Is_Time_Lost end
			AND DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 = 
					case when @ClaimType like 'claim_open_0_13%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 0 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 13 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 1 end
						 when @ClaimType like 'claim_open_13_26%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 13 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 26 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 14 end
						 when @ClaimType like 'claim_open_26_52%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 26 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 52 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 27 end
						 when @ClaimType like 'claim_open_52_78%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 52 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 78 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 53 end
						 when @ClaimType like 'claim_open_0_78%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 0 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 78 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 1 end
					     when @ClaimType like 'claim_open_78_130%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 78 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 130 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 79 end
					     when @ClaimType like 'claim_open_gt_130%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 130
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 131 end	
					else DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 end
					
			AND NCMM_Actions_This_Week = case when @ClaimType like 'claim_open_ncmm_this_week%' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '0' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like 'claim_open_ncmm_next_week%' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '0' end
											  else NCMM_Actions_Next_Week end
			AND Isnull(Acupuncture_Paid,0) = case when @ClaimType like 'claim_open_acupuncture%' then case when Isnull(Acupuncture_Paid,0) > 0 then Isnull(Acupuncture_Paid,0) else 1 end
										else Isnull(Acupuncture_Paid,0) end
			AND Isnull(Chiro_Paid,0) = case when @ClaimType like 'claim_open_chiro%' then case when Isnull(Chiro_Paid,0) > 1000 then Isnull(Chiro_Paid,0) else 1001 end
										else Isnull(Chiro_Paid,0) end
			AND Isnull(Massage_Paid,0) = case when @ClaimType like 'claim_open_massage%' then case when Isnull(Massage_Paid,0) > 0 then Isnull(Massage_Paid,0) else 1 end
										else Isnull(Massage_Paid,0) end
			AND Isnull(Osteopathy_Paid,0) = case when @ClaimType like 'claim_open_ost%' then case when Isnull(Osteopathy_Paid,0) > 0 then Isnull(Osteopathy_Paid,0) else 1 end
										else Isnull(Osteopathy_Paid,0) end
			AND Isnull(Physio_Paid,0) = case when @ClaimType like 'claim_open_physio%' then case when Isnull(Physio_Paid,0) > 2000 then Isnull(Physio_Paid,0) else 2001 end
										else Isnull(Physio_Paid,0) end
			AND Isnull(Rehab_Paid,0) = case when @ClaimType like 'claim_open_rehab%' then case when Isnull(Rehab_Paid,0) > 0 then Isnull(Rehab_Paid,0) else 1 end
										else Isnull(Rehab_Paid,0) end
			AND Isnull(Result_Of_Injury_Code,0) = case when @ClaimType like 'claim_open_death%' then 1
										else Isnull(Result_Of_Injury_Code,0) end	
			AND Isnull(Is_Industrial_Deafness,0) = case when @ClaimType like 'claim_open_industrial_deafness%' then 1
										else Isnull(Is_Industrial_Deafness,0) end	
			AND Isnull(Result_Of_Injury_Code,0) = case when @ClaimType like 'claim_open_ppd%' then 3
										else Isnull(Result_Of_Injury_Code,0) end	
			AND Isnull(Total_Recoveries,0) = case when @ClaimType like 'claim_open_recovery%' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
											  else Isnull(Total_Recoveries,0) end
			AND Isnull(WPI,0) = case when @ClaimType like 'claim_open_wpi_all%' then case when WPI > 0 then WPI else 1 end
						   when @ClaimType like 'claim_open_wpi_0_10%' then case when WPI > 0 and WPI <= 10 then WPI else 1 end
				           when @ClaimType like 'claim_open_wpi_11_14%' then case when WPI >= 11 and WPI <= 14 then WPI else 12 end
						   when @ClaimType like 'claim_open_wpi_15_20%' then case when WPI >= 15 and WPI <= 20 then WPI else 16 end
						   when @ClaimType like 'claim_open_wpi_21_30%' then case when WPI >= 21 and WPI <= 30 then WPI else 22 end
						   when @ClaimType like 'claim_open_wpi_31_more%' then case when WPI >= 31 then WPI else 32 end
					  else Isnull(WPI,0) end
			AND Isnull(Common_Law,0) = case when @ClaimType like 'claim_open_wid%' then 1 else Isnull(Common_Law,0) end		
			--common condition--
			AND Is_Medical_Only = case when @ClaimType like '%med_only' then 1 else Is_Medical_Only end
			AND Is_D_D = case when @ClaimType like '%d_d' then 1 else Is_D_D end
			AND (Total_Recoveries = case when @ClaimType like '%lum_sum_in' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
										 else Total_Recoveries end
				OR Common_Law = case when @ClaimType like '%lum_sum_in' then 1 else Common_Law end
				OR isnull(WPI,0) = case when @ClaimType like '%lum_sum_in' then case when WPI >= 0 then WPI else 1 end
							  else isnull(WPI,0) end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 3 else Result_Of_Injury_Code end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 1 else Result_Of_Injury_Code end
				OR Is_Industrial_Deafness = case when @ClaimType like '%lum_sum_in' then 1 else Is_Industrial_Deafness end 
				)
			AND Med_Cert_Status = case when @ClaimType like '%totally_unfit' then 'TU'
									   when @ClaimType like '%ffsd_at_work_15_less' then 'SID'
									   when @ClaimType like '%ffsd_at_work_15_more' then 'SID'
									   when @ClaimType like '%ffsd_not_at_work' then 'SID'
									   when @ClaimType like '%pid' then 'PID'
									   else Med_Cert_Status end
			AND case when @ClaimType like '%ffsd_not_at_work'
						or @ClaimType like '%ffsd_at_work_15_more'
						or @ClaimType like '%ffsd_at_work_15_less' then Is_Working
					 else isnull(Is_Working,0) end 
					 = 
					 case when @ClaimType like '%ffsd_at_work_15_less' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_at_work_15_more' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_not_at_work' and Is_Working is not null then 0
						  else isnull(Is_Working,0) end
			AND HoursPerWeek = case when @ClaimType like '%ffsd_at_work_15_less' then case when HoursPerWeek <= 15 then HoursPerWeek else 15 end
									when @ClaimType like '%ffsd_at_work_15_more' then case when HoursPerWeek > 15 then HoursPerWeek else 16 end
									else HoursPerWeek end									
			AND (Isnull(Physio_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Physio_Paid > 2000 then Physio_Paid else 2001 end
								   else Isnull(Physio_Paid,0) end
				OR Isnull(Chiro_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 1000 then Chiro_Paid else 1001 end
								   else Isnull(Chiro_Paid,0) end
				OR Isnull(Massage_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Massage_Paid > 0 then Massage_Paid else 1 end
								   else Isnull(Massage_Paid,0) end
				OR Isnull(Osteopathy_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Osteopathy_Paid > 0 then Osteopathy_Paid else 1 end
								   else Isnull(Osteopathy_Paid,0) end
				OR Isnull(Acupuncture_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Acupuncture_Paid > 0 then Acupuncture_Paid else 1 end
								   else Isnull(Acupuncture_Paid,0) end
				OR Isnull(Rehab_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 0 then Rehab_Paid else 1 end
								   else Isnull(Rehab_Paid,0) end)
			AND NCMM_Actions_This_Week = case when @ClaimType like '%ncmm_this_week' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '1' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like '%ncmm_next_week' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '1' end
											  else NCMM_Actions_Next_Week end							 																 
	END
	ELSE IF @ClaimType like 'claim_re_open%'
	BEGIN
		select *
		from [dbo].[udf_CPR_Raw] ('hem', @End_Date, @Period_Type) cpr 
		where @Value = case when @Value <> 'all' and @Value <> 'hotel' and @Type = 'portfolio' then Portfolio
							  when @Value <> 'all' and @Type = 'group' then [Group]
							  when @Value = 'all' then 'all'
							  when @Value = 'hotel' and Portfolio in ('Accommodation','Pubs, Taverns and Bars') then 'hotel'
						 end
			AND @SubValue = case when @SubValue <> 'all' and @Type = 'portfolio' then EMPL_SIZE
								 when @SubValue <> 'all' and @Type = 'group' then Team
								 when @SubValue = 'all' then 'all'
							end
			AND @SubSubValue = case when @SubSubValue <> 'all' then Claims_Officer_Name
									else 'all'
							   end	
			AND Date_Claim_Reopened between @Start_Date and @End_Date	
			--common condition--
			AND Is_Medical_Only = case when @ClaimType like '%med_only' then 1 else Is_Medical_Only end
			AND Is_D_D = case when @ClaimType like '%d_d' then 1 else Is_D_D end
			AND (Total_Recoveries = case when @ClaimType like '%lum_sum_in' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
										 else Total_Recoveries end
				OR Common_Law = case when @ClaimType like '%lum_sum_in' then 1 else Common_Law end
				OR isnull(WPI,0) = case when @ClaimType like '%lum_sum_in' then case when WPI >= 0 then WPI else 1 end
							  else isnull(WPI,0) end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 3 else Result_Of_Injury_Code end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 1 else Result_Of_Injury_Code end
				OR Is_Industrial_Deafness = case when @ClaimType like '%lum_sum_in' then 1 else Is_Industrial_Deafness end 
				)
			AND Med_Cert_Status = case when @ClaimType like '%totally_unfit' then 'TU'
									   when @ClaimType like '%ffsd_at_work_15_less' then 'SID'
									   when @ClaimType like '%ffsd_at_work_15_more' then 'SID'
									   when @ClaimType like '%ffsd_not_at_work' then 'SID'
									   when @ClaimType like '%pid' then 'PID'
									   else Med_Cert_Status end
			AND case when @ClaimType like '%ffsd_not_at_work'
						or @ClaimType like '%ffsd_at_work_15_more'
						or @ClaimType like '%ffsd_at_work_15_less' then Is_Working
					 else isnull(Is_Working,0) end 
					 = 
					 case when @ClaimType like '%ffsd_at_work_15_less' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_at_work_15_more' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_not_at_work' and Is_Working is not null then 0
						  else isnull(Is_Working,0) end
			AND HoursPerWeek = case when @ClaimType like '%ffsd_at_work_15_less' then case when HoursPerWeek <= 15 then HoursPerWeek else 15 end
									when @ClaimType like '%ffsd_at_work_15_more' then case when HoursPerWeek > 15 then HoursPerWeek else 16 end
									else HoursPerWeek end									
			AND (Isnull(Physio_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Physio_Paid > 2000 then Physio_Paid else 2001 end
								   else Isnull(Physio_Paid,0) end
				OR Isnull(Chiro_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 1000 then Chiro_Paid else 1001 end
								   else Isnull(Chiro_Paid,0) end
				OR Isnull(Massage_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Massage_Paid > 0 then Massage_Paid else 1 end
								   else Isnull(Massage_Paid,0) end
				OR Isnull(Osteopathy_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Osteopathy_Paid > 0 then Osteopathy_Paid else 1 end
								   else Isnull(Osteopathy_Paid,0) end
				OR Isnull(Acupuncture_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Acupuncture_Paid > 0 then Acupuncture_Paid else 1 end
								   else Isnull(Acupuncture_Paid,0) end
				OR Isnull(Rehab_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 0 then Rehab_Paid else 1 end
								   else Isnull(Rehab_Paid,0) end)
			AND NCMM_Actions_This_Week = case when @ClaimType like '%ncmm_this_week' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '1' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like '%ncmm_next_week' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '1' end
											  else NCMM_Actions_Next_Week end							 																 
	END
	ELSE IF @ClaimType like 'claim_closure%'
	BEGIN
		select *
		from [dbo].[udf_CPR_Raw] ('hem', @End_Date, @Period_Type) cpr 
		where @Value = case when @Value <> 'all' and @Value <> 'hotel' and @Type = 'portfolio' then Portfolio
							  when @Value <> 'all' and @Type = 'group' then [Group]
							  when @Value = 'all' then 'all'
							  when @Value = 'hotel' and Portfolio in ('Accommodation','Pubs, Taverns and Bars') then 'hotel'
						 end
			AND @SubValue = case when @SubValue <> 'all' and @Type = 'portfolio' then EMPL_SIZE
								 when @SubValue <> 'all' and @Type = 'group' then Team
								 when @SubValue = 'all' then 'all'
							end
			AND @SubSubValue = case when @SubSubValue <> 'all' then Claims_Officer_Name
									else 'all'
							   end	
			AND Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and (@IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 
				or exists (SELECT [Claim_No] FROM [dbo].[udf_CPR_Raw]('hem', DATEADD(DAY, -1, @Start_Date) + '23:59',-1) cpr_pre
							WHERE cpr_pre.Claim_No = cpr.Claim_No AND cpr_pre.Claim_Closed_Flag = 'N')
				or ISNULL(Date_Claim_Entered, date_claim_received) >= @Start_Date)
			--common condition--
			AND Is_Medical_Only = case when @ClaimType like '%med_only' then 1 else Is_Medical_Only end
			AND Is_D_D = case when @ClaimType like '%d_d' then 1 else Is_D_D end
			AND (Total_Recoveries = case when @ClaimType like '%lum_sum_in' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
										 else Total_Recoveries end
				OR Common_Law = case when @ClaimType like '%lum_sum_in' then 1 else Common_Law end
				OR isnull(WPI,0) = case when @ClaimType like '%lum_sum_in' then case when WPI >= 0 then WPI else 1 end
							  else isnull(WPI,0) end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 3 else Result_Of_Injury_Code end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 1 else Result_Of_Injury_Code end
				OR Is_Industrial_Deafness = case when @ClaimType like '%lum_sum_in' then 1 else Is_Industrial_Deafness end 
				)
			AND Med_Cert_Status = case when @ClaimType like '%totally_unfit' then 'TU'
									   when @ClaimType like '%ffsd_at_work_15_less' then 'SID'
									   when @ClaimType like '%ffsd_at_work_15_more' then 'SID'
									   when @ClaimType like '%ffsd_not_at_work' then 'SID'
									   when @ClaimType like '%pid' then 'PID'
									   else Med_Cert_Status end
			AND case when @ClaimType like '%ffsd_not_at_work'
						or @ClaimType like '%ffsd_at_work_15_more'
						or @ClaimType like '%ffsd_at_work_15_less' then Is_Working
					 else isnull(Is_Working,0) end 
					 = 
					 case when @ClaimType like '%ffsd_at_work_15_less' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_at_work_15_more' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_not_at_work' and Is_Working is not null then 0
						  else isnull(Is_Working,0) end
			AND HoursPerWeek = case when @ClaimType like '%ffsd_at_work_15_less' then case when HoursPerWeek <= 15 then HoursPerWeek else 15 end
									when @ClaimType like '%ffsd_at_work_15_more' then case when HoursPerWeek > 15 then HoursPerWeek else 16 end
									else HoursPerWeek end									
			AND (Isnull(Physio_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Physio_Paid > 2000 then Physio_Paid else 2001 end
								   else Isnull(Physio_Paid,0) end
				OR Isnull(Chiro_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 1000 then Chiro_Paid else 1001 end
								   else Isnull(Chiro_Paid,0) end
				OR Isnull(Massage_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Massage_Paid > 0 then Massage_Paid else 1 end
								   else Isnull(Massage_Paid,0) end
				OR Isnull(Osteopathy_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Osteopathy_Paid > 0 then Osteopathy_Paid else 1 end
								   else Isnull(Osteopathy_Paid,0) end
				OR Isnull(Acupuncture_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Acupuncture_Paid > 0 then Acupuncture_Paid else 1 end
								   else Isnull(Acupuncture_Paid,0) end
				OR Isnull(Rehab_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 0 then Rehab_Paid else 1 end
								   else Isnull(Rehab_Paid,0) end)
			AND NCMM_Actions_This_Week = case when @ClaimType like '%ncmm_this_week' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '1' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like '%ncmm_next_week' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '1' end
											  else NCMM_Actions_Next_Week end							 																 
	END
	ELSE IF @ClaimType like 'claim_still_open%'
	BEGIN
		select *
		from [dbo].[udf_CPR_Raw] ('hem', @End_Date, @Period_Type) cpr 
		where @Value = case when @Value <> 'all' and @Value <> 'hotel' and @Type = 'portfolio' then Portfolio
							  when @Value <> 'all' and @Type = 'group' then [Group]
							  when @Value = 'all' then 'all'
							  when @Value = 'hotel' and Portfolio in ('Accommodation','Pubs, Taverns and Bars') then 'hotel'
						 end
			AND @SubValue = case when @SubValue <> 'all' and @Type = 'portfolio' then EMPL_SIZE
								 when @SubValue <> 'all' and @Type = 'group' then Team
								 when @SubValue = 'all' then 'all'
							end
			AND @SubSubValue = case when @SubSubValue <> 'all' then Claims_Officer_Name
									else 'all'
							   end	
			AND Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and (case when @IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 then IsPreClosed else 1 end) = 1
			and (@IsLastMonthRange = 1 or @IsLast2WeeksRange = 1
				or exists (SELECT [Claim_No] FROM [dbo].[udf_CPR_Raw]('hem', DATEADD(DAY, -1, @Start_Date) + '23:59',-1) cpr_pre
							WHERE cpr_pre.Claim_No = cpr.Claim_No AND cpr_pre.Claim_Closed_Flag = 'Y'))
			--common condition--
			AND Is_Medical_Only = case when @ClaimType like '%med_only' then 1 else Is_Medical_Only end
			AND Is_D_D = case when @ClaimType like '%d_d' then 1 else Is_D_D end
			AND (Total_Recoveries = case when @ClaimType like '%lum_sum_in' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
										 else Total_Recoveries end
				OR Common_Law = case when @ClaimType like '%lum_sum_in' then 1 else Common_Law end
				OR isnull(WPI,0) = case when @ClaimType like '%lum_sum_in' then case when WPI >= 0 then WPI else 1 end
							  else isnull(WPI,0) end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 3 else Result_Of_Injury_Code end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 1 else Result_Of_Injury_Code end
				OR Is_Industrial_Deafness = case when @ClaimType like '%lum_sum_in' then 1 else Is_Industrial_Deafness end 
				)
			AND Med_Cert_Status = case when @ClaimType like '%totally_unfit' then 'TU'
									   when @ClaimType like '%ffsd_at_work_15_less' then 'SID'
									   when @ClaimType like '%ffsd_at_work_15_more' then 'SID'
									   when @ClaimType like '%ffsd_not_at_work' then 'SID'
									   when @ClaimType like '%pid' then 'PID'
									   else Med_Cert_Status end
			AND case when @ClaimType like '%ffsd_not_at_work'
						or @ClaimType like '%ffsd_at_work_15_more'
						or @ClaimType like '%ffsd_at_work_15_less' then Is_Working
					 else isnull(Is_Working,0) end 
					 = 
					 case when @ClaimType like '%ffsd_at_work_15_less' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_at_work_15_more' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_not_at_work' and Is_Working is not null then 0
						  else isnull(Is_Working,0) end
			AND HoursPerWeek = case when @ClaimType like '%ffsd_at_work_15_less' then case when HoursPerWeek <= 15 then HoursPerWeek else 15 end
									when @ClaimType like '%ffsd_at_work_15_more' then case when HoursPerWeek > 15 then HoursPerWeek else 16 end
									else HoursPerWeek end									
			AND (Isnull(Physio_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Physio_Paid > 2000 then Physio_Paid else 2001 end
								   else Isnull(Physio_Paid,0) end
				OR Isnull(Chiro_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 1000 then Chiro_Paid else 1001 end
								   else Isnull(Chiro_Paid,0) end
				OR Isnull(Massage_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Massage_Paid > 0 then Massage_Paid else 1 end
								   else Isnull(Massage_Paid,0) end
				OR Isnull(Osteopathy_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Osteopathy_Paid > 0 then Osteopathy_Paid else 1 end
								   else Isnull(Osteopathy_Paid,0) end
				OR Isnull(Acupuncture_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Acupuncture_Paid > 0 then Acupuncture_Paid else 1 end
								   else Isnull(Acupuncture_Paid,0) end
				OR Isnull(Rehab_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 0 then Rehab_Paid else 1 end
								   else Isnull(Rehab_Paid,0) end)
			AND NCMM_Actions_This_Week = case when @ClaimType like '%ncmm_this_week' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '1' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like '%ncmm_next_week' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '1' end
											  else NCMM_Actions_Next_Week end	
	END	
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_HEM_CPR_Raw.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_PORT_Agency_Group_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_PORT_Agency_Group_Summary]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_PORT_Agency_Group_Summary]
GO

CREATE PROCEDURE [dbo].[usp_PORT_Agency_Group_Summary]
(
	@System VARCHAR(20)
	,@Type VARCHAR(20)
	,@Start_Date DATETIME
	,@End_Date DATETIME
	,@Claim_Liability_Indicator NVARCHAR(256)
	,@Psychological_Claims VARCHAR(10)
	,@Inactive_Claims VARCHAR(10)
	,@Medically_Discharged VARCHAR(10)
	,@Exempt_From_Reform VARCHAR(10)
	,@Reactivation VARCHAR(10)
)
AS
BEGIN
	-- Determine the last month period
	DECLARE @LastMonth_Start_Date datetime = DATEADD(m, -1, DATEADD(m, DATEDIFF(m, 0, GETDATE()), 0))
	DECLARE @LastMonth_End_Date datetime = DATEADD(m, DATEDIFF(m, 0, GETDATE()), -1) + '23:59'
	
	-- Determine last two weeks: Start = last two weeks from yesterday; End = yesterday
	DECLARE @Last2Weeks_Start_Date datetime = DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
	DECLARE @Last2Weeks_End_Date datetime = DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))) + '23:59'
	
	DECLARE @IsLastMonthRange bit = 0
	IF DATEDIFF(d, @LastMonth_Start_Date, @Start_Date) = 0 AND DATEDIFF(d, @LastMonth_End_Date, @End_Date) = 0
	BEGIN
		SET @IsLastMonthRange = 1
	END
	
	DECLARE @IsLast2WeeksRange bit = 0
	IF DATEDIFF(d, @Last2Weeks_Start_Date, @Start_Date) = 0 AND DATEDIFF(d, @Last2Weeks_End_Date, @End_Date) = 0
	BEGIN
		SET @IsLast2WeeksRange = 1
	END
	
	DECLARE @Period_Type int
	IF @IsLastMonthRange = 1
	BEGIN
		SET @Period_Type = 1
	END
	ELSE IF @IsLast2WeeksRange = 1
	BEGIN
		SET @Period_Type = 0
	END
	ELSE IF @IsLastMonthRange = 0 AND @IsLast2WeeksRange = 0
	BEGIN
		SET @Period_Type = -1
	END
	
	-- PREPARE DATA FOR QUERYING

	-- NEW CLAIMS
	SELECT *, weeks_since_injury = 0
	INTO #claim_new_all 
	FROM [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,-1)
	WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
		  and (case when @Claim_Liability_Indicator <> 'all' then Claim_Liability_Indicator_Group	else '1' end)
				= (case when @Claim_Liability_Indicator <> 'all' then @Claim_Liability_Indicator else '1' end)
	
	-- CLAIM CLOSURES
	-- @IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 => use IsPreOpened = 1 condition else => bypass this condition
	SELECT *, weeks_since_injury = 0
	INTO #claim_closure 
	FROM [dbo].[udf_PORT_Overall](@System, @Type, @End_Date, @Period_Type) cpr
	WHERE Date_Claim_Closed between @Start_Date and @End_Date
		and Claim_Closed_Flag = 'Y'
		and (case when @IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 then IsPreOpened else 1 end) = 1
		and (@IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 
			or exists (SELECT [Claim_No] FROM [dbo].[udf_PORT_Overall](@System,@Type, DATEADD(DAY, -1, @Start_Date) + '23:59',-1) cpr_pre
							WHERE cpr_pre.Claim_No = cpr.Claim_No AND cpr_pre.Claim_Closed_Flag = 'N')
			or ISNULL(cpr.Date_Claim_Entered, cpr.date_claim_received) >= @Start_Date)
	
	-- REOPEN CLAIMS
	SELECT *, weeks_since_injury = 0
	INTO #claim_re_open 
	FROM [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,-1)
	WHERE Date_Claim_Reopened between @Start_Date and @End_Date
	
	-- REOPEN CLAIMS: STILL OPEN
	-- @IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 => use IsPreClosed = 1 condition else => bypass this condition
	SELECT *, weeks_since_injury = 0
	INTO #claim_re_open_still_open
	FROM [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,@Period_Type) cpr
	WHERE Date_Claim_Reopened between @Start_Date and @End_Date
		and Claim_Closed_Flag <> 'Y'
		and (case when @IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 then IsPreClosed else 1 end) = 1
		and (@IsLastMonthRange = 1 or @IsLast2WeeksRange = 1
			or exists (SELECT [Claim_No] FROM [dbo].[udf_PORT_Overall](@System,@Type, DATEADD(DAY, -1, @Start_Date) + '23:59',-1) cpr_pre
							WHERE cpr_pre.Claim_No = cpr.Claim_No AND cpr_pre.Claim_Closed_Flag = 'Y'))
	
	-- OPEN CLAIMS
	SELECT *, weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 
	INTO #claim_open_all
	FROM [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,-1)
	WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date) 
			and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
			
			and (case when @Psychological_Claims <> 'all' then Is_Stress else '1' end)
				= (case when @Psychological_Claims <> 'all'	then @Psychological_Claims	else '1' end)

			and (case when @Inactive_Claims <> 'all' then Is_Inactive_Claims else '1' end)
				= (case when @Inactive_Claims <> 'all'	then  @Inactive_Claims	else '1' end)

			and (case when @Medically_Discharged <> 'all' then Is_Medically_Discharged	else '1' end)
				= (case when @Medically_Discharged <> 'all' then @Medically_Discharged else '1'	end)

			and (case when @Exempt_From_Reform <> 'all'	then Is_Exempt	else '1' end)
				= (case when @Exempt_From_Reform <> 'all' then @Exempt_From_Reform	else '1' end)

			and (case when @Reactivation <> 'all' then Is_Reactive	else '1' end)
				= (case when @Reactivation <> 'all'	then @Reactivation	else '1' end)
	
	SELECT * 
	INTO #claim_all 
	FROM (select *,claim_type='claim_new_all' from #claim_new_all
			   union all select *,claim_type='claim_new_nlt' from #claim_new_all where is_Time_Lost=0
			   union all select *,claim_type='claim_new_lt' from #claim_new_all where is_Time_Lost=1
			   union all select *,claim_type='claim_closure' from #claim_closure
			   union all select *,claim_type='claim_re_open' from #claim_re_open
			   union all select *,claim_type='claim_still_open' from #claim_re_open_still_open
			   union all select *,claim_type='claim_open_all' from #claim_open_all
			   union all select *,claim_type='claim_open_nlt' from #claim_open_all where is_Time_Lost=0
			   union all select *,claim_type='claim_open_0_13' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 13
			   union all select *,claim_type='claim_open_13_26' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 13 and weeks_since_injury <= 26
			   union all select *,claim_type='claim_open_26_52' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 26 and weeks_since_injury <= 52
			   union all select *,claim_type='claim_open_52_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 52 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_0_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_78_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 78 and weeks_since_injury <= 130
			   union all select *,claim_type='claim_open_gt_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 130
			   union all select *,claim_type='claim_open_ncmm_this_week' from #claim_open_all WHERE NCMM_Actions_This_Week <> ''
			   union all select *,claim_type='claim_open_ncmm_next_week' from #claim_open_all WHERE NCMM_Actions_Next_Week <> ''
			   union all select *,claim_type='claim_open_acupuncture' from #claim_open_all WHERE Acupuncture_Paid > 0
			   union all select *,claim_type='claim_open_chiro' from #claim_open_all  WHERE Chiro_Paid > 1000
			   union all select *,claim_type='claim_open_massage' from #claim_open_all  WHERE Massage_Paid > 0
			   union all select *,claim_type='claim_open_osteo' from #claim_open_all  WHERE Osteopathy_Paid > 0
			   union all select *,claim_type='claim_open_physio' from #claim_open_all  WHERE Physio_Paid > 2000
			   union all select *,claim_type='claim_open_rehab' from #claim_open_all WHERE Rehab_Paid > 0
			   union all select *,claim_type='claim_open_death' from #claim_open_all WHERE Result_Of_Injury_Code = 1
			   union all select *,claim_type='claim_open_industrial_deafness' from #claim_open_all  WHERE Is_Industrial_Deafness = 1
			   union all select *,claim_type='claim_open_ppd' from #claim_open_all  WHERE Result_Of_Injury_Code = 3
			   union all select *,claim_type='claim_open_recovery' from #claim_open_all WHERE Total_Recoveries <> 0
			   union all select *,claim_type='claim_open_wpi_all' from #claim_open_all WHERE WPI > 0
			   union all select *,claim_type='claim_open_wpi_0_10' from #claim_open_all WHERE WPI > 0 AND WPI <= 10
			   union all select *,claim_type='claim_open_wpi_11_14' from #claim_open_all WHERE WPI >= 11 AND WPI <= 14
			   union all select *,claim_type='claim_open_wpi_15_20' from #claim_open_all WHERE WPI >= 15 AND WPI <= 20
			   union all select *,claim_type='claim_open_wpi_21_30' from #claim_open_all WHERE WPI >= 21 AND WPI <= 30
			   union all select *,claim_type='claim_open_wpi_31_more' from #claim_open_all WHERE WPI >= 31
			   union all select *,claim_type='claim_open_wid' from #claim_open_all WHERE Common_Law = 1
			   ) as tmp
			
	SELECT  tmp.Value,Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=tmp.Value)
						
		,med_only = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=tmp.Value and Is_Medical_Only = 1)
						
		,d_d = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=tmp.Value and Is_D_D = 1)
		
		,lum_sum_in = (select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type and [Value]=tmp.Value
						and (Total_Recoveries <> 0 or Common_Law = 1 or WPI >= 0 or Result_Of_Injury_Code = 3 or Result_Of_Injury_Code = 1 or Is_Industrial_Deafness = 1))
		
		,totally_unfit = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=tmp.Value and  Med_Cert_Status = 'TU')
		
		,ffsd_at_work_15_less = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=tmp.Value and  Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek <= 15)
		
		,ffsd_at_work_15_more = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=tmp.Value and  Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek > 15)
						
		,ffsd_not_at_work = (select COUNT(distinct Claim_No) from #claim_all	where claim_type =tmp.Claim_Type  and [Value]=tmp.Value and  Med_Cert_Status = 'SID' and Is_Working = 0)
		
		,pid = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=tmp.Value and  Med_Cert_Status = 'PID')					
		
		,therapy_treat=(select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type and [Value]=tmp.Value 
						and (Physio_Paid > 2000 or Chiro_Paid > 1000 or Massage_Paid > 0 or Osteopathy_Paid > 0 or Acupuncture_Paid > 0 or Rehab_Paid > 0))		
		,ncmm_this_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type and [Value]=tmp.Value and NCMM_Actions_This_Week <> '')
		,ncmm_next_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type and [Value]=tmp.Value and NCMM_Actions_Next_Week <> '') 
	INTO #total
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct Value 
						from [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,0) 
						where Value <> '' and Claim_Closed_Flag <> 'Y'
						group by Value
						having COUNT(*) > 0) as tmp_value
	) as tmp
	
	-- GET RESULTS
	
	SELECT * FROM #total
	
	UNION ALL -- Grouping Value: Health & Other
	
	SELECT Value = 'HEALTH & OTHER', Claim_Type, SUM(overall) as overall, SUM(med_only) as med_only, SUM(d_d) as d_d, SUM(lum_sum_in) as lum_sum_in, SUM(totally_unfit) as totally_unfit, SUM(ffsd_at_work_15_less) as ffsd_at_work_15_less, SUM(ffsd_at_work_15_more) as ffsd_at_work_15_more, SUM(ffsd_not_at_work) as ffsd_not_at_work, SUM(pid) as pid, SUM(therapy_treat) as therapy_treat, SUM(ncmm_this_week) as ncmm_this_week, SUM(ncmm_next_week) as ncmm_next_week
	FROM #total
	WHERE (Value = 'Health' or Value = 'Other') and UPPER(@System) = 'TMF'
	GROUP BY Claim_Type
	
	UNION ALL -- Grouping Value: Police & Fire
	
	SELECT Value = 'POLICE & FIRE', Claim_Type, SUM(overall) as overall, SUM(med_only) as med_only, SUM(d_d) as d_d, SUM(lum_sum_in) as lum_sum_in, SUM(totally_unfit) as totally_unfit, SUM(ffsd_at_work_15_less) as ffsd_at_work_15_less, SUM(ffsd_at_work_15_more) as ffsd_at_work_15_more, SUM(ffsd_not_at_work) as ffsd_not_at_work, SUM(pid) as pid, SUM(therapy_treat) as therapy_treat, SUM(ncmm_this_week) as ncmm_this_week, SUM(ncmm_next_week) as ncmm_next_week
	FROM #total
	WHERE (Value = 'Police' or Value = 'Fire') and UPPER(@System) = 'TMF'
	GROUP BY Claim_Type
	
	UNION ALL -- Grouping Value: Hotel
	
	SELECT Value = 'Hotel', Claim_Type, SUM(overall) as overall, SUM(med_only) as med_only, SUM(d_d) as d_d, SUM(lum_sum_in) as lum_sum_in, SUM(totally_unfit) as totally_unfit, SUM(ffsd_at_work_15_less) as ffsd_at_work_15_less, SUM(ffsd_at_work_15_more) as ffsd_at_work_15_more, SUM(ffsd_not_at_work) as ffsd_not_at_work, SUM(pid) as pid, SUM(therapy_treat) as therapy_treat, SUM(ncmm_this_week) as ncmm_this_week, SUM(ncmm_next_week) as ncmm_next_week
	FROM #total
	WHERE (Value = 'Accommodation' or Value = 'Pubs, Taverns and Bars') and UPPER(@System) = 'HEM'
	GROUP BY Claim_Type

	UNION ALL -- TMF
	
	SELECT Value = 'TMF_total', Claim_Type, SUM(overall) as overall, SUM(med_only) as med_only, SUM(d_d) as d_d, SUM(lum_sum_in) as lum_sum_in, SUM(totally_unfit) as totally_unfit, SUM(ffsd_at_work_15_less) as ffsd_at_work_15_less, SUM(ffsd_at_work_15_more) as ffsd_at_work_15_more, SUM(ffsd_not_at_work) as ffsd_not_at_work, SUM(pid) as pid, SUM(therapy_treat) as therapy_treat, SUM(ncmm_this_week) as ncmm_this_week, SUM(ncmm_next_week) as ncmm_next_week
	FROM #total
	WHERE UPPER(@System) = 'TMF'
	GROUP BY Claim_Type
	
	UNION ALL -- WCNSW
	
	SELECT Value = 'WCNSW_total', Claim_Type, SUM(overall) as overall, SUM(med_only) as med_only, SUM(d_d) as d_d, SUM(lum_sum_in) as lum_sum_in, SUM(totally_unfit) as totally_unfit, SUM(ffsd_at_work_15_less) as ffsd_at_work_15_less, SUM(ffsd_at_work_15_more) as ffsd_at_work_15_more, SUM(ffsd_not_at_work) as ffsd_not_at_work, SUM(pid) as pid, SUM(therapy_treat) as therapy_treat, SUM(ncmm_this_week) as ncmm_this_week, SUM(ncmm_next_week) as ncmm_next_week
	FROM #total
	WHERE UPPER(@System) = 'EML'
	GROUP BY Claim_Type
	
	UNION ALL -- Hospitality
	
	SELECT Value = 'Hospitality_total', Claim_Type, SUM(overall) as overall, SUM(med_only) as med_only, SUM(d_d) as d_d, SUM(lum_sum_in) as lum_sum_in, SUM(totally_unfit) as totally_unfit, SUM(ffsd_at_work_15_less) as ffsd_at_work_15_less, SUM(ffsd_at_work_15_more) as ffsd_at_work_15_more, SUM(ffsd_not_at_work) as ffsd_not_at_work, SUM(pid) as pid, SUM(therapy_treat) as therapy_treat, SUM(ncmm_this_week) as ncmm_this_week, SUM(ncmm_next_week) as ncmm_next_week
	FROM #total
	WHERE UPPER(@System) = 'HEM'
	GROUP BY Claim_Type
	
	DROP TABLE #total
	DROP TABLE #claim_all
	DROP TABLE #claim_closure
	DROP TABLE #claim_new_all
	DROP TABLE #claim_open_all
	DROP TABLE #claim_re_open
	DROP TABLE #claim_re_open_still_open
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_PORT_Agency_Group_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_PORT_ClaimOfficer_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_PORT_ClaimOfficer_Summary]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_PORT_ClaimOfficer_Summary]
GO

CREATE PROCEDURE [dbo].[usp_PORT_ClaimOfficer_Summary]
(
	@System VARCHAR(20)
	,@Type VARCHAR(20)
	,@Value NVARCHAR(256)
	,@SubValue NVARCHAR(256)
	,@Start_Date DATETIME
	,@End_Date DATETIME
	,@Claim_Liability_Indicator NVARCHAR(256)
	,@Psychological_Claims VARCHAR(10)
	,@Inactive_Claims VARCHAR(10)
	,@Medically_Discharged VARCHAR(10)
	,@Exempt_From_Reform VARCHAR(10)
	,@Reactivation VARCHAR(10)
)
AS
BEGIN
	-- Determine the last month period
	DECLARE @LastMonth_Start_Date datetime = DATEADD(m, -1, DATEADD(m, DATEDIFF(m, 0, GETDATE()), 0))
	DECLARE @LastMonth_End_Date datetime = DATEADD(m, DATEDIFF(m, 0, GETDATE()), -1) + '23:59'
	
	-- Determine last two weeks: Start = last two weeks from yesterday; End = yesterday
	DECLARE @Last2Weeks_Start_Date datetime = DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
	DECLARE @Last2Weeks_End_Date datetime = DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))) + '23:59'
	
	DECLARE @IsLastMonthRange bit = 0
	IF DATEDIFF(d, @LastMonth_Start_Date, @Start_Date) = 0 AND DATEDIFF(d, @LastMonth_End_Date, @End_Date) = 0
	BEGIN
		SET @IsLastMonthRange = 1
	END
	
	DECLARE @IsLast2WeeksRange bit = 0
	IF DATEDIFF(d, @Last2Weeks_Start_Date, @Start_Date) = 0 AND DATEDIFF(d, @Last2Weeks_End_Date, @End_Date) = 0
	BEGIN
		SET @IsLast2WeeksRange = 1
	END
	
	DECLARE @Period_Type int
	IF @IsLastMonthRange = 1
	BEGIN
		SET @Period_Type = 1
	END
	ELSE IF @IsLast2WeeksRange = 1
	BEGIN
		SET @Period_Type = 0
	END
	ELSE IF @IsLastMonthRange = 0 AND @IsLast2WeeksRange = 0
	BEGIN
		SET @Period_Type = -1
	END

	-- PREPARE DATA FOR QUERYING

	-- NEW CLAIMS
	SELECT *, weeks_since_injury = 0
	INTO #claim_new_all 
	FROM [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,-1)
	WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
		  and (case when @Claim_Liability_Indicator <> 'all' then Claim_Liability_Indicator_Group	else '1' end)
				= (case when @Claim_Liability_Indicator <> 'all' then @Claim_Liability_Indicator else '1' end)
	
	-- CLAIM CLOSURES
	-- @IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 => use IsPreOpened = 1 condition else => bypass this condition
	SELECT *, weeks_since_injury = 0
	INTO #claim_closure
	FROM [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,@Period_Type) cpr
	WHERE Date_Claim_Closed between @Start_Date and @End_Date
		and Claim_Closed_Flag = 'Y'
		and (case when @IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 then IsPreOpened else 1 end) = 1
		and (@IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 
			or exists (SELECT [Claim_No] FROM [dbo].[udf_PORT_Overall](@System,@Type, DATEADD(DAY, -1, @Start_Date) + '23:59',-1) cpr_pre
							WHERE cpr_pre.Claim_No = cpr.Claim_No AND cpr_pre.Claim_Closed_Flag = 'N')
			or ISNULL(cpr.Date_Claim_Entered, cpr.date_claim_received) >= @Start_Date)
	
	-- REOPEN CLAIMS
	SELECT *, weeks_since_injury = 0
	INTO #claim_re_open 
	FROM [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,-1)
	WHERE Date_Claim_Reopened between @Start_Date and @End_Date
	
	-- REOPEN CLAIMS: STILL OPEN
	-- @IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 => use IsPreClosed = 1 condition else => bypass this condition
	SELECT *, weeks_since_injury = 0
	INTO #claim_re_open_still_open
	FROM [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,@Period_Type) cpr
	WHERE Date_Claim_Reopened between @Start_Date and @End_Date
		and Claim_Closed_Flag <> 'Y'
		and (case when @IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 then IsPreClosed else 1 end) = 1
		and (@IsLastMonthRange = 1 or @IsLast2WeeksRange = 1
			or exists (SELECT [Claim_No] FROM [dbo].[udf_PORT_Overall](@System,@Type, DATEADD(DAY, -1, @Start_Date) + '23:59',-1) cpr_pre
							WHERE cpr_pre.Claim_No = cpr.Claim_No AND cpr_pre.Claim_Closed_Flag = 'Y'))
	
	-- OPEN CLAIMS
	SELECT *, weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 
	INTO #claim_open_all
	FROM [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,-1)
	WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date) 
			and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
			
			and (case when @Psychological_Claims <> 'all' then Is_Stress else '1' end)
				= (case when @Psychological_Claims <> 'all'	then @Psychological_Claims	else '1' end)

			and (case when @Inactive_Claims <> 'all' then Is_Inactive_Claims else '1' end)
				= (case when @Inactive_Claims <> 'all'	then  @Inactive_Claims	else '1' end)

			and (case when @Medically_Discharged <> 'all' then Is_Medically_Discharged	else '1' end)
				= (case when @Medically_Discharged <> 'all' then @Medically_Discharged else '1'	end)

			and (case when @Exempt_From_Reform <> 'all'	then Is_Exempt	else '1' end)
				= (case when @Exempt_From_Reform <> 'all' then @Exempt_From_Reform	else '1' end)

			and (case when @Reactivation <> 'all' then Is_Reactive	else '1' end)
				= (case when @Reactivation <> 'all'	then @Reactivation	else '1' end)
	
	SELECT * 
	INTO #claim_all 
	FROM (select *,claim_type='claim_new_all' from #claim_new_all
			   union all select *,claim_type='claim_new_nlt' from #claim_new_all where is_Time_Lost=0
			   union all select *,claim_type='claim_new_lt' from #claim_new_all where is_Time_Lost=1
			   union all select *,claim_type='claim_closure' from #claim_closure
			   union all select *,claim_type='claim_re_open' from #claim_re_open
			   union all select *,claim_type='claim_still_open' from #claim_re_open_still_open
			   union all select *,claim_type='claim_open_all' from #claim_open_all
			   union all select *,claim_type='claim_open_nlt' from #claim_open_all where is_Time_Lost=0
			   union all select *,claim_type='claim_open_0_13' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 13
			   union all select *,claim_type='claim_open_13_26' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 13 and weeks_since_injury <= 26
			   union all select *,claim_type='claim_open_26_52' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 26 and weeks_since_injury <= 52
			   union all select *,claim_type='claim_open_52_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 52 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_0_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_78_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 78 and weeks_since_injury <= 130
			   union all select *,claim_type='claim_open_gt_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 130
			   union all select *,claim_type='claim_open_ncmm_this_week' from #claim_open_all WHERE NCMM_Actions_This_Week <> ''
			   union all select *,claim_type='claim_open_ncmm_next_week' from #claim_open_all WHERE NCMM_Actions_Next_Week <> ''
			   union all select *,claim_type='claim_open_acupuncture' from #claim_open_all WHERE Acupuncture_Paid > 0
			   union all select *,claim_type='claim_open_chiro' from #claim_open_all  WHERE Chiro_Paid > 1000
			   union all select *,claim_type='claim_open_massage' from #claim_open_all  WHERE Massage_Paid > 0
			   union all select *,claim_type='claim_open_osteo' from #claim_open_all  WHERE Osteopathy_Paid > 0
			   union all select *,claim_type='claim_open_physio' from #claim_open_all  WHERE Physio_Paid > 2000
			   union all select *,claim_type='claim_open_rehab' from #claim_open_all WHERE Rehab_Paid > 0
			   union all select *,claim_type='claim_open_death' from #claim_open_all WHERE Result_Of_Injury_Code = 1
			   union all select *,claim_type='claim_open_industrial_deafness' from #claim_open_all  WHERE Is_Industrial_Deafness = 1
			   union all select *,claim_type='claim_open_ppd' from #claim_open_all  WHERE Result_Of_Injury_Code = 3
			   union all select *,claim_type='claim_open_recovery' from #claim_open_all WHERE Total_Recoveries <> 0
			   union all select *,claim_type='claim_open_wpi_all' from #claim_open_all WHERE WPI > 0
			   union all select *,claim_type='claim_open_wpi_0_10' from #claim_open_all WHERE WPI > 0 AND WPI <= 10
			   union all select *,claim_type='claim_open_wpi_11_14' from #claim_open_all WHERE WPI >= 11 AND WPI <= 14
			   union all select *,claim_type='claim_open_wpi_15_20' from #claim_open_all WHERE WPI >= 15 AND WPI <= 20
			   union all select *,claim_type='claim_open_wpi_21_30' from #claim_open_all WHERE WPI >= 21 AND WPI <= 30
			   union all select *,claim_type='claim_open_wpi_31_more' from #claim_open_all WHERE WPI >= 31
			   union all select *,claim_type='claim_open_wid' from #claim_open_all WHERE Common_Law = 1
			   ) as tmp
			   
			
	SELECT  tmp.Value,Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=@Value and [SubValue]=@SubValue and [SubValue2]=tmp.Value)
						
		,med_only = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=@Value and [SubValue]=@SubValue and [SubValue2]=tmp.Value and Is_Medical_Only = 1)
						
		,d_d = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=@Value and [SubValue]=@SubValue and [SubValue2]=tmp.Value and Is_D_D = 1)
		
		,lum_sum_in = (select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type and [Value]=@Value and [SubValue]=@SubValue and [SubValue2]=tmp.Value
						and (Total_Recoveries <> 0 or Common_Law = 1 or WPI >= 0 or Result_Of_Injury_Code = 3 or Result_Of_Injury_Code = 1 or Is_Industrial_Deafness = 1))
		
		,totally_unfit = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=@Value and [SubValue]=@SubValue and [SubValue2]=tmp.Value and  Med_Cert_Status = 'TU')
		
		,ffsd_at_work_15_less = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=@Value and [SubValue]=@SubValue and [SubValue2]=tmp.Value and  Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek <= 15)
		
		,ffsd_at_work_15_more = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=@Value and [SubValue]=@SubValue and [SubValue2]=tmp.Value and  Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek > 15)
						
		,ffsd_not_at_work = (select COUNT(distinct Claim_No) from #claim_all	where claim_type =tmp.Claim_Type  and [Value]=@Value and [SubValue]=@SubValue and [SubValue2]=tmp.Value and  Med_Cert_Status = 'SID' and Is_Working = 0)
		
		,pid = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=@Value and [SubValue]=@SubValue and [SubValue2]=tmp.Value and  Med_Cert_Status = 'PID')					
		
		,therapy_treat=(select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type and [Value]=@Value and [SubValue]=@SubValue and [SubValue2]=tmp.Value 
						and (Physio_Paid > 2000 or Chiro_Paid > 1000 or Massage_Paid > 0 or Osteopathy_Paid > 0 or Acupuncture_Paid > 0 or Rehab_Paid > 0))		
		,ncmm_this_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type and [Value]=@Value and [SubValue]=@SubValue and [SubValue2]=tmp.Value and NCMM_Actions_This_Week <> '')
		,ncmm_next_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type and [Value]=@Value and [SubValue]=@SubValue and [SubValue2]=tmp.Value and NCMM_Actions_Next_Week <> '') 
	INTO #total
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct SubValue2 as Value from [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,0)
					where Value=@Value and SubValue=@SubValue and SubValue2 <> '' and Claim_Closed_Flag <> 'Y'
					group by SubValue2
					having COUNT(*) > 0) as tmp_value
	) as tmp
	
	-- GET RESULTS
	
	SELECT * FROM #total
	
	UNION ALL
	
	SELECT Value = @SubValue + "_total", Claim_Type, SUM(overall) as overall, SUM(med_only) as med_only, SUM(d_d) as d_d, SUM(lum_sum_in) as lum_sum_in, SUM(totally_unfit) as totally_unfit, SUM(ffsd_at_work_15_less) as ffsd_at_work_15_less, SUM(ffsd_at_work_15_more) as ffsd_at_work_15_more, SUM(ffsd_not_at_work) as ffsd_not_at_work, SUM(pid) as pid, SUM(therapy_treat) as therapy_treat, SUM(ncmm_this_week) as ncmm_this_week, SUM(ncmm_next_week) as ncmm_next_week
	FROM #total
	GROUP BY Claim_Type
	
	DROP TABLE #total
	DROP TABLE #claim_all
	DROP TABLE #claim_closure
	DROP TABLE #claim_new_all
	DROP TABLE #claim_open_all
	DROP TABLE #claim_re_open
	DROP TABLE #claim_re_open_still_open
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_PORT_ClaimOfficer_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_PORT_Sub_Team_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_PORT_Sub_Team_Summary]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_PORT_Sub_Team_Summary]
GO

CREATE PROCEDURE [dbo].[usp_PORT_Sub_Team_Summary]
(
	@System VARCHAR(20)
	,@Type VARCHAR(20)
	,@Value NVARCHAR(256)
	,@Start_Date DATETIME
	,@End_Date DATETIME
	,@Claim_Liability_Indicator NVARCHAR(256)
	,@Psychological_Claims VARCHAR(10)
	,@Inactive_Claims VARCHAR(10)
	,@Medically_Discharged VARCHAR(10)
	,@Exempt_From_Reform VARCHAR(10)
	,@Reactivation VARCHAR(10)
)
AS
BEGIN
	-- Determine the last month period
	DECLARE @LastMonth_Start_Date datetime = DATEADD(m, -1, DATEADD(m, DATEDIFF(m, 0, GETDATE()), 0))
	DECLARE @LastMonth_End_Date datetime = DATEADD(m, DATEDIFF(m, 0, GETDATE()), -1) + '23:59'
	
	-- Determine last two weeks: Start = last two weeks from yesterday; End = yesterday
	DECLARE @Last2Weeks_Start_Date datetime = DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
	DECLARE @Last2Weeks_End_Date datetime = DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))) + '23:59'
	
	DECLARE @IsLastMonthRange bit = 0
	IF DATEDIFF(d, @LastMonth_Start_Date, @Start_Date) = 0 AND DATEDIFF(d, @LastMonth_End_Date, @End_Date) = 0
	BEGIN
		SET @IsLastMonthRange = 1
	END
	
	DECLARE @IsLast2WeeksRange bit = 0
	IF DATEDIFF(d, @Last2Weeks_Start_Date, @Start_Date) = 0 AND DATEDIFF(d, @Last2Weeks_End_Date, @End_Date) = 0
	BEGIN
		SET @IsLast2WeeksRange = 1
	END
	
	DECLARE @Period_Type int
	IF @IsLastMonthRange = 1
	BEGIN
		SET @Period_Type = 1
	END
	ELSE IF @IsLast2WeeksRange = 1
	BEGIN
		SET @Period_Type = 0
	END
	ELSE IF @IsLastMonthRange = 0 AND @IsLast2WeeksRange = 0
	BEGIN
		SET @Period_Type = -1
	END

	-- PREPARE DATA FOR QUERYING

	-- NEW CLAIMS
	SELECT *, weeks_since_injury = 0
	INTO #claim_new_all 
	FROM [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,-1)
	WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
		  and (case when @Claim_Liability_Indicator <> 'all' then Claim_Liability_Indicator_Group	else '1' end)
				= (case when @Claim_Liability_Indicator <> 'all' then @Claim_Liability_Indicator else '1' end)
	
	-- CLAIM CLOSURES
	-- @IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 => use IsPreOpened = 1 condition else => bypass this condition
	SELECT *, weeks_since_injury = 0
	INTO #claim_closure
	FROM [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,@Period_Type) cpr
	WHERE Date_Claim_Closed between @Start_Date and @End_Date
		and Claim_Closed_Flag = 'Y'
		and (case when @IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 then IsPreOpened else 1 end) = 1
		and (@IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 
			or exists (SELECT [Claim_No] FROM [dbo].[udf_PORT_Overall](@System,@Type, DATEADD(DAY, -1, @Start_Date) + '23:59',-1) cpr_pre
							WHERE cpr_pre.Claim_No = cpr.Claim_No AND cpr_pre.Claim_Closed_Flag = 'N')
			or ISNULL(cpr.Date_Claim_Entered, cpr.date_claim_received) >= @Start_Date)
	
	-- REOPEN CLAIMS
	SELECT *, weeks_since_injury = 0
	INTO #claim_re_open 
	FROM [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,-1)
	WHERE Date_Claim_Reopened between @Start_Date and @End_Date
	
	-- REOPEN CLAIMS: STILL OPEN
	-- @IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 => use IsPreClosed = 1 condition else => bypass this condition
	SELECT *, weeks_since_injury = 0
	INTO #claim_re_open_still_open
	FROM [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,@Period_Type) cpr
	WHERE Date_Claim_Reopened between @Start_Date and @End_Date
		and Claim_Closed_Flag <> 'Y'
		and (case when @IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 then IsPreClosed else 1 end) = 1
		and (@IsLastMonthRange = 1 or @IsLast2WeeksRange = 1
			or exists (SELECT [Claim_No] FROM [dbo].[udf_PORT_Overall](@System,@Type, DATEADD(DAY, -1, @Start_Date) + '23:59',-1) cpr_pre
							WHERE cpr_pre.Claim_No = cpr.Claim_No AND cpr_pre.Claim_Closed_Flag = 'Y'))
	
	-- OPEN CLAIMS
	SELECT *, weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 
	INTO #claim_open_all
	FROM [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,-1)
	WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date) 
			and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
			
			and (case when @Psychological_Claims <> 'all' then Is_Stress else '1' end)
				= (case when @Psychological_Claims <> 'all'	then @Psychological_Claims	else '1' end)

			and (case when @Inactive_Claims <> 'all' then Is_Inactive_Claims else '1' end)
				= (case when @Inactive_Claims <> 'all'	then  @Inactive_Claims	else '1' end)

			and (case when @Medically_Discharged <> 'all' then Is_Medically_Discharged	else '1' end)
				= (case when @Medically_Discharged <> 'all' then @Medically_Discharged else '1'	end)

			and (case when @Exempt_From_Reform <> 'all'	then Is_Exempt	else '1' end)
				= (case when @Exempt_From_Reform <> 'all' then @Exempt_From_Reform	else '1' end)

			and (case when @Reactivation <> 'all' then Is_Reactive	else '1' end)
				= (case when @Reactivation <> 'all'	then @Reactivation	else '1' end)
	
	SELECT * 
	INTO #claim_all 
	FROM (select *,claim_type='claim_new_all' from #claim_new_all
			   union all select *,claim_type='claim_new_nlt' from #claim_new_all where is_Time_Lost=0
			   union all select *,claim_type='claim_new_lt' from #claim_new_all where is_Time_Lost=1
			   union all select *,claim_type='claim_closure' from #claim_closure
			   union all select *,claim_type='claim_re_open' from #claim_re_open
			   union all select *,claim_type='claim_still_open' from #claim_re_open_still_open
			   union all select *,claim_type='claim_open_all' from #claim_open_all
			   union all select *,claim_type='claim_open_nlt' from #claim_open_all where is_Time_Lost=0
			   union all select *,claim_type='claim_open_0_13' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 13
			   union all select *,claim_type='claim_open_13_26' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 13 and weeks_since_injury <= 26
			   union all select *,claim_type='claim_open_26_52' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 26 and weeks_since_injury <= 52
			   union all select *,claim_type='claim_open_52_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 52 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_0_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_78_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 78 and weeks_since_injury <= 130
			   union all select *,claim_type='claim_open_gt_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 130
			   union all select *,claim_type='claim_open_ncmm_this_week' from #claim_open_all WHERE NCMM_Actions_This_Week <> ''
			   union all select *,claim_type='claim_open_ncmm_next_week' from #claim_open_all WHERE NCMM_Actions_Next_Week <> ''
			   union all select *,claim_type='claim_open_acupuncture' from #claim_open_all WHERE Acupuncture_Paid > 0
			   union all select *,claim_type='claim_open_chiro' from #claim_open_all  WHERE Chiro_Paid > 1000
			   union all select *,claim_type='claim_open_massage' from #claim_open_all  WHERE Massage_Paid > 0
			   union all select *,claim_type='claim_open_osteo' from #claim_open_all  WHERE Osteopathy_Paid > 0
			   union all select *,claim_type='claim_open_physio' from #claim_open_all  WHERE Physio_Paid > 2000
			   union all select *,claim_type='claim_open_rehab' from #claim_open_all WHERE Rehab_Paid > 0
			   union all select *,claim_type='claim_open_death' from #claim_open_all WHERE Result_Of_Injury_Code = 1
			   union all select *,claim_type='claim_open_industrial_deafness' from #claim_open_all  WHERE Is_Industrial_Deafness = 1
			   union all select *,claim_type='claim_open_ppd' from #claim_open_all  WHERE Result_Of_Injury_Code = 3
			   union all select *,claim_type='claim_open_recovery' from #claim_open_all WHERE Total_Recoveries <> 0
			   union all select *,claim_type='claim_open_wpi_all' from #claim_open_all WHERE WPI > 0
			   union all select *,claim_type='claim_open_wpi_0_10' from #claim_open_all WHERE WPI > 0 AND WPI <= 10
			   union all select *,claim_type='claim_open_wpi_11_14' from #claim_open_all WHERE WPI >= 11 AND WPI <= 14
			   union all select *,claim_type='claim_open_wpi_15_20' from #claim_open_all WHERE WPI >= 15 AND WPI <= 20
			   union all select *,claim_type='claim_open_wpi_21_30' from #claim_open_all WHERE WPI >= 21 AND WPI <= 30
			   union all select *,claim_type='claim_open_wpi_31_more' from #claim_open_all WHERE WPI >= 31
			   union all select *,claim_type='claim_open_wid' from #claim_open_all WHERE Common_Law = 1
			   ) as tmp
			
	SELECT  tmp.Value,Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type and [Value]=@Value and [SubValue]=tmp.Value)
						
		,med_only = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=@Value and [SubValue]=tmp.Value and Is_Medical_Only = 1)
						
		,d_d = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=@Value and [SubValue]=tmp.Value and Is_D_D = 1)
		
		,lum_sum_in = (select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type and [Value]=@Value and [SubValue]=tmp.Value
						and (Total_Recoveries <> 0 or Common_Law = 1 or WPI >= 0 or Result_Of_Injury_Code = 3 or Result_Of_Injury_Code = 1 or Is_Industrial_Deafness = 1))
		
		,totally_unfit = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=@Value and [SubValue]=tmp.Value and  Med_Cert_Status = 'TU')
		
		,ffsd_at_work_15_less = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=@Value and [SubValue]=tmp.Value and  Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek <= 15)
		
		,ffsd_at_work_15_more = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=@Value and [SubValue]=tmp.Value and  Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek > 15)
						
		,ffsd_not_at_work = (select COUNT(distinct Claim_No) from #claim_all	where claim_type =tmp.Claim_Type  and [Value]=@Value and [SubValue]=tmp.Value and  Med_Cert_Status = 'SID' and Is_Working = 0)
		
		,pid = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type  and [Value]=@Value and [SubValue]=tmp.Value and  Med_Cert_Status = 'PID')					
		
		,therapy_treat=(select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type and [Value]=@Value and [SubValue]=tmp.Value 
						and (Physio_Paid > 2000 or Chiro_Paid > 1000 or Massage_Paid > 0 or Osteopathy_Paid > 0 or Acupuncture_Paid > 0 or Rehab_Paid > 0))		
		,ncmm_this_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type and [Value]=@Value and [SubValue]=tmp.Value and NCMM_Actions_This_Week <> '')
		,ncmm_next_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type and [Value]=@Value and [SubValue]=tmp.Value and NCMM_Actions_Next_Week <> '') 
	INTO #total
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct SubValue as Value
						from [dbo].[udf_PORT_Overall](@System, @Type,@End_Date,0)
						where Value = @Value and SubValue <> '' and Claim_Closed_Flag <> 'Y'
						group by SubValue
						having COUNT(*) > 0) as tmp_value
	) as tmp
	
	-- GET RESULTS
	
	SELECT * FROM #total
	
	UNION ALL
	
	select Value = @Value + "_total", Claim_Type, SUM(overall) as overall, SUM(med_only) as med_only, SUM(d_d) as d_d, SUM(lum_sum_in) as lum_sum_in, SUM(totally_unfit) as totally_unfit, SUM(ffsd_at_work_15_less) as ffsd_at_work_15_less, SUM(ffsd_at_work_15_more) as ffsd_at_work_15_more, SUM(ffsd_not_at_work) as ffsd_not_at_work, SUM(pid) as pid, SUM(therapy_treat) as therapy_treat, SUM(ncmm_this_week) as ncmm_this_week, SUM(ncmm_next_week) as ncmm_next_week
	from #total
	group by Claim_Type
	
	DROP TABLE #total
	DROP TABLE #claim_all
	DROP TABLE #claim_closure
	DROP TABLE #claim_new_all
	DROP TABLE #claim_open_all
	DROP TABLE #claim_re_open
	DROP TABLE #claim_re_open_still_open
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_PORT_Sub_Team_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_PORT_Summary.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[usp_PORT_Summary]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE [dbo].[usp_PORT_Summary]
GO

CREATE PROCEDURE [dbo].[usp_PORT_Summary]
(
	@System VARCHAR(10)
	,@Type VARCHAR(20)
	,@Value NVARCHAR(256)
	,@SubValue NVARCHAR(256)
	,@Start_Date DATETIME
	,@End_Date DATETIME
	,@Claim_Liability_Indicator NVARCHAR(256)
	,@Psychological_Claims VARCHAR(10)
	,@Inactive_Claims VARCHAR(10)
	,@Medically_Discharged VARCHAR(10)
	,@Exempt_From_Reform VARCHAR(10)
	,@Reactivation VARCHAR(10)
)
AS
BEGIN
	IF @Value =  'all'
	BEGIN
		EXEC('EXEC usp_PORT_Agency_Group_Summary ''' + @System + ''',''' + @Type + ''',''' + @Start_Date + ''',''' + @End_Date 
			+ ''',''' + @Claim_Liability_Indicator + ''',''' + @Psychological_Claims + ''',''' + @Inactive_Claims
			+ ''',''' + @Medically_Discharged + ''',''' + @Exempt_From_Reform + ''',''' + @Reactivation + '''')
	END
	ELSE
	BEGIN
		IF @SubValue  = 'all'
		BEGIN
			EXEC('EXEC usp_PORT_Sub_Team_Summary ''' + @System + ''',''' + @Type + ''',''' + @Value + ''',''' + @Start_Date + ''',''' + @End_Date 
				+ ''',''' + @Claim_Liability_Indicator + ''',''' + @Psychological_Claims + ''',''' + @Inactive_Claims
				+ ''',''' + @Medically_Discharged + ''',''' + @Exempt_From_Reform + ''',''' + @Reactivation + '''')
		END
		ELSE
		BEGIN
			EXEC('EXEC usp_PORT_ClaimOfficer_Summary ''' + @System + ''',''' + @Type + ''',''' + @Value + ''',''' + @SubValue + ''',''' + @Start_Date + ''',''' + @End_Date 
				+ ''',''' + @Claim_Liability_Indicator + ''',''' + @Psychological_Claims + ''',''' + @Inactive_Claims
				+ ''',''' + @Medically_Discharged + ''',''' + @Exempt_From_Reform + ''',''' + @Reactivation + '''')
		END
	END
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_PORT_Summary.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_TMF_CPR_Dashboard_Agency_Group.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_TMF_CPR_Dashboard_Agency_Group]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_TMF_CPR_Dashboard_Agency_Group]
GO

CREATE PROCEDURE [dbo].[usp_TMF_CPR_Dashboard_Agency_Group]
(
	@Start_Date datetime
	,@End_Date datetime
	,@Is_Last_Month bit
)
AS
BEGIN
	-- PREPARE DATA FOR QUERYING
	
	-- NEW CLAIMS
	SELECT *,[UnitType] = 'agency' , weeks_since_injury = 0
	INTO #claim_new_all
		FROM [dbo].[udf_CPR_Overall]('TMF', 'agency', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	
	-- CLAIM CLOSURES
	SELECT *,[UnitType] = 'agency', weeks_since_injury = 0
	INTO #claim_closure 
		FROM [dbo].[udf_CPR_Overall]('TMF', 'agency', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	
	-- REOPEN CLAIMS
	SELECT *,[UnitType] = 'agency', weeks_since_injury = 0
	INTO #claim_re_open 
		FROM [dbo].[udf_CPR_Overall]('TMF', 'agency', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
		
	-- REOPEN CLAIMS: STILL OPEN
	SELECT *,[UnitType] = 'agency', weeks_since_injury = 0
	INTO #claim_re_open_still_open 
		FROM [dbo].[udf_CPR_Overall]('TMF', 'agency', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	
	-- OPEN CLAIMS
	SELECT *,[UnitType] = 'agency', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
	INTO #claim_open_all
		FROM [dbo].[udf_CPR_Overall]('TMF', 'agency', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
		FROM [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	
	SELECT *
	INTO #claim_all
	FROM (select *,claim_type='claim_new_all' from #claim_new_all
			   union all select *,claim_type='claim_new_nlt' from #claim_new_all where is_Time_Lost=0
			   union all select *,claim_type='claim_new_lt' from #claim_new_all where is_Time_Lost=1
			   union all select *,claim_type='claim_closure' from #claim_closure
			   union all select *,claim_type='claim_re_open' from #claim_re_open
			   union all select *,claim_type='claim_still_open' from #claim_re_open_still_open
			   union all select *,claim_type='claim_open_all' from #claim_open_all
			   union all select *,claim_type='claim_open_nlt' from #claim_open_all where is_Time_Lost=0
			   union all select *,claim_type='claim_open_0_13' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 13
			   union all select *,claim_type='claim_open_13_26' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 13 and weeks_since_injury <= 26
			   union all select *,claim_type='claim_open_26_52' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 26 and weeks_since_injury <= 52
			   union all select *,claim_type='claim_open_52_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 52 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_0_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_78_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 78 and weeks_since_injury <= 130
			   union all select *,claim_type='claim_open_gt_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 130
			   union all select *,claim_type='claim_open_ncmm_this_week' from #claim_open_all WHERE NCMM_Actions_This_Week <> ''
			   union all select *,claim_type='claim_open_ncmm_next_week' from #claim_open_all WHERE NCMM_Actions_Next_Week <> ''
			   union all select *,claim_type='claim_open_acupuncture' from #claim_open_all WHERE Acupuncture_Paid > 0
			   union all select *,claim_type='claim_open_chiro' from #claim_open_all  WHERE Chiro_Paid > 1000
			   union all select *,claim_type='claim_open_massage' from #claim_open_all  WHERE Massage_Paid > 0
			   union all select *,claim_type='claim_open_osteo' from #claim_open_all  WHERE Osteopathy_Paid > 0
			   union all select *,claim_type='claim_open_physio' from #claim_open_all  WHERE Physio_Paid > 2000
			   union all select *,claim_type='claim_open_rehab' from #claim_open_all WHERE Rehab_Paid > 0
			   union all select *,claim_type='claim_open_death' from #claim_open_all WHERE Result_Of_Injury_Code = 1
			   union all select *,claim_type='claim_open_industrial_deafness' from #claim_open_all  WHERE Is_Industrial_Deafness = 1
			   union all select *,claim_type='claim_open_ppd' from #claim_open_all  WHERE Result_Of_Injury_Code = 3
			   union all select *,claim_type='claim_open_recovery' from #claim_open_all WHERE Total_Recoveries <> 0
			   union all select *,claim_type='claim_open_wpi_all' from #claim_open_all WHERE WPI > 0
			   union all select *,claim_type='claim_open_wpi_0_10' from #claim_open_all WHERE WPI > 0 AND WPI <= 10
			   union all select *,claim_type='claim_open_wpi_11_14' from #claim_open_all WHERE WPI >= 11 AND WPI <= 14
			   union all select *,claim_type='claim_open_wpi_15_20' from #claim_open_all WHERE WPI >= 15 AND WPI <= 20
			   union all select *,claim_type='claim_open_wpi_21_30' from #claim_open_all WHERE WPI >= 21 AND WPI <= 30
			   union all select *,claim_type='claim_open_wpi_31_more' from #claim_open_all WHERE WPI >= 31
			   union all select *,claim_type='claim_open_wid' from #claim_open_all WHERE Common_Law = 1
			   ) as tmp
	
	-- drop temp tables
	DROP TABLE #claim_new_all
	DROP TABLE #claim_closure
	DROP TABLE #claim_re_open
	DROP TABLE #claim_re_open_still_open
	DROP TABLE #claim_open_all
	
	SELECT  tmp.[Value] as [Unit], tmp.[UnitType], Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType])

		,med_only = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Is_Medical_Only = 1)

		,d_d = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Is_D_D = 1)
			
		,lum_sum_in = (select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType]
			and (Total_Recoveries <> 0 or Common_Law = 1 or WPI >= 0 or Result_Of_Injury_Code = 3 or Result_Of_Injury_Code = 1 or Is_Industrial_Deafness = 1))
			
		,totally_unfit = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'TU')
			
		,ffsd_at_work_15_less = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek <= 15)
			
		,ffsd_at_work_15_more = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek > 15)
							
		,ffsd_not_at_work = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 0)
			
		,pid = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'PID')
			
		,therapy_treat=(select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType]
			and (Physio_Paid > 2000 or Chiro_Paid > 1000 or Massage_Paid > 0 or Osteopathy_Paid > 0 or Acupuncture_Paid > 0 or Rehab_Paid > 0))		
		
		,ncmm_this_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and NCMM_Actions_This_Week <> '')
			
		,ncmm_next_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [UnitType]=tmp.[UnitType] and NCMM_Actions_Next_Week <> '')
	INTO #total
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct Value, [UnitType] = 'agency'
						from [dbo].[udf_CPR_Overall]('TMF', 'agency', @Is_Last_Month)
						where Value <> '' and Claim_Closed_Flag <> 'Y'
						group by Value
						having COUNT(*) > 0
					union all
					select distinct Value, [UnitType] = 'group'
						from [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
						where Value <> '' and Claim_Closed_Flag <> 'Y'
						group by Value
						having COUNT(*) > 0) as tmp_value
	) as tmp
	
	-- drop temp table
	DROP TABLE #claim_all
	
	-- GET RESULTS
	
	SELECT * FROM #total
		
	UNION ALL -- Grouping Value: Health & Other
		
	SELECT [Unit] = 'HEALTH@@@OTHER',[UnitType] = 'agency', Claim_Type, SUM(overall) as overall, SUM(med_only) as med_only, SUM(d_d) as d_d, SUM(lum_sum_in) as lum_sum_in, SUM(totally_unfit) as totally_unfit, SUM(ffsd_at_work_15_less) as ffsd_at_work_15_less, SUM(ffsd_at_work_15_more) as ffsd_at_work_15_more, SUM(ffsd_not_at_work) as ffsd_not_at_work, SUM(pid) as pid, SUM(therapy_treat) as therapy_treat, SUM(ncmm_this_week) as ncmm_this_week, SUM(ncmm_next_week) as ncmm_next_week
	FROM #total
	WHERE ([Unit] = 'Health' or [Unit] = 'Other')
	GROUP BY Claim_Type
		
	UNION ALL -- Grouping Value: Police & Fire
		
	SELECT [Unit] = 'POLICE@@@FIRE',[UnitType] = 'agency', Claim_Type, SUM(overall) as overall, SUM(med_only) as med_only, SUM(d_d) as d_d, SUM(lum_sum_in) as lum_sum_in, SUM(totally_unfit) as totally_unfit, SUM(ffsd_at_work_15_less) as ffsd_at_work_15_less, SUM(ffsd_at_work_15_more) as ffsd_at_work_15_more, SUM(ffsd_not_at_work) as ffsd_not_at_work, SUM(pid) as pid, SUM(therapy_treat) as therapy_treat, SUM(ncmm_this_week) as ncmm_this_week, SUM(ncmm_next_week) as ncmm_next_week
	FROM #total
	WHERE ([Unit] = 'Police' or [Unit] = 'Fire')
	GROUP BY Claim_Type

	UNION ALL -- TMF
		
	SELECT [Unit] = 'TMF',[UnitType] = 'TMF', Claim_Type, SUM(overall) as overall, SUM(med_only) as med_only, SUM(d_d) as d_d, SUM(lum_sum_in) as lum_sum_in, SUM(totally_unfit) as totally_unfit, SUM(ffsd_at_work_15_less) as ffsd_at_work_15_less, SUM(ffsd_at_work_15_more) as ffsd_at_work_15_more, SUM(ffsd_not_at_work) as ffsd_not_at_work, SUM(pid) as pid, SUM(therapy_treat) as therapy_treat, SUM(ncmm_this_week) as ncmm_this_week, SUM(ncmm_next_week) as ncmm_next_week
	FROM #total
	WHERE [UnitType] = 'agency'
	GROUP BY Claim_Type
		
	--drop temp table
	DROP table #total
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_TMF_CPR_Dashboard_Agency_Group.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_TMF_CPR_Dashboard_ClaimOfficer.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_TMF_CPR_Dashboard_ClaimOfficer]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_TMF_CPR_Dashboard_ClaimOfficer]
GO

CREATE PROCEDURE [dbo].[usp_TMF_CPR_Dashboard_ClaimOfficer]
(
	@Start_Date datetime
	,@End_Date datetime
	,@Is_Last_Month bit
)
AS
BEGIN
	-- PREPARE DATA FOR QUERYING
	
	-- NEW CLAIMS
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
	INTO #claim_new_all
		FROM [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	
	-- CLAIM CLOSURES
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
	INTO #claim_closure
		FROM [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	
	-- REOPEN CLAIMS
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
	INTO #claim_re_open
		FROM [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
		
	-- REOPEN CLAIMS: STILL OPEN
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
	INTO #claim_re_open_still_open
		FROM [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	
	-- OPEN CLAIMS
	SELECT *,[UnitType] = 'group', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
	INTO #claim_open_all
		FROM [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	
	SELECT *
	INTO #claim_all
	FROM (select *,claim_type='claim_new_all' from #claim_new_all
			   union all select *,claim_type='claim_new_nlt' from #claim_new_all where is_Time_Lost=0
			   union all select *,claim_type='claim_new_lt' from #claim_new_all where is_Time_Lost=1
			   union all select *,claim_type='claim_closure' from #claim_closure
			   union all select *,claim_type='claim_re_open' from #claim_re_open
			   union all select *,claim_type='claim_still_open' from #claim_re_open_still_open
			   union all select *,claim_type='claim_open_all' from #claim_open_all
			   union all select *,claim_type='claim_open_nlt' from #claim_open_all where is_Time_Lost=0
			   union all select *,claim_type='claim_open_0_13' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 13
			   union all select *,claim_type='claim_open_13_26' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 13 and weeks_since_injury <= 26
			   union all select *,claim_type='claim_open_26_52' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 26 and weeks_since_injury <= 52
			   union all select *,claim_type='claim_open_52_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 52 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_0_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_78_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 78 and weeks_since_injury <= 130
			   union all select *,claim_type='claim_open_gt_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 130
			   union all select *,claim_type='claim_open_ncmm_this_week' from #claim_open_all WHERE NCMM_Actions_This_Week <> ''
			   union all select *,claim_type='claim_open_ncmm_next_week' from #claim_open_all WHERE NCMM_Actions_Next_Week <> ''
			   union all select *,claim_type='claim_open_acupuncture' from #claim_open_all WHERE Acupuncture_Paid > 0
			   union all select *,claim_type='claim_open_chiro' from #claim_open_all  WHERE Chiro_Paid > 1000
			   union all select *,claim_type='claim_open_massage' from #claim_open_all  WHERE Massage_Paid > 0
			   union all select *,claim_type='claim_open_osteo' from #claim_open_all  WHERE Osteopathy_Paid > 0
			   union all select *,claim_type='claim_open_physio' from #claim_open_all  WHERE Physio_Paid > 2000
			   union all select *,claim_type='claim_open_rehab' from #claim_open_all WHERE Rehab_Paid > 0
			   union all select *,claim_type='claim_open_death' from #claim_open_all WHERE Result_Of_Injury_Code = 1
			   union all select *,claim_type='claim_open_industrial_deafness' from #claim_open_all  WHERE Is_Industrial_Deafness = 1
			   union all select *,claim_type='claim_open_ppd' from #claim_open_all  WHERE Result_Of_Injury_Code = 3
			   union all select *,claim_type='claim_open_recovery' from #claim_open_all WHERE Total_Recoveries <> 0
			   union all select *,claim_type='claim_open_wpi_all' from #claim_open_all WHERE WPI > 0
			   union all select *,claim_type='claim_open_wpi_0_10' from #claim_open_all WHERE WPI > 0 AND WPI <= 10
			   union all select *,claim_type='claim_open_wpi_11_14' from #claim_open_all WHERE WPI >= 11 AND WPI <= 14
			   union all select *,claim_type='claim_open_wpi_15_20' from #claim_open_all WHERE WPI >= 15 AND WPI <= 20
			   union all select *,claim_type='claim_open_wpi_21_30' from #claim_open_all WHERE WPI >= 21 AND WPI <= 30
			   union all select *,claim_type='claim_open_wpi_31_more' from #claim_open_all WHERE WPI >= 31
			   union all select *,claim_type='claim_open_wid' from #claim_open_all WHERE Common_Law = 1
			   ) as tmp
	
	-- drop temp tables
	DROP TABLE #claim_new_all
	DROP TABLE #claim_closure
	DROP TABLE #claim_re_open
	DROP TABLE #claim_re_open_still_open
	DROP TABLE #claim_open_all
	
	SELECT  tmp.[SubValue2] as [Unit], tmp.[SubValue] as [Primary], tmp.[Value] as [Parent], tmp.[UnitType], Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType])

		,med_only = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Is_Medical_Only = 1)

		,d_d = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Is_D_D = 1)
			
		,lum_sum_in = (select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType]
			and (Total_Recoveries <> 0 or Common_Law = 1 or WPI >= 0 or Result_Of_Injury_Code = 3 or Result_Of_Injury_Code = 1 or Is_Industrial_Deafness = 1))
			
		,totally_unfit = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'TU')
			
		,ffsd_at_work_15_less = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek <= 15)
			
		,ffsd_at_work_15_more = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek > 15)
							
		,ffsd_not_at_work = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 0)
			
		,pid = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'PID')
			
		,therapy_treat=(select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType]
			and (Physio_Paid > 2000 or Chiro_Paid > 1000 or Massage_Paid > 0 or Osteopathy_Paid > 0 or Acupuncture_Paid > 0 or Rehab_Paid > 0))		
		
		,ncmm_this_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and NCMM_Actions_This_Week <> '')
			
		,ncmm_next_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue2]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType] and NCMM_Actions_Next_Week <> '')
	INTO #total
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct Value, SubValue, SubValue2, [UnitType] = 'group'
							from [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
							where Value <> '' and SubValue <> '' and SubValue2 <> '' and Claim_Closed_Flag <> 'Y'
							group by Value, SubValue, SubValue2
							having COUNT(*) > 0) as tmp_value
	) as tmp
	
	-- add an overall column for team
	SELECT  tmp.[SubValue2] as [Unit], tmp.[SubValue] as [Primary], tmp.[Value] as [Parent], tmp.[UnitType], Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [SubValue]=tmp.[SubValue2] 
			and [UnitType]=tmp.[UnitType])

		,med_only = 0
		,d_d = 0
		,lum_sum_in = 0
		,totally_unfit = 0
		,ffsd_at_work_15_less = 0
		,ffsd_at_work_15_more = 0
		,ffsd_not_at_work = 0
		,pid = 0
		,therapy_treat = 0
		,ncmm_this_week = 0
		,ncmm_next_week = 0
	INTO #total2
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct Value, SubValue, [SubValue2] = SubValue, [UnitType] = 'group'
							from [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
							where Value <> '' and SubValue <> '' and Claim_Closed_Flag <> 'Y'
							group by Value, SubValue
							having COUNT(*) > 0) as tmp_value
	) as tmp
	-- drop temp table
	DROP TABLE #claim_all
	
	-- GET RESULTS
	SELECT * FROM #total
	UNION ALL
	SELECT * FROM #total2
		
	--drop temp table
	DROP table #total
	DROP table #total2
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_TMF_CPR_Dashboard_ClaimOfficer.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_TMF_CPR_Dashboard_Sub_Team.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_TMF_CPR_Dashboard_Sub_Team]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_TMF_CPR_Dashboard_Sub_Team]
GO

CREATE PROCEDURE [dbo].[usp_TMF_CPR_Dashboard_Sub_Team]
(
	@Start_Date datetime
	,@End_Date datetime
	,@Is_Last_Month bit
)
AS
BEGIN
	-- PREPARE DATA FOR QUERYING
	
	-- NEW CLAIMS
	SELECT *,[UnitType] = 'agency', weeks_since_injury = 0
	INTO #claim_new_all 
		FROM [dbo].[udf_CPR_Overall]('TMF', 'agency', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
		WHERE ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
	
	-- CLAIM CLOSURES
	SELECT *,[UnitType] = 'agency', weeks_since_injury = 0
	INTO #claim_closure 
		FROM [dbo].[udf_CPR_Overall]('TMF', 'agency', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
		WHERE Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and IsPreOpened = 1
	
	-- REOPEN CLAIMS
	SELECT *,[UnitType] = 'agency', weeks_since_injury = 0
	INTO #claim_re_open 
		FROM [dbo].[udf_CPR_Overall]('TMF', 'agency', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
		
	-- REOPEN CLAIMS: STILL OPEN
	SELECT *,[UnitType] = 'agency', weeks_since_injury = 0
	INTO #claim_re_open_still_open 
		FROM [dbo].[udf_CPR_Overall]('TMF', 'agency', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = 0
		FROM [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
		WHERE Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and IsPreClosed = 1
	
	-- OPEN CLAIMS
	SELECT *,[UnitType] = 'agency', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
	INTO #claim_open_all
		FROM [dbo].[udf_CPR_Overall]('TMF', 'agency', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	UNION ALL
	SELECT *,[UnitType] = 'group', weeks_since_injury = DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
		FROM [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
		WHERE (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date)
				and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
	
	SELECT *
	INTO #claim_all
	FROM (select *,claim_type='claim_new_all' from #claim_new_all
			   union all select *,claim_type='claim_new_nlt' from #claim_new_all where is_Time_Lost=0
			   union all select *,claim_type='claim_new_lt' from #claim_new_all where is_Time_Lost=1
			   union all select *,claim_type='claim_closure' from #claim_closure
			   union all select *,claim_type='claim_re_open' from #claim_re_open
			   union all select *,claim_type='claim_still_open' from #claim_re_open_still_open
			   union all select *,claim_type='claim_open_all' from #claim_open_all
			   union all select *,claim_type='claim_open_nlt' from #claim_open_all where is_Time_Lost=0
			   union all select *,claim_type='claim_open_0_13' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 13
			   union all select *,claim_type='claim_open_13_26' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 13 and weeks_since_injury <= 26
			   union all select *,claim_type='claim_open_26_52' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 26 and weeks_since_injury <= 52
			   union all select *,claim_type='claim_open_52_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 52 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_0_78' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 0 and weeks_since_injury <= 78
			   union all select *,claim_type='claim_open_78_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 78 and weeks_since_injury <= 130
			   union all select *,claim_type='claim_open_gt_130' from #claim_open_all WHERE Is_Time_Lost = 1 and weeks_since_injury > 130
			   union all select *,claim_type='claim_open_ncmm_this_week' from #claim_open_all WHERE NCMM_Actions_This_Week <> ''
			   union all select *,claim_type='claim_open_ncmm_next_week' from #claim_open_all WHERE NCMM_Actions_Next_Week <> ''
			   union all select *,claim_type='claim_open_acupuncture' from #claim_open_all WHERE Acupuncture_Paid > 0
			   union all select *,claim_type='claim_open_chiro' from #claim_open_all  WHERE Chiro_Paid > 1000
			   union all select *,claim_type='claim_open_massage' from #claim_open_all  WHERE Massage_Paid > 0
			   union all select *,claim_type='claim_open_osteo' from #claim_open_all  WHERE Osteopathy_Paid > 0
			   union all select *,claim_type='claim_open_physio' from #claim_open_all  WHERE Physio_Paid > 2000
			   union all select *,claim_type='claim_open_rehab' from #claim_open_all WHERE Rehab_Paid > 0
			   union all select *,claim_type='claim_open_death' from #claim_open_all WHERE Result_Of_Injury_Code = 1
			   union all select *,claim_type='claim_open_industrial_deafness' from #claim_open_all  WHERE Is_Industrial_Deafness = 1
			   union all select *,claim_type='claim_open_ppd' from #claim_open_all  WHERE Result_Of_Injury_Code = 3
			   union all select *,claim_type='claim_open_recovery' from #claim_open_all WHERE Total_Recoveries <> 0
			   union all select *,claim_type='claim_open_wpi_all' from #claim_open_all WHERE WPI > 0
			   union all select *,claim_type='claim_open_wpi_0_10' from #claim_open_all WHERE WPI > 0 AND WPI <= 10
			   union all select *,claim_type='claim_open_wpi_11_14' from #claim_open_all WHERE WPI >= 11 AND WPI <= 14
			   union all select *,claim_type='claim_open_wpi_15_20' from #claim_open_all WHERE WPI >= 15 AND WPI <= 20
			   union all select *,claim_type='claim_open_wpi_21_30' from #claim_open_all WHERE WPI >= 21 AND WPI <= 30
			   union all select *,claim_type='claim_open_wpi_31_more' from #claim_open_all WHERE WPI >= 31
			   union all select *,claim_type='claim_open_wid' from #claim_open_all WHERE Common_Law = 1
			   ) as tmp
	
	-- drop temp tables
	DROP TABLE #claim_new_all
	DROP TABLE #claim_closure
	DROP TABLE #claim_re_open
	DROP TABLE #claim_re_open_still_open
	DROP TABLE #claim_open_all
	
	SELECT  tmp.[SubValue] as [Unit], tmp.[Value] as [Primary], tmp.[UnitType], Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType])

		,med_only = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Is_Medical_Only = 1)

		,d_d = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Is_D_D = 1)
			
		,lum_sum_in = (select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType]
			and (Total_Recoveries <> 0 or Common_Law = 1 or WPI >= 0 or Result_Of_Injury_Code = 3 or Result_Of_Injury_Code = 1 or Is_Industrial_Deafness = 1))
			
		,totally_unfit = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'TU')
			
		,ffsd_at_work_15_less = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek <= 15)
			
		,ffsd_at_work_15_more = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 1 and HoursPerWeek > 15)
							
		,ffsd_not_at_work = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'SID' and Is_Working = 0)
			
		,pid = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and Med_Cert_Status = 'PID')
			
		,therapy_treat=(select COUNT(distinct claim_no) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType]
			and (Physio_Paid > 2000 or Chiro_Paid > 1000 or Massage_Paid > 0 or Osteopathy_Paid > 0 or Acupuncture_Paid > 0 or Rehab_Paid > 0))		
		
		,ncmm_this_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and NCMM_Actions_This_Week <> '')
			
		,ncmm_next_week = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [SubValue]=tmp.[SubValue] and [UnitType]=tmp.[UnitType] and NCMM_Actions_Next_Week <> '')
	INTO #total
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct Value, SubValue, [UnitType] = 'agency'
							from [dbo].[udf_CPR_Overall]('TMF', 'agency', @Is_Last_Month)
							where Value <> '' and SubValue <> '' and Claim_Closed_Flag <> 'Y'
							group by Value, SubValue
							having COUNT(*) > 0
					union all
					select distinct Value, SubValue, [UnitType] = 'group'
							from [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
							where Value <> '' and SubValue <> '' and Claim_Closed_Flag <> 'Y'
							group by Value, SubValue
							having COUNT(*) > 0) as tmp_value
	) as tmp
	
	-- add an overall row for teams or agencies
	SELECT  tmp.[SubValue] + '_total' as [Unit], tmp.[Value] as [Primary], tmp.[UnitType], Claim_type
		,overall = (select COUNT(distinct Claim_No) from #claim_all where claim_type =tmp.Claim_Type 
			and [Value]=tmp.[Value] and [Value]=tmp.[SubValue] and [UnitType]=tmp.[UnitType])
			
		,med_only = 0
		,d_d = 0			
		,lum_sum_in = 0
		,totally_unfit = 0
		,ffsd_at_work_15_less = 0
		,ffsd_at_work_15_more = 0
		,ffsd_not_at_work = 0
		,pid = 0
		,therapy_treat=0
		,ncmm_this_week = 0
		,ncmm_next_week = 0
	INTO #total2
	FROM
	(
		select * from dbo.uv_PORT_Get_All_Claim_Type
		cross join (select distinct Value, [SubValue] = Value, [UnitType] = 'agency'
							from [dbo].[udf_CPR_Overall]('TMF', 'agency', @Is_Last_Month)
							where Value <> '' and Claim_Closed_Flag <> 'Y'
							group by Value
							having COUNT(*) > 0
					union all
					select distinct Value, [SubValue] = Value, [UnitType] = 'group'
							from [dbo].[udf_CPR_Overall]('TMF', 'group', @Is_Last_Month)
							where Value <> '' and Claim_Closed_Flag <> 'Y'
							group by Value
							having COUNT(*) > 0) as tmp_value
	) as tmp
	
	-- drop temp table
	DROP TABLE #claim_all
	
	-- GET RESULTS
	SELECT * FROM #total 
	union all 
	SELECT * FROM #total2
		
	--drop temp table
	DROP table #total
	DROP table #total2
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_TMF_CPR_Dashboard_Sub_Team.sql  
--------------------------------  
  
--------------------------------  
-- D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_TMF_CPR_Raw.sql  
--------------------------------  
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[usp_TMF_CPR_Raw]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE [dbo].[usp_TMF_CPR_Raw]
GO

CREATE PROCEDURE [dbo].[usp_TMF_CPR_Raw]
(
	@Type VARCHAR(20)
	,@Value VARCHAR(256)
	,@SubValue VARCHAR(256)
	,@SubSubValue VARCHAR(256)
	,@ClaimType VARCHAR(256)
	,@Start_Date DATETIME
	,@End_Date DATETIME
	,@Claim_Liability_Indicator NVARCHAR(256)
	,@Psychological_Claims VARCHAR(10)
	,@Inactive_Claims VARCHAR(10)
	,@Medically_Discharged VARCHAR(10)
	,@Exempt_From_Reform VARCHAR(10)
	,@Reactivation VARCHAR(10)
)
AS
BEGIN
	-- Determine the last month period
	DECLARE @LastMonth_Start_Date datetime = DATEADD(m, -1, DATEADD(m, DATEDIFF(m, 0, GETDATE()), 0))
	DECLARE @LastMonth_End_Date datetime = DATEADD(m, DATEDIFF(m, 0, GETDATE()), -1) + '23:59'
	
	-- Determine last two weeks: Start = last two weeks from yesterday; End = yesterday
	DECLARE @Last2Weeks_Start_Date datetime = DATEADD(d, -15, CONVERT(datetime, CONVERT(char, GETDATE(), 106)))
	DECLARE @Last2Weeks_End_Date datetime = DATEADD(d, -1, CONVERT(datetime, CONVERT(char, GETDATE(), 106))) + '23:59'
	
	DECLARE @IsLastMonthRange bit = 0
	IF DATEDIFF(d, @LastMonth_Start_Date, @Start_Date) = 0 AND DATEDIFF(d, @LastMonth_End_Date, @End_Date) = 0
	BEGIN
		SET @IsLastMonthRange = 1
	END
	
	DECLARE @IsLast2WeeksRange bit = 0
	IF DATEDIFF(d, @Last2Weeks_Start_Date, @Start_Date) = 0 AND DATEDIFF(d, @Last2Weeks_End_Date, @End_Date) = 0
	BEGIN
		SET @IsLast2WeeksRange = 1
	END
	
	DECLARE @Period_Type int
	IF @IsLastMonthRange = 1
	BEGIN
		SET @Period_Type = 1
	END
	ELSE IF @IsLast2WeeksRange = 1
	BEGIN
		SET @Period_Type = 0
	END
	ELSE IF @IsLastMonthRange = 0 AND @IsLast2WeeksRange = 0
	BEGIN
		SET @Period_Type = -1
	END
	
	IF @ClaimType like 'claim_new%'
	BEGIN
		select *
		from [dbo].[udf_CPR_Raw] ('tmf', @End_Date, @Period_Type) cpr 
		where @Value = case when @Value <> 'all' and @Value <> 'health@@@other' and @Value <> 'police@@@fire' and @Type = 'agency' then Agency_Name
							  when @Value <> 'all' and @Type = 'group' then [Group]
							  when @Value = 'all' then 'all'
							  when @Value = 'health@@@other' and Agency_Name in ('health','other') then 'health@@@other'
							  when @Value = 'police@@@fire' and Agency_Name in ('police','fire') then 'police@@@fire'
						 end
			AND @SubValue = case when @SubValue <> 'all' and @Type = 'agency' then Sub_Category
								 when @SubValue <> 'all' and @Type = 'group' then Team
								 when @SubValue = 'all' then 'all'
							end
			AND @SubSubValue = case when @SubSubValue <> 'all' then Claims_Officer_Name
									else 'all'
							   end
			AND (case when @Claim_Liability_Indicator <> 'all' then Claim_Liability_Indicator_Group	else '1' end)
				= (case when @Claim_Liability_Indicator <> 'all' then @Claim_Liability_Indicator else '1' end)
			AND ISNULL(Date_Claim_Entered,Date_Claim_Received) between @Start_Date and @End_Date
			AND Is_Time_Lost = case when @ClaimType like 'claim_new_nlt%' then 0
									when @ClaimType like 'claim_new_lt%' then 1
									else Is_Time_Lost end
			--common condition--
			AND Is_Medical_Only = case when @ClaimType like '%med_only' then 1 else Is_Medical_Only end
			AND Is_D_D = case when @ClaimType like '%d_d' then 1 else Is_D_D end
			AND (Total_Recoveries = case when @ClaimType like '%lum_sum_in' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
										 else Total_Recoveries end
				OR Common_Law = case when @ClaimType like '%lum_sum_in' then 1 else Common_Law end
				OR isnull(WPI,0) = case when @ClaimType like '%lum_sum_in' then case when WPI >= 0 then WPI else 1 end
							  else isnull(WPI,0) end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 3 else Result_Of_Injury_Code end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 1 else Result_Of_Injury_Code end
				OR Is_Industrial_Deafness = case when @ClaimType like '%lum_sum_in' then 1 else Is_Industrial_Deafness end 
				)
			AND Med_Cert_Status = case when @ClaimType like '%totally_unfit' then 'TU'
									   when @ClaimType like '%ffsd_at_work_15_less' then 'SID'
									   when @ClaimType like '%ffsd_at_work_15_more' then 'SID'
									   when @ClaimType like '%ffsd_not_at_work' then 'SID'
									   when @ClaimType like '%pid' then 'PID'
									   else Med_Cert_Status end
			AND case when @ClaimType like '%ffsd_not_at_work'
						or @ClaimType like '%ffsd_at_work_15_more'
						or @ClaimType like '%ffsd_at_work_15_less' then Is_Working
					 else isnull(Is_Working,0) end 
					 = 
					 case when @ClaimType like '%ffsd_at_work_15_less' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_at_work_15_more' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_not_at_work' and Is_Working is not null then 0
						  else isnull(Is_Working,0) end
			AND HoursPerWeek = case when @ClaimType like '%ffsd_at_work_15_less' then case when HoursPerWeek <= 15 then HoursPerWeek else 15 end
									when @ClaimType like '%ffsd_at_work_15_more' then case when HoursPerWeek > 15 then HoursPerWeek else 16 end
									else HoursPerWeek end									
			AND (Isnull(Physio_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Physio_Paid > 2000 then Physio_Paid else 2001 end
								   else Isnull(Physio_Paid,0) end
				OR Isnull(Chiro_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 1000 then Chiro_Paid else 1001 end
								   else Isnull(Chiro_Paid,0) end
				OR Isnull(Massage_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Massage_Paid > 0 then Massage_Paid else 1 end
								   else Isnull(Massage_Paid,0) end
				OR Isnull(Osteopathy_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Osteopathy_Paid > 0 then Osteopathy_Paid else 1 end
								   else Isnull(Osteopathy_Paid,0) end
				OR Isnull(Acupuncture_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Acupuncture_Paid > 0 then Acupuncture_Paid else 1 end
								   else Isnull(Acupuncture_Paid,0) end
				OR Isnull(Rehab_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 0 then Rehab_Paid else 1 end
								   else Isnull(Rehab_Paid,0) end)
			AND NCMM_Actions_This_Week = case when @ClaimType like '%ncmm_this_week' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '1' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like '%ncmm_next_week' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '1' end
											  else NCMM_Actions_Next_Week end	
	END
	ELSE IF @ClaimType like 'claim_open%'
	BEGIN
		select *
		from [dbo].[udf_CPR_Raw] ('tmf', @End_Date, @Period_Type) cpr 
		where @Value = case when @Value <> 'all' and @Value <> 'health@@@other' and @Value <> 'police@@@fire' and @Type = 'agency' then Agency_Name
							  when @Value <> 'all' and @Type = 'group' then [Group]
							  when @Value = 'all' then 'all'
							  when @Value = 'health@@@other' and Agency_Name in ('health','other') then 'health@@@other'
							  when @Value = 'police@@@fire' and Agency_Name in ('police','fire') then 'police@@@fire'
						 end
			AND @SubValue = case when @SubValue <> 'all' and @Type = 'agency' then Sub_Category
								 when @SubValue <> 'all' and @Type = 'group' then Team
								 when @SubValue = 'all' then 'all'
							end
			AND @SubSubValue = case when @SubSubValue <> 'all' then Claims_Officer_Name
									else 'all'
							   end
			AND (Date_Claim_Closed is null or Date_Claim_Closed < @End_Date) 
			and (Date_Claim_Reopened is null or Date_Claim_Reopened < @End_Date) and Claim_Closed_Flag <> 'Y'
			
			and (case when @Psychological_Claims <> 'all' then Is_Stress else '1' end)
				= (case when @Psychological_Claims <> 'all'	then @Psychological_Claims	else '1' end)

			and (case when @Inactive_Claims <> 'all' then Is_Inactive_Claims else '1' end)
				= (case when @Inactive_Claims <> 'all'	then  @Inactive_Claims	else '1' end)

			and (case when @Medically_Discharged <> 'all' then Is_Medically_Discharged	else '1' end)
				= (case when @Medically_Discharged <> 'all' then @Medically_Discharged else '1'	end)

			and (case when @Exempt_From_Reform <> 'all'	then Is_Exempt	else '1' end)
				= (case when @Exempt_From_Reform <> 'all' then @Exempt_From_Reform	else '1' end)

			and (case when @Reactivation <> 'all' then Is_Reactive	else '1' end)
				= (case when @Reactivation <> 'all'	then @Reactivation	else '1' end)
				
			AND Is_Time_Lost = case when @ClaimType like 'claim_open_nlt%' then 0
									when @ClaimType like 'claim_open_0_13%'
									  or @ClaimType like 'claim_open_13_26%' 
									  or @ClaimType like 'claim_open_26_52%' 
									  or @ClaimType like 'claim_open_52_78%' 
									  or @ClaimType like 'claim_open_0_78%' 
									  or @ClaimType like 'claim_open_78_130%' 
									  or @ClaimType like 'claim_open_gt_130%' then 1
									else Is_Time_Lost end
			AND DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 = 
					case when @ClaimType like 'claim_open_0_13%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 0 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 13 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 1 end
						 when @ClaimType like 'claim_open_13_26%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 13 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 26 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 14 end
						 when @ClaimType like 'claim_open_26_52%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 26 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 52 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 27 end
						 when @ClaimType like 'claim_open_52_78%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 52 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 78 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 53 end
						 when @ClaimType like 'claim_open_0_78%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 0 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 78 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 1 end
					     when @ClaimType like 'claim_open_78_130%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 78 and 
																				DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 <= 130 
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 79 end
					     when @ClaimType like 'claim_open_gt_130%' then case when DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 > 130
																			   then DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0
																		   else 131 end	
					else DATEDIFF(DAY, Date_of_Injury, DATEADD(DAY, -1, @End_Date)) / 7.0 end
					
			AND NCMM_Actions_This_Week = case when @ClaimType like 'claim_open_ncmm_this_week%' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '0' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like 'claim_open_ncmm_next_week%' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '0' end
											  else NCMM_Actions_Next_Week end
			AND Isnull(Acupuncture_Paid,0) = case when @ClaimType like 'claim_open_acupuncture%' then case when Isnull(Acupuncture_Paid,0) > 0 then Isnull(Acupuncture_Paid,0) else 1 end
										else Isnull(Acupuncture_Paid,0) end
			AND Isnull(Chiro_Paid,0) = case when @ClaimType like 'claim_open_chiro%' then case when Isnull(Chiro_Paid,0) > 1000 then Isnull(Chiro_Paid,0) else 1001 end
										else Isnull(Chiro_Paid,0) end
			AND Isnull(Massage_Paid,0) = case when @ClaimType like 'claim_open_massage%' then case when Isnull(Massage_Paid,0) > 0 then Isnull(Massage_Paid,0) else 1 end
										else Isnull(Massage_Paid,0) end
			AND Isnull(Osteopathy_Paid,0) = case when @ClaimType like 'claim_open_ost%' then case when Isnull(Osteopathy_Paid,0) > 0 then Isnull(Osteopathy_Paid,0) else 1 end
										else Isnull(Osteopathy_Paid,0) end
			AND Isnull(Physio_Paid,0) = case when @ClaimType like 'claim_open_physio%' then case when Isnull(Physio_Paid,0) > 2000 then Isnull(Physio_Paid,0) else 2001 end
										else Isnull(Physio_Paid,0) end
			AND Isnull(Rehab_Paid,0) = case when @ClaimType like 'claim_open_rehab%' then case when Isnull(Rehab_Paid,0) > 0 then Isnull(Rehab_Paid,0) else 1 end
										else Isnull(Rehab_Paid,0) end
			AND Isnull(Result_Of_Injury_Code,0) = case when @ClaimType like 'claim_open_death%' then 1
										else Isnull(Result_Of_Injury_Code,0) end	
			AND Isnull(Is_Industrial_Deafness,0) = case when @ClaimType like 'claim_open_industrial_deafness%' then 1
										else Isnull(Is_Industrial_Deafness,0) end	
			AND Isnull(Result_Of_Injury_Code,0) = case when @ClaimType like 'claim_open_ppd%' then 3
										else Isnull(Result_Of_Injury_Code,0) end	
			AND Isnull(Total_Recoveries,0) = case when @ClaimType like 'claim_open_recovery%' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
											  else Isnull(Total_Recoveries,0) end
			AND Isnull(WPI,0) = case when @ClaimType like 'claim_open_wpi_all%' then case when WPI > 0 then WPI else 1 end
						   when @ClaimType like 'claim_open_wpi_0_10%' then case when WPI > 0 and WPI <= 10 then WPI else 1 end
				           when @ClaimType like 'claim_open_wpi_11_14%' then case when WPI >= 11 and WPI <= 14 then WPI else 12 end
						   when @ClaimType like 'claim_open_wpi_15_20%' then case when WPI >= 15 and WPI <= 20 then WPI else 16 end
						   when @ClaimType like 'claim_open_wpi_21_30%' then case when WPI >= 21 and WPI <= 30 then WPI else 22 end
						   when @ClaimType like 'claim_open_wpi_31_more%' then case when WPI >= 31 then WPI else 32 end
					  else Isnull(WPI,0) end
			AND Isnull(Common_Law,0) = case when @ClaimType like 'claim_open_wid%' then 1 else Isnull(Common_Law,0) end		
			--common condition--
			AND Is_Medical_Only = case when @ClaimType like '%med_only' then 1 else Is_Medical_Only end
			AND Is_D_D = case when @ClaimType like '%d_d' then 1 else Is_D_D end
			AND (Total_Recoveries = case when @ClaimType like '%lum_sum_in' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
										 else Total_Recoveries end
				OR Common_Law = case when @ClaimType like '%lum_sum_in' then 1 else Common_Law end
				OR isnull(WPI,0) = case when @ClaimType like '%lum_sum_in' then case when WPI >= 0 then WPI else 1 end
							  else isnull(WPI,0) end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 3 else Result_Of_Injury_Code end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 1 else Result_Of_Injury_Code end
				OR Is_Industrial_Deafness = case when @ClaimType like '%lum_sum_in' then 1 else Is_Industrial_Deafness end 
				)
			AND Med_Cert_Status = case when @ClaimType like '%totally_unfit' then 'TU'
									   when @ClaimType like '%ffsd_at_work_15_less' then 'SID'
									   when @ClaimType like '%ffsd_at_work_15_more' then 'SID'
									   when @ClaimType like '%ffsd_not_at_work' then 'SID'
									   when @ClaimType like '%pid' then 'PID'
									   else Med_Cert_Status end
			AND case when @ClaimType like '%ffsd_not_at_work'
						or @ClaimType like '%ffsd_at_work_15_more'
						or @ClaimType like '%ffsd_at_work_15_less' then Is_Working
					 else isnull(Is_Working,0) end 
					 = 
					 case when @ClaimType like '%ffsd_at_work_15_less' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_at_work_15_more' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_not_at_work' and Is_Working is not null then 0
						  else isnull(Is_Working,0) end
			AND HoursPerWeek = case when @ClaimType like '%ffsd_at_work_15_less' then case when HoursPerWeek <= 15 then HoursPerWeek else 15 end
									when @ClaimType like '%ffsd_at_work_15_more' then case when HoursPerWeek > 15 then HoursPerWeek else 16 end
									else HoursPerWeek end									
			AND (Isnull(Physio_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Physio_Paid > 2000 then Physio_Paid else 2001 end
								   else Isnull(Physio_Paid,0) end
				OR Isnull(Chiro_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 1000 then Chiro_Paid else 1001 end
								   else Isnull(Chiro_Paid,0) end
				OR Isnull(Massage_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Massage_Paid > 0 then Massage_Paid else 1 end
								   else Isnull(Massage_Paid,0) end
				OR Isnull(Osteopathy_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Osteopathy_Paid > 0 then Osteopathy_Paid else 1 end
								   else Isnull(Osteopathy_Paid,0) end
				OR Isnull(Acupuncture_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Acupuncture_Paid > 0 then Acupuncture_Paid else 1 end
								   else Isnull(Acupuncture_Paid,0) end
				OR Isnull(Rehab_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 0 then Rehab_Paid else 1 end
								   else Isnull(Rehab_Paid,0) end)
			AND NCMM_Actions_This_Week = case when @ClaimType like '%ncmm_this_week' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '1' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like '%ncmm_next_week' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '1' end
											  else NCMM_Actions_Next_Week end						 																 
	END
	ELSE IF @ClaimType like 'claim_re_open%'
	BEGIN
		select *
		from [dbo].[udf_CPR_Raw] ('tmf', @End_Date, @Period_Type) cpr 
		where @Value = case when @Value <> 'all' and @Value <> 'health@@@other' and @Value <> 'police@@@fire' and @Type = 'agency' then Agency_Name
							  when @Value <> 'all' and @Type = 'group' then [Group]
							  when @Value = 'all' then 'all'
							  when @Value = 'health@@@other' and Agency_Name in ('health','other') then 'health@@@other'
							  when @Value = 'police@@@fire' and Agency_Name in ('police','fire') then 'police@@@fire'
						 end
			AND @SubValue = case when @SubValue <> 'all' and @Type = 'agency' then Sub_Category
								 when @SubValue <> 'all' and @Type = 'group' then Team
								 when @SubValue = 'all' then 'all'
							end
			AND @SubSubValue = case when @SubSubValue <> 'all' then Claims_Officer_Name
									else 'all'
							   end
			AND Date_Claim_Reopened between @Start_Date and @End_Date	
			--common condition--
			AND Is_Medical_Only = case when @ClaimType like '%med_only' then 1 else Is_Medical_Only end
			AND Is_D_D = case when @ClaimType like '%d_d' then 1 else Is_D_D end
			AND (Total_Recoveries = case when @ClaimType like '%lum_sum_in' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
										 else Total_Recoveries end
				OR Common_Law = case when @ClaimType like '%lum_sum_in' then 1 else Common_Law end
				OR isnull(WPI,0) = case when @ClaimType like '%lum_sum_in' then case when WPI >= 0 then WPI else 1 end
							  else isnull(WPI,0) end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 3 else Result_Of_Injury_Code end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 1 else Result_Of_Injury_Code end
				OR Is_Industrial_Deafness = case when @ClaimType like '%lum_sum_in' then 1 else Is_Industrial_Deafness end 
				)
			AND Med_Cert_Status = case when @ClaimType like '%totally_unfit' then 'TU'
									   when @ClaimType like '%ffsd_at_work_15_less' then 'SID'
									   when @ClaimType like '%ffsd_at_work_15_more' then 'SID'
									   when @ClaimType like '%ffsd_not_at_work' then 'SID'
									   when @ClaimType like '%pid' then 'PID'
									   else Med_Cert_Status end
			AND case when @ClaimType like '%ffsd_not_at_work'
						or @ClaimType like '%ffsd_at_work_15_more'
						or @ClaimType like '%ffsd_at_work_15_less' then Is_Working
					 else isnull(Is_Working,0) end 
					 = 
					 case when @ClaimType like '%ffsd_at_work_15_less' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_at_work_15_more' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_not_at_work' and Is_Working is not null then 0
						  else isnull(Is_Working,0) end
			AND HoursPerWeek = case when @ClaimType like '%ffsd_at_work_15_less' then case when HoursPerWeek <= 15 then HoursPerWeek else 15 end
									when @ClaimType like '%ffsd_at_work_15_more' then case when HoursPerWeek > 15 then HoursPerWeek else 16 end
									else HoursPerWeek end									
			AND (Isnull(Physio_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Physio_Paid > 2000 then Physio_Paid else 2001 end
								   else Isnull(Physio_Paid,0) end
				OR Isnull(Chiro_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 1000 then Chiro_Paid else 1001 end
								   else Isnull(Chiro_Paid,0) end
				OR Isnull(Massage_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Massage_Paid > 0 then Massage_Paid else 1 end
								   else Isnull(Massage_Paid,0) end
				OR Isnull(Osteopathy_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Osteopathy_Paid > 0 then Osteopathy_Paid else 1 end
								   else Isnull(Osteopathy_Paid,0) end
				OR Isnull(Acupuncture_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Acupuncture_Paid > 0 then Acupuncture_Paid else 1 end
								   else Isnull(Acupuncture_Paid,0) end
				OR Isnull(Rehab_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 0 then Rehab_Paid else 1 end
								   else Isnull(Rehab_Paid,0) end)
			AND NCMM_Actions_This_Week = case when @ClaimType like '%ncmm_this_week' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '1' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like '%ncmm_next_week' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '1' end
											  else NCMM_Actions_Next_Week end						 																 
	END
	ELSE IF @ClaimType like 'claim_closure%'
	BEGIN
		select *
		from [dbo].[udf_CPR_Raw] ('tmf', @End_Date, @Period_Type) cpr 
		where @Value = case when @Value <> 'all' and @Value <> 'health@@@other' and @Value <> 'police@@@fire' and @Type = 'agency' then Agency_Name
							  when @Value <> 'all' and @Type = 'group' then [Group]
							  when @Value = 'all' then 'all'
							  when @Value = 'health@@@other' and Agency_Name in ('health','other') then 'health@@@other'
							  when @Value = 'police@@@fire' and Agency_Name in ('police','fire') then 'police@@@fire'
						 end
			AND @SubValue = case when @SubValue <> 'all' and @Type = 'agency' then Sub_Category
								 when @SubValue <> 'all' and @Type = 'group' then Team
								 when @SubValue = 'all' then 'all'
							end
			AND @SubSubValue = case when @SubSubValue <> 'all' then Claims_Officer_Name
									else 'all'
							   end
			AND Date_Claim_Closed between @Start_Date and @End_Date
			and Claim_Closed_Flag = 'Y'
			and (@IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 
				or exists (SELECT [Claim_No] FROM [dbo].[udf_CPR_Raw]('tmf', DATEADD(DAY, -1, @Start_Date) + '23:59',-1) cpr_pre 
							WHERE cpr_pre.Claim_No = cpr.Claim_No AND cpr_pre.Claim_Closed_Flag = 'N')
				or ISNULL(Date_Claim_Entered, date_claim_received) >= @Start_Date)
			--common condition--
			AND Is_Medical_Only = case when @ClaimType like '%med_only' then 1 else Is_Medical_Only end
			AND Is_D_D = case when @ClaimType like '%d_d' then 1 else Is_D_D end
			AND (Total_Recoveries = case when @ClaimType like '%lum_sum_in' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
										 else Total_Recoveries end
				OR Common_Law = case when @ClaimType like '%lum_sum_in' then 1 else Common_Law end
				OR isnull(WPI,0) = case when @ClaimType like '%lum_sum_in' then case when WPI >= 0 then WPI else 1 end
							  else isnull(WPI,0) end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 3 else Result_Of_Injury_Code end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 1 else Result_Of_Injury_Code end
				OR Is_Industrial_Deafness = case when @ClaimType like '%lum_sum_in' then 1 else Is_Industrial_Deafness end 
				)
			AND Med_Cert_Status = case when @ClaimType like '%totally_unfit' then 'TU'
									   when @ClaimType like '%ffsd_at_work_15_less' then 'SID'
									   when @ClaimType like '%ffsd_at_work_15_more' then 'SID'
									   when @ClaimType like '%ffsd_not_at_work' then 'SID'
									   when @ClaimType like '%pid' then 'PID'
									   else Med_Cert_Status end
			AND case when @ClaimType like '%ffsd_not_at_work'
						or @ClaimType like '%ffsd_at_work_15_more'
						or @ClaimType like '%ffsd_at_work_15_less' then Is_Working
					 else isnull(Is_Working,0) end 
					 = 
					 case when @ClaimType like '%ffsd_at_work_15_less' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_at_work_15_more' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_not_at_work' and Is_Working is not null then 0
						  else isnull(Is_Working,0) end
			AND HoursPerWeek = case when @ClaimType like '%ffsd_at_work_15_less' then case when HoursPerWeek <= 15 then HoursPerWeek else 15 end
									when @ClaimType like '%ffsd_at_work_15_more' then case when HoursPerWeek > 15 then HoursPerWeek else 16 end
									else HoursPerWeek end									
			AND (Isnull(Physio_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Physio_Paid > 2000 then Physio_Paid else 2001 end
								   else Isnull(Physio_Paid,0) end
				OR Isnull(Chiro_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 1000 then Chiro_Paid else 1001 end
								   else Isnull(Chiro_Paid,0) end
				OR Isnull(Massage_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Massage_Paid > 0 then Massage_Paid else 1 end
								   else Isnull(Massage_Paid,0) end
				OR Isnull(Osteopathy_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Osteopathy_Paid > 0 then Osteopathy_Paid else 1 end
								   else Isnull(Osteopathy_Paid,0) end
				OR Isnull(Acupuncture_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Acupuncture_Paid > 0 then Acupuncture_Paid else 1 end
								   else Isnull(Acupuncture_Paid,0) end
				OR Isnull(Rehab_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 0 then Rehab_Paid else 1 end
								   else Isnull(Rehab_Paid,0) end)
			AND NCMM_Actions_This_Week = case when @ClaimType like '%ncmm_this_week' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '1' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like '%ncmm_next_week' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '1' end
											  else NCMM_Actions_Next_Week end						 																 
	END
	ELSE IF @ClaimType like 'claim_still_open%'
	BEGIN
		select *
		from [dbo].[udf_CPR_Raw] ('tmf', @End_Date, @Period_Type) cpr 
		where @Value = case when @Value <> 'all' and @Value <> 'health@@@other' and @Value <> 'police@@@fire' and @Type = 'agency' then Agency_Name
							  when @Value <> 'all' and @Type = 'group' then [Group]
							  when @Value = 'all' then 'all'
							  when @Value = 'health@@@other' and Agency_Name in ('health','other') then 'health@@@other'
							  when @Value = 'police@@@fire' and Agency_Name in ('police','fire') then 'police@@@fire'
						 end
			AND @SubValue = case when @SubValue <> 'all' and @Type = 'agency' then Sub_Category
								 when @SubValue <> 'all' and @Type = 'group' then Team
								 when @SubValue = 'all' then 'all'
							end
			AND @SubSubValue = case when @SubSubValue <> 'all' then Claims_Officer_Name
									else 'all'
							   end
			AND Date_Claim_Reopened between @Start_Date and @End_Date
			and Claim_Closed_Flag <> 'Y'
			and (case when @IsLastMonthRange = 1 or @IsLast2WeeksRange = 1 then IsPreClosed else 1 end) = 1
			and (@IsLastMonthRange = 1 or @IsLast2WeeksRange = 1
				or exists (SELECT [Claim_No] FROM [dbo].[udf_CPR_Raw]('tmf', DATEADD(DAY, -1, @Start_Date) + '23:59',-1) cpr_pre
							WHERE cpr_pre.Claim_No = cpr.Claim_No AND cpr_pre.Claim_Closed_Flag = 'Y'))
			--common condition--
			AND Is_Medical_Only = case when @ClaimType like '%med_only' then 1 else Is_Medical_Only end
			AND Is_D_D = case when @ClaimType like '%d_d' then 1 else Is_D_D end
			AND (Total_Recoveries = case when @ClaimType like '%lum_sum_in' then case when Total_Recoveries <> 0 then Total_Recoveries else 1 end
										 else Total_Recoveries end
				OR Common_Law = case when @ClaimType like '%lum_sum_in' then 1 else Common_Law end
				OR isnull(WPI,0) = case when @ClaimType like '%lum_sum_in' then case when WPI >= 0 then WPI else 1 end
							  else isnull(WPI,0) end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 3 else Result_Of_Injury_Code end
				OR Result_Of_Injury_Code = case when @ClaimType like '%lum_sum_in' then 1 else Result_Of_Injury_Code end
				OR Is_Industrial_Deafness = case when @ClaimType like '%lum_sum_in' then 1 else Is_Industrial_Deafness end 
				)
			AND Med_Cert_Status = case when @ClaimType like '%totally_unfit' then 'TU'
									   when @ClaimType like '%ffsd_at_work_15_less' then 'SID'
									   when @ClaimType like '%ffsd_at_work_15_more' then 'SID'
									   when @ClaimType like '%ffsd_not_at_work' then 'SID'
									   when @ClaimType like '%pid' then 'PID'
									   else Med_Cert_Status end
			AND case when @ClaimType like '%ffsd_not_at_work'
						or @ClaimType like '%ffsd_at_work_15_more'
						or @ClaimType like '%ffsd_at_work_15_less' then Is_Working
					 else isnull(Is_Working,0) end 
					 = 
					 case when @ClaimType like '%ffsd_at_work_15_less' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_at_work_15_more' and Is_Working is not null then 1
						  when @ClaimType like '%ffsd_not_at_work' and Is_Working is not null then 0
						  else isnull(Is_Working,0) end
			AND HoursPerWeek = case when @ClaimType like '%ffsd_at_work_15_less' then case when HoursPerWeek <= 15 then HoursPerWeek else 15 end
									when @ClaimType like '%ffsd_at_work_15_more' then case when HoursPerWeek > 15 then HoursPerWeek else 16 end
									else HoursPerWeek end									
			AND (Isnull(Physio_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Physio_Paid > 2000 then Physio_Paid else 2001 end
								   else Isnull(Physio_Paid,0) end
				OR Isnull(Chiro_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 1000 then Chiro_Paid else 1001 end
								   else Isnull(Chiro_Paid,0) end
				OR Isnull(Massage_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Massage_Paid > 0 then Massage_Paid else 1 end
								   else Isnull(Massage_Paid,0) end
				OR Isnull(Osteopathy_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Osteopathy_Paid > 0 then Osteopathy_Paid else 1 end
								   else Isnull(Osteopathy_Paid,0) end
				OR Isnull(Acupuncture_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Acupuncture_Paid > 0 then Acupuncture_Paid else 1 end
								   else Isnull(Acupuncture_Paid,0) end
				OR Isnull(Rehab_Paid,0) = case when @ClaimType like '%therapy_treat' then case when Chiro_Paid > 0 then Rehab_Paid else 1 end
								   else Isnull(Rehab_Paid,0) end)
			AND NCMM_Actions_This_Week = case when @ClaimType like '%ncmm_this_week' then case when NCMM_Actions_This_Week <> '' then NCMM_Actions_This_Week else '1' end
											  else NCMM_Actions_This_Week end
			AND NCMM_Actions_Next_Week = case when @ClaimType like '%ncmm_next_week' then case when NCMM_Actions_Next_Week <> '' then NCMM_Actions_Next_Week else '1' end
											  else NCMM_Actions_Next_Week end	
	END						
				
END

GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO--------------------------------  
-- END of D:\Work\Project\Dart\Branches\Dart\Tool\DBRelease\Dart\tmpChange\StoredProcedure\usp_TMF_CPR_Raw.sql  
--------------------------------  
