#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EM_Report.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Dart")]
	public partial class ReportModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCONTROLDO(CONTROLDO instance);
    partial void UpdateCONTROLDO(CONTROLDO instance);
    partial void DeleteCONTROLDO(CONTROLDO instance);
    partial void InsertExternal_GroupDO(External_GroupDO instance);
    partial void UpdateExternal_GroupDO(External_GroupDO instance);
    partial void DeleteExternal_GroupDO(External_GroupDO instance);
    partial void InsertOrganisation_RoleDO(Organisation_RoleDO instance);
    partial void UpdateOrganisation_RoleDO(Organisation_RoleDO instance);
    partial void DeleteOrganisation_RoleDO(Organisation_RoleDO instance);
    partial void InsertPermissionDO(PermissionDO instance);
    partial void UpdatePermissionDO(PermissionDO instance);
    partial void DeletePermissionDO(PermissionDO instance);
    partial void InsertRELEASE_VERSIONDO(RELEASE_VERSIONDO instance);
    partial void UpdateRELEASE_VERSIONDO(RELEASE_VERSIONDO instance);
    partial void DeleteRELEASE_VERSIONDO(RELEASE_VERSIONDO instance);
    partial void InsertReport_CategoryDO(Report_CategoryDO instance);
    partial void UpdateReport_CategoryDO(Report_CategoryDO instance);
    partial void DeleteReport_CategoryDO(Report_CategoryDO instance);
    partial void InsertReport_External_AccessDO(Report_External_AccessDO instance);
    partial void UpdateReport_External_AccessDO(Report_External_AccessDO instance);
    partial void DeleteReport_External_AccessDO(Report_External_AccessDO instance);
    partial void InsertReport_FavoriteDO(Report_FavoriteDO instance);
    partial void UpdateReport_FavoriteDO(Report_FavoriteDO instance);
    partial void DeleteReport_FavoriteDO(Report_FavoriteDO instance);
    partial void InsertReport_Organisation_LevelDO(Report_Organisation_LevelDO instance);
    partial void UpdateReport_Organisation_LevelDO(Report_Organisation_LevelDO instance);
    partial void DeleteReport_Organisation_LevelDO(Report_Organisation_LevelDO instance);
    partial void InsertReport_RecentlyDO(Report_RecentlyDO instance);
    partial void UpdateReport_RecentlyDO(Report_RecentlyDO instance);
    partial void DeleteReport_RecentlyDO(Report_RecentlyDO instance);
    partial void InsertStatusDO(StatusDO instance);
    partial void UpdateStatusDO(StatusDO instance);
    partial void DeleteStatusDO(StatusDO instance);
    partial void InsertSubscriptionDO(SubscriptionDO instance);
    partial void UpdateSubscriptionDO(SubscriptionDO instance);
    partial void DeleteSubscriptionDO(SubscriptionDO instance);
    partial void InsertSystem_PermissionDO(System_PermissionDO instance);
    partial void UpdateSystem_PermissionDO(System_PermissionDO instance);
    partial void DeleteSystem_PermissionDO(System_PermissionDO instance);
    partial void InsertSystem_Role_PermissionDO(System_Role_PermissionDO instance);
    partial void UpdateSystem_Role_PermissionDO(System_Role_PermissionDO instance);
    partial void DeleteSystem_Role_PermissionDO(System_Role_PermissionDO instance);
    partial void InsertSystem_RoleDO(System_RoleDO instance);
    partial void UpdateSystem_RoleDO(System_RoleDO instance);
    partial void DeleteSystem_RoleDO(System_RoleDO instance);
    partial void InsertSystemUserDO(SystemUserDO instance);
    partial void UpdateSystemUserDO(SystemUserDO instance);
    partial void DeleteSystemUserDO(SystemUserDO instance);
    partial void InsertReportDO(ReportDO instance);
    partial void UpdateReportDO(ReportDO instance);
    partial void DeleteReportDO(ReportDO instance);
    partial void InsertOrganisation_LevelDO(Organisation_LevelDO instance);
    partial void UpdateOrganisation_LevelDO(Organisation_LevelDO instance);
    partial void DeleteOrganisation_LevelDO(Organisation_LevelDO instance);
    partial void InsertSystemDO(SystemDO instance);
    partial void UpdateSystemDO(SystemDO instance);
    partial void DeleteSystemDO(SystemDO instance);
    partial void InsertTeamDO(TeamDO instance);
    partial void UpdateTeamDO(TeamDO instance);
    partial void DeleteTeamDO(TeamDO instance);
    partial void InsertDashboardDO(DashboardDO instance);
    partial void UpdateDashboardDO(DashboardDO instance);
    partial void DeleteDashboardDO(DashboardDO instance);
    partial void InsertDashboard_OrganisationRole_LevelDO(Dashboard_OrganisationRole_LevelDO instance);
    partial void UpdateDashboard_OrganisationRole_LevelDO(Dashboard_OrganisationRole_LevelDO instance);
    partial void DeleteDashboard_OrganisationRole_LevelDO(Dashboard_OrganisationRole_LevelDO instance);
    partial void InsertDashboard_LevelDO(Dashboard_LevelDO instance);
    partial void UpdateDashboard_LevelDO(Dashboard_LevelDO instance);
    partial void DeleteDashboard_LevelDO(Dashboard_LevelDO instance);
    partial void InsertDashboard_Graph_DescriptionDO(Dashboard_Graph_DescriptionDO instance);
    partial void UpdateDashboard_Graph_DescriptionDO(Dashboard_Graph_DescriptionDO instance);
    partial void DeleteDashboard_Graph_DescriptionDO(Dashboard_Graph_DescriptionDO instance);
    partial void InsertReportUserDO(ReportUserDO instance);
    partial void UpdateReportUserDO(ReportUserDO instance);
    partial void DeleteReportUserDO(ReportUserDO instance);
    partial void InsertDashboard_Traffic_Light_RuleDO(Dashboard_Traffic_Light_RuleDO instance);
    partial void UpdateDashboard_Traffic_Light_RuleDO(Dashboard_Traffic_Light_RuleDO instance);
    partial void DeleteDashboard_Traffic_Light_RuleDO(Dashboard_Traffic_Light_RuleDO instance);
    partial void InsertUserDO(UserDO instance);
    partial void UpdateUserDO(UserDO instance);
    partial void DeleteUserDO(UserDO instance);
    partial void InsertDashboard_FavourDO(Dashboard_FavourDO instance);
    partial void UpdateDashboard_FavourDO(Dashboard_FavourDO instance);
    partial void DeleteDashboard_FavourDO(Dashboard_FavourDO instance);
    partial void InsertEML_AWC_ProjectionDO(EML_AWC_ProjectionDO instance);
    partial void UpdateEML_AWC_ProjectionDO(EML_AWC_ProjectionDO instance);
    partial void DeleteEML_AWC_ProjectionDO(EML_AWC_ProjectionDO instance);
    partial void InsertEML_RTW_Target_BaseDO(EML_RTW_Target_BaseDO instance);
    partial void UpdateEML_RTW_Target_BaseDO(EML_RTW_Target_BaseDO instance);
    partial void DeleteEML_RTW_Target_BaseDO(EML_RTW_Target_BaseDO instance);
    partial void InsertHEM_AWC_ProjectionDO(HEM_AWC_ProjectionDO instance);
    partial void UpdateHEM_AWC_ProjectionDO(HEM_AWC_ProjectionDO instance);
    partial void DeleteHEM_AWC_ProjectionDO(HEM_AWC_ProjectionDO instance);
    partial void InsertHEM_RTW_Target_BaseDO(HEM_RTW_Target_BaseDO instance);
    partial void UpdateHEM_RTW_Target_BaseDO(HEM_RTW_Target_BaseDO instance);
    partial void DeleteHEM_RTW_Target_BaseDO(HEM_RTW_Target_BaseDO instance);
    partial void InsertTMF_AWC_ProjectionDO(TMF_AWC_ProjectionDO instance);
    partial void UpdateTMF_AWC_ProjectionDO(TMF_AWC_ProjectionDO instance);
    partial void DeleteTMF_AWC_ProjectionDO(TMF_AWC_ProjectionDO instance);
    partial void InsertTMF_RTW_Target_BaseDO(TMF_RTW_Target_BaseDO instance);
    partial void UpdateTMF_RTW_Target_BaseDO(TMF_RTW_Target_BaseDO instance);
    partial void DeleteTMF_RTW_Target_BaseDO(TMF_RTW_Target_BaseDO instance);
    partial void InsertEML_PortfolioDO(EML_PortfolioDO instance);
    partial void UpdateEML_PortfolioDO(EML_PortfolioDO instance);
    partial void DeleteEML_PortfolioDO(EML_PortfolioDO instance);
    partial void InsertHEM_PortfolioDO(HEM_PortfolioDO instance);
    partial void UpdateHEM_PortfolioDO(HEM_PortfolioDO instance);
    partial void DeleteHEM_PortfolioDO(HEM_PortfolioDO instance);
    partial void InsertTMF_PortfolioDO(TMF_PortfolioDO instance);
    partial void UpdateTMF_PortfolioDO(TMF_PortfolioDO instance);
    partial void DeleteTMF_PortfolioDO(TMF_PortfolioDO instance);
    partial void InsertDashboard_TimeAccessDO(Dashboard_TimeAccessDO instance);
    partial void UpdateDashboard_TimeAccessDO(Dashboard_TimeAccessDO instance);
    partial void DeleteDashboard_TimeAccessDO(Dashboard_TimeAccessDO instance);
    partial void InsertTMF_Agencies_Sub_CategoryDO(TMF_Agencies_Sub_CategoryDO instance);
    partial void UpdateTMF_Agencies_Sub_CategoryDO(TMF_Agencies_Sub_CategoryDO instance);
    partial void DeleteTMF_Agencies_Sub_CategoryDO(TMF_Agencies_Sub_CategoryDO instance);
    #endregion
		
		public ReportModelDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EM_ReportConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ReportModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CONTROLDO> CONTROLDOs
		{
			get
			{
				return this.GetTable<CONTROLDO>();
			}
		}
		
		public System.Data.Linq.Table<External_GroupDO> External_GroupDOs
		{
			get
			{
				return this.GetTable<External_GroupDO>();
			}
		}
		
		public System.Data.Linq.Table<Organisation_RoleDO> Organisation_RoleDOs
		{
			get
			{
				return this.GetTable<Organisation_RoleDO>();
			}
		}
		
		public System.Data.Linq.Table<PermissionDO> PermissionDOs
		{
			get
			{
				return this.GetTable<PermissionDO>();
			}
		}
		
		public System.Data.Linq.Table<RELEASE_VERSIONDO> RELEASE_VERSIONDOs
		{
			get
			{
				return this.GetTable<RELEASE_VERSIONDO>();
			}
		}
		
		public System.Data.Linq.Table<Report_CategoryDO> Report_CategoryDOs
		{
			get
			{
				return this.GetTable<Report_CategoryDO>();
			}
		}
		
		public System.Data.Linq.Table<Report_External_AccessDO> Report_External_AccessDOs
		{
			get
			{
				return this.GetTable<Report_External_AccessDO>();
			}
		}
		
		public System.Data.Linq.Table<Report_FavoriteDO> Report_FavoriteDOs
		{
			get
			{
				return this.GetTable<Report_FavoriteDO>();
			}
		}
		
		public System.Data.Linq.Table<Report_Organisation_LevelDO> Report_Organisation_LevelDOs
		{
			get
			{
				return this.GetTable<Report_Organisation_LevelDO>();
			}
		}
		
		public System.Data.Linq.Table<Report_RecentlyDO> Report_RecentlyDOs
		{
			get
			{
				return this.GetTable<Report_RecentlyDO>();
			}
		}
		
		public System.Data.Linq.Table<StatusDO> StatusDOs
		{
			get
			{
				return this.GetTable<StatusDO>();
			}
		}
		
		public System.Data.Linq.Table<SubscriptionDO> SubscriptionDOs
		{
			get
			{
				return this.GetTable<SubscriptionDO>();
			}
		}
		
		public System.Data.Linq.Table<System_PermissionDO> System_PermissionDOs
		{
			get
			{
				return this.GetTable<System_PermissionDO>();
			}
		}
		
		public System.Data.Linq.Table<System_Role_PermissionDO> System_Role_PermissionDOs
		{
			get
			{
				return this.GetTable<System_Role_PermissionDO>();
			}
		}
		
		public System.Data.Linq.Table<System_RoleDO> System_RoleDOs
		{
			get
			{
				return this.GetTable<System_RoleDO>();
			}
		}
		
		public System.Data.Linq.Table<SystemUserDO> SystemUserDOs
		{
			get
			{
				return this.GetTable<SystemUserDO>();
			}
		}
		
		public System.Data.Linq.Table<ReportDO> ReportDOs
		{
			get
			{
				return this.GetTable<ReportDO>();
			}
		}
		
		public System.Data.Linq.Table<Organisation_LevelDO> Organisation_LevelDOs
		{
			get
			{
				return this.GetTable<Organisation_LevelDO>();
			}
		}
		
		public System.Data.Linq.Table<SystemDO> SystemDOs
		{
			get
			{
				return this.GetTable<SystemDO>();
			}
		}
		
		public System.Data.Linq.Table<TeamDO> TeamDOs
		{
			get
			{
				return this.GetTable<TeamDO>();
			}
		}
		
		public System.Data.Linq.Table<DashboardDO> DashboardDOs
		{
			get
			{
				return this.GetTable<DashboardDO>();
			}
		}
		
		public System.Data.Linq.Table<Dashboard_OrganisationRole_LevelDO> Dashboard_OrganisationRole_LevelDOs
		{
			get
			{
				return this.GetTable<Dashboard_OrganisationRole_LevelDO>();
			}
		}
		
		public System.Data.Linq.Table<Dashboard_LevelDO> Dashboard_LevelDOs
		{
			get
			{
				return this.GetTable<Dashboard_LevelDO>();
			}
		}
		
		public System.Data.Linq.Table<Dashboard_Graph_DescriptionDO> Dashboard_Graph_DescriptionDOs
		{
			get
			{
				return this.GetTable<Dashboard_Graph_DescriptionDO>();
			}
		}
		
		public System.Data.Linq.Table<ReportUserDO> ReportUserDOs
		{
			get
			{
				return this.GetTable<ReportUserDO>();
			}
		}
		
		public System.Data.Linq.Table<Dashboard_Traffic_Light_RuleDO> Dashboard_Traffic_Light_RuleDOs
		{
			get
			{
				return this.GetTable<Dashboard_Traffic_Light_RuleDO>();
			}
		}
		
		public System.Data.Linq.Table<UserDO> UserDOs
		{
			get
			{
				return this.GetTable<UserDO>();
			}
		}
		
		public System.Data.Linq.Table<Dashboard_FavourDO> Dashboard_FavourDOs
		{
			get
			{
				return this.GetTable<Dashboard_FavourDO>();
			}
		}
		
		public System.Data.Linq.Table<EML_AWC_ProjectionDO> EML_AWC_ProjectionDOs
		{
			get
			{
				return this.GetTable<EML_AWC_ProjectionDO>();
			}
		}
		
		public System.Data.Linq.Table<EML_RTW_Target_BaseDO> EML_RTW_Target_BaseDOs
		{
			get
			{
				return this.GetTable<EML_RTW_Target_BaseDO>();
			}
		}
		
		public System.Data.Linq.Table<HEM_AWC_ProjectionDO> HEM_AWC_ProjectionDOs
		{
			get
			{
				return this.GetTable<HEM_AWC_ProjectionDO>();
			}
		}
		
		public System.Data.Linq.Table<HEM_RTW_Target_BaseDO> HEM_RTW_Target_BaseDOs
		{
			get
			{
				return this.GetTable<HEM_RTW_Target_BaseDO>();
			}
		}
		
		public System.Data.Linq.Table<TMF_AWC_ProjectionDO> TMF_AWC_ProjectionDOs
		{
			get
			{
				return this.GetTable<TMF_AWC_ProjectionDO>();
			}
		}
		
		public System.Data.Linq.Table<TMF_RTW_Target_BaseDO> TMF_RTW_Target_BaseDOs
		{
			get
			{
				return this.GetTable<TMF_RTW_Target_BaseDO>();
			}
		}
		
		public System.Data.Linq.Table<EML_PortfolioDO> EML_PortfolioDOs
		{
			get
			{
				return this.GetTable<EML_PortfolioDO>();
			}
		}
		
		public System.Data.Linq.Table<HEM_PortfolioDO> HEM_PortfolioDOs
		{
			get
			{
				return this.GetTable<HEM_PortfolioDO>();
			}
		}
		
		public System.Data.Linq.Table<TMF_PortfolioDO> TMF_PortfolioDOs
		{
			get
			{
				return this.GetTable<TMF_PortfolioDO>();
			}
		}
		
		public System.Data.Linq.Table<Dashboard_TimeAccessDO> Dashboard_TimeAccessDOs
		{
			get
			{
				return this.GetTable<Dashboard_TimeAccessDO>();
			}
		}
		
		public System.Data.Linq.Table<TMF_Agencies_Sub_CategoryDO> TMF_Agencies_Sub_CategoryDOs
		{
			get
			{
				return this.GetTable<TMF_Agencies_Sub_CategoryDO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONTROL")]
	public partial class CONTROLDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TYPE;
		
		private string _ITEM;
		
		private string _VALUE;
		
		private string _TEXT_VALUE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTYPEChanging(string value);
    partial void OnTYPEChanged();
    partial void OnITEMChanging(string value);
    partial void OnITEMChanged();
    partial void OnVALUEChanging(string value);
    partial void OnVALUEChanged();
    partial void OnTEXT_VALUEChanging(string value);
    partial void OnTEXT_VALUEChanged();
    #endregion
		
		public CONTROLDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TYPE
		{
			get
			{
				return this._TYPE;
			}
			set
			{
				if ((this._TYPE != value))
				{
					this.OnTYPEChanging(value);
					this.SendPropertyChanging();
					this._TYPE = value;
					this.SendPropertyChanged("TYPE");
					this.OnTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITEM", DbType="Char(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ITEM
		{
			get
			{
				return this._ITEM;
			}
			set
			{
				if ((this._ITEM != value))
				{
					this.OnITEMChanging(value);
					this.SendPropertyChanging();
					this._ITEM = value;
					this.SendPropertyChanged("ITEM");
					this.OnITEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALUE", DbType="VarChar(1024)")]
		public string VALUE
		{
			get
			{
				return this._VALUE;
			}
			set
			{
				if ((this._VALUE != value))
				{
					this.OnVALUEChanging(value);
					this.SendPropertyChanging();
					this._VALUE = value;
					this.SendPropertyChanged("VALUE");
					this.OnVALUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEXT_VALUE", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TEXT_VALUE
		{
			get
			{
				return this._TEXT_VALUE;
			}
			set
			{
				if ((this._TEXT_VALUE != value))
				{
					this.OnTEXT_VALUEChanging(value);
					this.SendPropertyChanging();
					this._TEXT_VALUE = value;
					this.SendPropertyChanged("TEXT_VALUE");
					this.OnTEXT_VALUEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.External_Groups")]
	public partial class External_GroupDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _External_GroupId;
		
		private string _Name;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private string _Description;
		
		private EntitySet<Report_External_AccessDO> _Report_External_Accesses;
		
		private EntitySet<ReportUserDO> _ReportUserDOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExternal_GroupIdChanging(int value);
    partial void OnExternal_GroupIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public External_GroupDO()
		{
			this._Report_External_Accesses = new EntitySet<Report_External_AccessDO>(new Action<Report_External_AccessDO>(this.attach_Report_External_Accesses), new Action<Report_External_AccessDO>(this.detach_Report_External_Accesses));
			this._ReportUserDOs = new EntitySet<ReportUserDO>(new Action<ReportUserDO>(this.attach_ReportUserDOs), new Action<ReportUserDO>(this.detach_ReportUserDOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_External_GroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int External_GroupId
		{
			get
			{
				return this._External_GroupId;
			}
			set
			{
				if ((this._External_GroupId != value))
				{
					this.OnExternal_GroupIdChanging(value);
					this.SendPropertyChanging();
					this._External_GroupId = value;
					this.SendPropertyChanged("External_GroupId");
					this.OnExternal_GroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="External_GroupDO_Report_External_AccessDO", Storage="_Report_External_Accesses", ThisKey="External_GroupId", OtherKey="External_GroupId")]
		public EntitySet<Report_External_AccessDO> Report_External_AccessDOs
		{
			get
			{
				return this._Report_External_Accesses;
			}
			set
			{
				this._Report_External_Accesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="External_GroupDO_ReportUserDO", Storage="_ReportUserDOs", ThisKey="External_GroupId", OtherKey="External_GroupId")]
		public EntitySet<ReportUserDO> ReportUserDOs
		{
			get
			{
				return this._ReportUserDOs;
			}
			set
			{
				this._ReportUserDOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Report_External_Accesses(Report_External_AccessDO entity)
		{
			this.SendPropertyChanging();
			entity.External_GroupDO = this;
		}
		
		private void detach_Report_External_Accesses(Report_External_AccessDO entity)
		{
			this.SendPropertyChanging();
			entity.External_GroupDO = null;
		}
		
		private void attach_ReportUserDOs(ReportUserDO entity)
		{
			this.SendPropertyChanging();
			entity.External_GroupDO = this;
		}
		
		private void detach_ReportUserDOs(ReportUserDO entity)
		{
			this.SendPropertyChanging();
			entity.External_GroupDO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organisation_Roles")]
	public partial class Organisation_RoleDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Organisation_RoleId;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<int> _LevelId;
		
		private EntitySet<ReportUserDO> _ReportUserDOs;
		
		private EntityRef<Organisation_LevelDO> _Organisation_LevelDO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganisation_RoleIdChanging(int value);
    partial void OnOrganisation_RoleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnLevelIdChanging(System.Nullable<int> value);
    partial void OnLevelIdChanged();
    #endregion
		
		public Organisation_RoleDO()
		{
			this._ReportUserDOs = new EntitySet<ReportUserDO>(new Action<ReportUserDO>(this.attach_ReportUserDOs), new Action<ReportUserDO>(this.detach_ReportUserDOs));
			this._Organisation_LevelDO = default(EntityRef<Organisation_LevelDO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organisation_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Organisation_RoleId
		{
			get
			{
				return this._Organisation_RoleId;
			}
			set
			{
				if ((this._Organisation_RoleId != value))
				{
					this.OnOrganisation_RoleIdChanging(value);
					this.SendPropertyChanging();
					this._Organisation_RoleId = value;
					this.SendPropertyChanged("Organisation_RoleId");
					this.OnOrganisation_RoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelId", DbType="Int")]
		public System.Nullable<int> LevelId
		{
			get
			{
				return this._LevelId;
			}
			set
			{
				if ((this._LevelId != value))
				{
					if (this._Organisation_LevelDO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevelIdChanging(value);
					this.SendPropertyChanging();
					this._LevelId = value;
					this.SendPropertyChanged("LevelId");
					this.OnLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_RoleDO_ReportUserDO", Storage="_ReportUserDOs", ThisKey="Organisation_RoleId", OtherKey="Organisation_RoleId")]
		public EntitySet<ReportUserDO> ReportUserDOs
		{
			get
			{
				return this._ReportUserDOs;
			}
			set
			{
				this._ReportUserDOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_LevelDO_Organisation_RoleDO", Storage="_Organisation_LevelDO", ThisKey="LevelId", OtherKey="LevelId", IsForeignKey=true)]
		public Organisation_LevelDO Organisation_LevelDO
		{
			get
			{
				return this._Organisation_LevelDO.Entity;
			}
			set
			{
				Organisation_LevelDO previousValue = this._Organisation_LevelDO.Entity;
				if (((previousValue != value) 
							|| (this._Organisation_LevelDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation_LevelDO.Entity = null;
						previousValue.Organisation_RoleDOs.Remove(this);
					}
					this._Organisation_LevelDO.Entity = value;
					if ((value != null))
					{
						value.Organisation_RoleDOs.Add(this);
						this._LevelId = value.LevelId;
					}
					else
					{
						this._LevelId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organisation_LevelDO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReportUserDOs(ReportUserDO entity)
		{
			this.SendPropertyChanging();
			entity.Organisation_RoleDO = this;
		}
		
		private void detach_ReportUserDOs(ReportUserDO entity)
		{
			this.SendPropertyChanging();
			entity.Organisation_RoleDO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permissions")]
	public partial class PermissionDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PermissionId;
		
		private string _Name;
		
		private System.Nullable<short> _Status;
		
		private string _Description;
		
		private EntitySet<System_Role_PermissionDO> _System_Role_Permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermissionIdChanging(int value);
    partial void OnPermissionIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public PermissionDO()
		{
			this._System_Role_Permissions = new EntitySet<System_Role_PermissionDO>(new Action<System_Role_PermissionDO>(this.attach_System_Role_Permissions), new Action<System_Role_PermissionDO>(this.detach_System_Role_Permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PermissionDO_System_Role_PermissionDO", Storage="_System_Role_Permissions", ThisKey="PermissionId", OtherKey="PermissionId")]
		public EntitySet<System_Role_PermissionDO> System_Role_PermissionDOs
		{
			get
			{
				return this._System_Role_Permissions;
			}
			set
			{
				this._System_Role_Permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_System_Role_Permissions(System_Role_PermissionDO entity)
		{
			this.SendPropertyChanging();
			entity.PermissionDO = this;
		}
		
		private void detach_System_Role_Permissions(System_Role_PermissionDO entity)
		{
			this.SendPropertyChanging();
			entity.PermissionDO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RELEASE_VERSION")]
	public partial class RELEASE_VERSIONDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Release_Version_No;
		
		private string _Object_Code;
		
		private string _Object_Version_No;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _Owner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRelease_Version_NoChanging(string value);
    partial void OnRelease_Version_NoChanged();
    partial void OnObject_CodeChanging(string value);
    partial void OnObject_CodeChanged();
    partial void OnObject_Version_NoChanging(string value);
    partial void OnObject_Version_NoChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    #endregion
		
		public RELEASE_VERSIONDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Release_Version_No", DbType="Char(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Release_Version_No
		{
			get
			{
				return this._Release_Version_No;
			}
			set
			{
				if ((this._Release_Version_No != value))
				{
					this.OnRelease_Version_NoChanging(value);
					this.SendPropertyChanging();
					this._Release_Version_No = value;
					this.SendPropertyChanged("Release_Version_No");
					this.OnRelease_Version_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object_Code", DbType="Char(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Object_Code
		{
			get
			{
				return this._Object_Code;
			}
			set
			{
				if ((this._Object_Code != value))
				{
					this.OnObject_CodeChanging(value);
					this.SendPropertyChanging();
					this._Object_Code = value;
					this.SendPropertyChanged("Object_Code");
					this.OnObject_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object_Version_No", DbType="Char(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Object_Version_No
		{
			get
			{
				return this._Object_Version_No;
			}
			set
			{
				if ((this._Object_Version_No != value))
				{
					this.OnObject_Version_NoChanging(value);
					this.SendPropertyChanging();
					this._Object_Version_No = value;
					this.SendPropertyChanged("Object_Version_No");
					this.OnObject_Version_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Categories")]
	public partial class Report_CategoryDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryId;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<ReportDO> _ReportDOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Report_CategoryDO()
		{
			this._ReportDOs = new EntitySet<ReportDO>(new Action<ReportDO>(this.attach_ReportDOs), new Action<ReportDO>(this.detach_ReportDOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_CategoryDO_ReportDO", Storage="_ReportDOs", ThisKey="CategoryId", OtherKey="CategoryId")]
		public EntitySet<ReportDO> ReportDOs
		{
			get
			{
				return this._ReportDOs;
			}
			set
			{
				this._ReportDOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReportDOs(ReportDO entity)
		{
			this.SendPropertyChanging();
			entity.Report_CategoryDO = this;
		}
		
		private void detach_ReportDOs(ReportDO entity)
		{
			this.SendPropertyChanging();
			entity.Report_CategoryDO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_External_Access")]
	public partial class Report_External_AccessDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportId;
		
		private int _External_GroupId;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntityRef<External_GroupDO> _External_Group;
		
		private EntityRef<ReportDO> _ReportDO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIdChanging(int value);
    partial void OnReportIdChanged();
    partial void OnExternal_GroupIdChanging(int value);
    partial void OnExternal_GroupIdChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Report_External_AccessDO()
		{
			this._External_Group = default(EntityRef<External_GroupDO>);
			this._ReportDO = default(EntityRef<ReportDO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					if (this._ReportDO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_External_GroupId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int External_GroupId
		{
			get
			{
				return this._External_GroupId;
			}
			set
			{
				if ((this._External_GroupId != value))
				{
					if (this._External_Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExternal_GroupIdChanging(value);
					this.SendPropertyChanging();
					this._External_GroupId = value;
					this.SendPropertyChanged("External_GroupId");
					this.OnExternal_GroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="External_GroupDO_Report_External_AccessDO", Storage="_External_Group", ThisKey="External_GroupId", OtherKey="External_GroupId", IsForeignKey=true)]
		public External_GroupDO External_GroupDO
		{
			get
			{
				return this._External_Group.Entity;
			}
			set
			{
				External_GroupDO previousValue = this._External_Group.Entity;
				if (((previousValue != value) 
							|| (this._External_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._External_Group.Entity = null;
						previousValue.Report_External_AccessDOs.Remove(this);
					}
					this._External_Group.Entity = value;
					if ((value != null))
					{
						value.Report_External_AccessDOs.Add(this);
						this._External_GroupId = value.External_GroupId;
					}
					else
					{
						this._External_GroupId = default(int);
					}
					this.SendPropertyChanged("External_GroupDO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportDO_Report_External_AccessDO", Storage="_ReportDO", ThisKey="ReportId", OtherKey="ReportId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ReportDO ReportDO
		{
			get
			{
				return this._ReportDO.Entity;
			}
			set
			{
				ReportDO previousValue = this._ReportDO.Entity;
				if (((previousValue != value) 
							|| (this._ReportDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportDO.Entity = null;
						previousValue.Report_External_AccessDOs.Remove(this);
					}
					this._ReportDO.Entity = value;
					if ((value != null))
					{
						value.Report_External_AccessDOs.Add(this);
						this._ReportId = value.ReportId;
					}
					else
					{
						this._ReportId = default(int);
					}
					this.SendPropertyChanged("ReportDO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Favorite")]
	public partial class Report_FavoriteDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ReportId;
		
		private int _UserId;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnReportIdChanging(int value);
    partial void OnReportIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    #endregion
		
		public Report_FavoriteDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="Int NOT NULL")]
		public int ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Organisation_Levels")]
	public partial class Report_Organisation_LevelDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportId;
		
		private int _LevelId;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntityRef<ReportDO> _ReportDO;
		
		private EntityRef<Organisation_LevelDO> _Organisation_LevelDO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIdChanging(int value);
    partial void OnReportIdChanged();
    partial void OnLevelIdChanging(int value);
    partial void OnLevelIdChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Report_Organisation_LevelDO()
		{
			this._ReportDO = default(EntityRef<ReportDO>);
			this._Organisation_LevelDO = default(EntityRef<Organisation_LevelDO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					if (this._ReportDO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelId", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int LevelId
		{
			get
			{
				return this._LevelId;
			}
			set
			{
				if ((this._LevelId != value))
				{
					if (this._Organisation_LevelDO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevelIdChanging(value);
					this.SendPropertyChanging();
					this._LevelId = value;
					this.SendPropertyChanged("LevelId");
					this.OnLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportDO_Report_Organisation_LevelDO", Storage="_ReportDO", ThisKey="ReportId", OtherKey="ReportId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ReportDO ReportDO
		{
			get
			{
				return this._ReportDO.Entity;
			}
			set
			{
				ReportDO previousValue = this._ReportDO.Entity;
				if (((previousValue != value) 
							|| (this._ReportDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportDO.Entity = null;
						previousValue.Report_Organisation_LevelDOs.Remove(this);
					}
					this._ReportDO.Entity = value;
					if ((value != null))
					{
						value.Report_Organisation_LevelDOs.Add(this);
						this._ReportId = value.ReportId;
					}
					else
					{
						this._ReportId = default(int);
					}
					this.SendPropertyChanged("ReportDO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_LevelDO_Report_Organisation_LevelDO", Storage="_Organisation_LevelDO", ThisKey="LevelId", OtherKey="LevelId", IsForeignKey=true)]
		public Organisation_LevelDO Organisation_LevelDO
		{
			get
			{
				return this._Organisation_LevelDO.Entity;
			}
			set
			{
				Organisation_LevelDO previousValue = this._Organisation_LevelDO.Entity;
				if (((previousValue != value) 
							|| (this._Organisation_LevelDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation_LevelDO.Entity = null;
						previousValue.Report_Organisation_LevelDOs.Remove(this);
					}
					this._Organisation_LevelDO.Entity = value;
					if ((value != null))
					{
						value.Report_Organisation_LevelDOs.Add(this);
						this._LevelId = value.LevelId;
					}
					else
					{
						this._LevelId = default(int);
					}
					this.SendPropertyChanged("Organisation_LevelDO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Recently")]
	public partial class Report_RecentlyDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ReportId;
		
		private int _UserId;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnReportIdChanging(int value);
    partial void OnReportIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    #endregion
		
		public Report_RecentlyDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="Int NOT NULL")]
		public int ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status")]
	public partial class StatusDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _StatusId;
		
		private string _Name;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIdChanging(short value);
    partial void OnStatusIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public StatusDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subscriptions")]
	public partial class SubscriptionDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _ReportId;
		
		private string _SubscriptionID;
		
		private System.Nullable<int> _Owner;
		
		private string _Description;
		
		private System.Nullable<short> _Status;
		
		private string _ScheduleID;
		
		private System.Nullable<short> _ScheduleType;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntityRef<ReportDO> _ReportDO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIdChanging(System.Nullable<int> value);
    partial void OnReportIdChanged();
    partial void OnSubscriptionIDChanging(string value);
    partial void OnSubscriptionIDChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnScheduleIDChanging(string value);
    partial void OnScheduleIDChanged();
    partial void OnScheduleTypeChanging(System.Nullable<short> value);
    partial void OnScheduleTypeChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public SubscriptionDO()
		{
			this._ReportDO = default(EntityRef<ReportDO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="Int")]
		public System.Nullable<int> ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					if (this._ReportDO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SubscriptionID
		{
			get
			{
				return this._SubscriptionID;
			}
			set
			{
				if ((this._SubscriptionID != value))
				{
					this.OnSubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionID = value;
					this.SendPropertyChanged("SubscriptionID");
					this.OnSubscriptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", DbType="VarChar(50)")]
		public string ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleType", DbType="SmallInt")]
		public System.Nullable<short> ScheduleType
		{
			get
			{
				return this._ScheduleType;
			}
			set
			{
				if ((this._ScheduleType != value))
				{
					this.OnScheduleTypeChanging(value);
					this.SendPropertyChanging();
					this._ScheduleType = value;
					this.SendPropertyChanged("ScheduleType");
					this.OnScheduleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportDO_SubscriptionDO", Storage="_ReportDO", ThisKey="ReportId", OtherKey="ReportId", IsForeignKey=true, DeleteRule="CASCADE")]
		public ReportDO ReportDO
		{
			get
			{
				return this._ReportDO.Entity;
			}
			set
			{
				ReportDO previousValue = this._ReportDO.Entity;
				if (((previousValue != value) 
							|| (this._ReportDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportDO.Entity = null;
						previousValue.SubscriptionDOs.Remove(this);
					}
					this._ReportDO.Entity = value;
					if ((value != null))
					{
						value.SubscriptionDOs.Add(this);
						this._ReportId = value.ReportId;
					}
					else
					{
						this._ReportId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ReportDO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.System_Permissions")]
	public partial class System_PermissionDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _System_PermissionId;
		
		private string _Name;
		
		private System.Nullable<short> _Status;
		
		private EntitySet<System_Role_PermissionDO> _System_Role_Permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystem_PermissionIdChanging(int value);
    partial void OnSystem_PermissionIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    #endregion
		
		public System_PermissionDO()
		{
			this._System_Role_Permissions = new EntitySet<System_Role_PermissionDO>(new Action<System_Role_PermissionDO>(this.attach_System_Role_Permissions), new Action<System_Role_PermissionDO>(this.detach_System_Role_Permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_PermissionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int System_PermissionId
		{
			get
			{
				return this._System_PermissionId;
			}
			set
			{
				if ((this._System_PermissionId != value))
				{
					this.OnSystem_PermissionIdChanging(value);
					this.SendPropertyChanging();
					this._System_PermissionId = value;
					this.SendPropertyChanged("System_PermissionId");
					this.OnSystem_PermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="System_PermissionDO_System_Role_PermissionDO", Storage="_System_Role_Permissions", ThisKey="System_PermissionId", OtherKey="System_PermissionId")]
		public EntitySet<System_Role_PermissionDO> System_Role_PermissionDOs
		{
			get
			{
				return this._System_Role_Permissions;
			}
			set
			{
				this._System_Role_Permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_System_Role_Permissions(System_Role_PermissionDO entity)
		{
			this.SendPropertyChanging();
			entity.System_PermissionDO = this;
		}
		
		private void detach_System_Role_Permissions(System_Role_PermissionDO entity)
		{
			this.SendPropertyChanging();
			entity.System_PermissionDO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.System_Role_Permissions")]
	public partial class System_Role_PermissionDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _System_RoleId;
		
		private int _PermissionId;
		
		private int _System_PermissionId;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntityRef<PermissionDO> _Permission;
		
		private EntityRef<System_PermissionDO> _System_Permission;
		
		private EntityRef<System_RoleDO> _System_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystem_RoleIdChanging(int value);
    partial void OnSystem_RoleIdChanged();
    partial void OnPermissionIdChanging(int value);
    partial void OnPermissionIdChanged();
    partial void OnSystem_PermissionIdChanging(int value);
    partial void OnSystem_PermissionIdChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public System_Role_PermissionDO()
		{
			this._Permission = default(EntityRef<PermissionDO>);
			this._System_Permission = default(EntityRef<System_PermissionDO>);
			this._System_Role = default(EntityRef<System_RoleDO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int System_RoleId
		{
			get
			{
				return this._System_RoleId;
			}
			set
			{
				if ((this._System_RoleId != value))
				{
					if (this._System_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSystem_RoleIdChanging(value);
					this.SendPropertyChanging();
					this._System_RoleId = value;
					this.SendPropertyChanged("System_RoleId");
					this.OnSystem_RoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_PermissionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int System_PermissionId
		{
			get
			{
				return this._System_PermissionId;
			}
			set
			{
				if ((this._System_PermissionId != value))
				{
					if (this._System_Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSystem_PermissionIdChanging(value);
					this.SendPropertyChanging();
					this._System_PermissionId = value;
					this.SendPropertyChanged("System_PermissionId");
					this.OnSystem_PermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PermissionDO_System_Role_PermissionDO", Storage="_Permission", ThisKey="PermissionId", OtherKey="PermissionId", IsForeignKey=true)]
		public PermissionDO PermissionDO
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				PermissionDO previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.System_Role_PermissionDOs.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.System_Role_PermissionDOs.Add(this);
						this._PermissionId = value.PermissionId;
					}
					else
					{
						this._PermissionId = default(int);
					}
					this.SendPropertyChanged("PermissionDO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="System_PermissionDO_System_Role_PermissionDO", Storage="_System_Permission", ThisKey="System_PermissionId", OtherKey="System_PermissionId", IsForeignKey=true)]
		public System_PermissionDO System_PermissionDO
		{
			get
			{
				return this._System_Permission.Entity;
			}
			set
			{
				System_PermissionDO previousValue = this._System_Permission.Entity;
				if (((previousValue != value) 
							|| (this._System_Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._System_Permission.Entity = null;
						previousValue.System_Role_PermissionDOs.Remove(this);
					}
					this._System_Permission.Entity = value;
					if ((value != null))
					{
						value.System_Role_PermissionDOs.Add(this);
						this._System_PermissionId = value.System_PermissionId;
					}
					else
					{
						this._System_PermissionId = default(int);
					}
					this.SendPropertyChanged("System_PermissionDO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="System_RoleDO_System_Role_PermissionDO", Storage="_System_Role", ThisKey="System_RoleId", OtherKey="System_RoleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public System_RoleDO System_RoleDO
		{
			get
			{
				return this._System_Role.Entity;
			}
			set
			{
				System_RoleDO previousValue = this._System_Role.Entity;
				if (((previousValue != value) 
							|| (this._System_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._System_Role.Entity = null;
						previousValue.System_Role_PermissionDOs.Remove(this);
					}
					this._System_Role.Entity = value;
					if ((value != null))
					{
						value.System_Role_PermissionDOs.Add(this);
						this._System_RoleId = value.System_RoleId;
					}
					else
					{
						this._System_RoleId = default(int);
					}
					this.SendPropertyChanged("System_RoleDO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.System_Roles")]
	public partial class System_RoleDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _System_RoleId;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<System_Role_PermissionDO> _System_Role_Permissions;
		
		private EntitySet<SystemUserDO> _SystemUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystem_RoleIdChanging(int value);
    partial void OnSystem_RoleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public System_RoleDO()
		{
			this._System_Role_Permissions = new EntitySet<System_Role_PermissionDO>(new Action<System_Role_PermissionDO>(this.attach_System_Role_Permissions), new Action<System_Role_PermissionDO>(this.detach_System_Role_Permissions));
			this._SystemUsers = new EntitySet<SystemUserDO>(new Action<SystemUserDO>(this.attach_SystemUsers), new Action<SystemUserDO>(this.detach_SystemUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int System_RoleId
		{
			get
			{
				return this._System_RoleId;
			}
			set
			{
				if ((this._System_RoleId != value))
				{
					this.OnSystem_RoleIdChanging(value);
					this.SendPropertyChanging();
					this._System_RoleId = value;
					this.SendPropertyChanged("System_RoleId");
					this.OnSystem_RoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="System_RoleDO_System_Role_PermissionDO", Storage="_System_Role_Permissions", ThisKey="System_RoleId", OtherKey="System_RoleId")]
		public EntitySet<System_Role_PermissionDO> System_Role_PermissionDOs
		{
			get
			{
				return this._System_Role_Permissions;
			}
			set
			{
				this._System_Role_Permissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="System_RoleDO_SystemUserDO", Storage="_SystemUsers", ThisKey="System_RoleId", OtherKey="System_RoleId")]
		public EntitySet<SystemUserDO> SystemUserDOs
		{
			get
			{
				return this._SystemUsers;
			}
			set
			{
				this._SystemUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_System_Role_Permissions(System_Role_PermissionDO entity)
		{
			this.SendPropertyChanging();
			entity.System_RoleDO = this;
		}
		
		private void detach_System_Role_Permissions(System_Role_PermissionDO entity)
		{
			this.SendPropertyChanging();
			entity.System_RoleDO = null;
		}
		
		private void attach_SystemUsers(SystemUserDO entity)
		{
			this.SendPropertyChanging();
			entity.System_RoleDO = this;
		}
		
		private void detach_SystemUsers(SystemUserDO entity)
		{
			this.SendPropertyChanging();
			entity.System_RoleDO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemUsers")]
	public partial class SystemUserDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _System_RoleId;
		
		private EntityRef<System_RoleDO> _System_Role;
		
		private EntityRef<UserDO> _UserDO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnSystem_RoleIdChanging(int value);
    partial void OnSystem_RoleIdChanged();
    #endregion
		
		public SystemUserDO()
		{
			this._System_Role = default(EntityRef<System_RoleDO>);
			this._UserDO = default(EntityRef<UserDO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserDO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_RoleId", DbType="Int NOT NULL")]
		public int System_RoleId
		{
			get
			{
				return this._System_RoleId;
			}
			set
			{
				if ((this._System_RoleId != value))
				{
					if (this._System_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSystem_RoleIdChanging(value);
					this.SendPropertyChanging();
					this._System_RoleId = value;
					this.SendPropertyChanged("System_RoleId");
					this.OnSystem_RoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="System_RoleDO_SystemUserDO", Storage="_System_Role", ThisKey="System_RoleId", OtherKey="System_RoleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public System_RoleDO System_RoleDO
		{
			get
			{
				return this._System_Role.Entity;
			}
			set
			{
				System_RoleDO previousValue = this._System_Role.Entity;
				if (((previousValue != value) 
							|| (this._System_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._System_Role.Entity = null;
						previousValue.SystemUserDOs.Remove(this);
					}
					this._System_Role.Entity = value;
					if ((value != null))
					{
						value.SystemUserDOs.Add(this);
						this._System_RoleId = value.System_RoleId;
					}
					else
					{
						this._System_RoleId = default(int);
					}
					this.SendPropertyChanged("System_RoleDO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDO_SystemUserDO", Storage="_UserDO", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserDO UserDO
		{
			get
			{
				return this._UserDO.Entity;
			}
			set
			{
				UserDO previousValue = this._UserDO.Entity;
				if (((previousValue != value) 
							|| (this._UserDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserDO.Entity = null;
						previousValue.SystemUserDO = null;
					}
					this._UserDO.Entity = value;
					if ((value != null))
					{
						value.SystemUserDO = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserDO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reports")]
	public partial class ReportDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportId;
		
		private int _CategoryId;
		
		private string _Name;
		
		private string _ShortName;
		
		private string _Url;
		
		private string _Description;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<bool> _ForSubscription;
		
		private EntitySet<Report_External_AccessDO> _Report_External_AccessDOs;
		
		private EntitySet<Report_Organisation_LevelDO> _Report_Organisation_LevelDOs;
		
		private EntitySet<SubscriptionDO> _SubscriptionDOs;
		
		private EntityRef<Report_CategoryDO> _Report_CategoryDO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIdChanging(int value);
    partial void OnReportIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnForSubscriptionChanging(System.Nullable<bool> value);
    partial void OnForSubscriptionChanged();
    #endregion
		
		public ReportDO()
		{
			this._Report_External_AccessDOs = new EntitySet<Report_External_AccessDO>(new Action<Report_External_AccessDO>(this.attach_Report_External_AccessDOs), new Action<Report_External_AccessDO>(this.detach_Report_External_AccessDOs));
			this._Report_Organisation_LevelDOs = new EntitySet<Report_Organisation_LevelDO>(new Action<Report_Organisation_LevelDO>(this.attach_Report_Organisation_LevelDOs), new Action<Report_Organisation_LevelDO>(this.detach_Report_Organisation_LevelDOs));
			this._SubscriptionDOs = new EntitySet<SubscriptionDO>(new Action<SubscriptionDO>(this.attach_SubscriptionDOs), new Action<SubscriptionDO>(this.detach_SubscriptionDOs));
			this._Report_CategoryDO = default(EntityRef<Report_CategoryDO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Report_CategoryDO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(300)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForSubscription", DbType="Bit")]
		public System.Nullable<bool> ForSubscription
		{
			get
			{
				return this._ForSubscription;
			}
			set
			{
				if ((this._ForSubscription != value))
				{
					this.OnForSubscriptionChanging(value);
					this.SendPropertyChanging();
					this._ForSubscription = value;
					this.SendPropertyChanged("ForSubscription");
					this.OnForSubscriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportDO_Report_External_AccessDO", Storage="_Report_External_AccessDOs", ThisKey="ReportId", OtherKey="ReportId")]
		public EntitySet<Report_External_AccessDO> Report_External_AccessDOs
		{
			get
			{
				return this._Report_External_AccessDOs;
			}
			set
			{
				this._Report_External_AccessDOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportDO_Report_Organisation_LevelDO", Storage="_Report_Organisation_LevelDOs", ThisKey="ReportId", OtherKey="ReportId")]
		public EntitySet<Report_Organisation_LevelDO> Report_Organisation_LevelDOs
		{
			get
			{
				return this._Report_Organisation_LevelDOs;
			}
			set
			{
				this._Report_Organisation_LevelDOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportDO_SubscriptionDO", Storage="_SubscriptionDOs", ThisKey="ReportId", OtherKey="ReportId")]
		public EntitySet<SubscriptionDO> SubscriptionDOs
		{
			get
			{
				return this._SubscriptionDOs;
			}
			set
			{
				this._SubscriptionDOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_CategoryDO_ReportDO", Storage="_Report_CategoryDO", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public Report_CategoryDO Report_CategoryDO
		{
			get
			{
				return this._Report_CategoryDO.Entity;
			}
			set
			{
				Report_CategoryDO previousValue = this._Report_CategoryDO.Entity;
				if (((previousValue != value) 
							|| (this._Report_CategoryDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_CategoryDO.Entity = null;
						previousValue.ReportDOs.Remove(this);
					}
					this._Report_CategoryDO.Entity = value;
					if ((value != null))
					{
						value.ReportDOs.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("Report_CategoryDO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Report_External_AccessDOs(Report_External_AccessDO entity)
		{
			this.SendPropertyChanging();
			entity.ReportDO = this;
		}
		
		private void detach_Report_External_AccessDOs(Report_External_AccessDO entity)
		{
			this.SendPropertyChanging();
			entity.ReportDO = null;
		}
		
		private void attach_Report_Organisation_LevelDOs(Report_Organisation_LevelDO entity)
		{
			this.SendPropertyChanging();
			entity.ReportDO = this;
		}
		
		private void detach_Report_Organisation_LevelDOs(Report_Organisation_LevelDO entity)
		{
			this.SendPropertyChanging();
			entity.ReportDO = null;
		}
		
		private void attach_SubscriptionDOs(SubscriptionDO entity)
		{
			this.SendPropertyChanging();
			entity.ReportDO = this;
		}
		
		private void detach_SubscriptionDOs(SubscriptionDO entity)
		{
			this.SendPropertyChanging();
			entity.ReportDO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organisation_Levels")]
	public partial class Organisation_LevelDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LevelId;
		
		private int _SystemId;
		
		private string _Name;
		
		private System.Nullable<int> _Sort;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<short> _Status;
		
		private EntitySet<Organisation_RoleDO> _Organisation_RoleDOs;
		
		private EntitySet<Report_Organisation_LevelDO> _Report_Organisation_LevelDOs;
		
		private EntitySet<Dashboard_OrganisationRole_LevelDO> _Dashboard_OrganisationRole_LevelDOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLevelIdChanging(int value);
    partial void OnLevelIdChanged();
    partial void OnSystemIdChanging(int value);
    partial void OnSystemIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    #endregion
		
		public Organisation_LevelDO()
		{
			this._Organisation_RoleDOs = new EntitySet<Organisation_RoleDO>(new Action<Organisation_RoleDO>(this.attach_Organisation_RoleDOs), new Action<Organisation_RoleDO>(this.detach_Organisation_RoleDOs));
			this._Report_Organisation_LevelDOs = new EntitySet<Report_Organisation_LevelDO>(new Action<Report_Organisation_LevelDO>(this.attach_Report_Organisation_LevelDOs), new Action<Report_Organisation_LevelDO>(this.detach_Report_Organisation_LevelDOs));
			this._Dashboard_OrganisationRole_LevelDOs = new EntitySet<Dashboard_OrganisationRole_LevelDO>(new Action<Dashboard_OrganisationRole_LevelDO>(this.attach_Dashboard_OrganisationRole_LevelDOs), new Action<Dashboard_OrganisationRole_LevelDO>(this.detach_Dashboard_OrganisationRole_LevelDOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LevelId
		{
			get
			{
				return this._LevelId;
			}
			set
			{
				if ((this._LevelId != value))
				{
					this.OnLevelIdChanging(value);
					this.SendPropertyChanging();
					this._LevelId = value;
					this.SendPropertyChanged("LevelId");
					this.OnLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemId", DbType="Int NOT NULL")]
		public int SystemId
		{
			get
			{
				return this._SystemId;
			}
			set
			{
				if ((this._SystemId != value))
				{
					this.OnSystemIdChanging(value);
					this.SendPropertyChanging();
					this._SystemId = value;
					this.SendPropertyChanged("SystemId");
					this.OnSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_LevelDO_Organisation_RoleDO", Storage="_Organisation_RoleDOs", ThisKey="LevelId", OtherKey="LevelId")]
		public EntitySet<Organisation_RoleDO> Organisation_RoleDOs
		{
			get
			{
				return this._Organisation_RoleDOs;
			}
			set
			{
				this._Organisation_RoleDOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_LevelDO_Report_Organisation_LevelDO", Storage="_Report_Organisation_LevelDOs", ThisKey="LevelId", OtherKey="LevelId")]
		public EntitySet<Report_Organisation_LevelDO> Report_Organisation_LevelDOs
		{
			get
			{
				return this._Report_Organisation_LevelDOs;
			}
			set
			{
				this._Report_Organisation_LevelDOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_LevelDO_Dashboard_OrganisationRole_LevelDO", Storage="_Dashboard_OrganisationRole_LevelDOs", ThisKey="LevelId", OtherKey="LevelId")]
		public EntitySet<Dashboard_OrganisationRole_LevelDO> Dashboard_OrganisationRole_LevelDOs
		{
			get
			{
				return this._Dashboard_OrganisationRole_LevelDOs;
			}
			set
			{
				this._Dashboard_OrganisationRole_LevelDOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organisation_RoleDOs(Organisation_RoleDO entity)
		{
			this.SendPropertyChanging();
			entity.Organisation_LevelDO = this;
		}
		
		private void detach_Organisation_RoleDOs(Organisation_RoleDO entity)
		{
			this.SendPropertyChanging();
			entity.Organisation_LevelDO = null;
		}
		
		private void attach_Report_Organisation_LevelDOs(Report_Organisation_LevelDO entity)
		{
			this.SendPropertyChanging();
			entity.Organisation_LevelDO = this;
		}
		
		private void detach_Report_Organisation_LevelDOs(Report_Organisation_LevelDO entity)
		{
			this.SendPropertyChanging();
			entity.Organisation_LevelDO = null;
		}
		
		private void attach_Dashboard_OrganisationRole_LevelDOs(Dashboard_OrganisationRole_LevelDO entity)
		{
			this.SendPropertyChanging();
			entity.Organisation_LevelDO = this;
		}
		
		private void detach_Dashboard_OrganisationRole_LevelDOs(Dashboard_OrganisationRole_LevelDO entity)
		{
			this.SendPropertyChanging();
			entity.Organisation_LevelDO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Systems")]
	public partial class SystemDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SystemId;
		
		private string _Name;
		
		private string _Description;
		
		private int _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<short> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystemIdChanging(int value);
    partial void OnSystemIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOwnerChanging(int value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    #endregion
		
		public SystemDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SystemId
		{
			get
			{
				return this._SystemId;
			}
			set
			{
				if ((this._SystemId != value))
				{
					this.OnSystemIdChanging(value);
					this.SendPropertyChanging();
					this._SystemId = value;
					this.SendPropertyChanged("SystemId");
					this.OnSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int NOT NULL")]
		public int Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teams")]
	public partial class TeamDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeamId;
		
		private int _SystemId;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<ReportUserDO> _ReportUserDOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeamIdChanging(int value);
    partial void OnTeamIdChanged();
    partial void OnSystemIdChanging(int value);
    partial void OnSystemIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public TeamDO()
		{
			this._ReportUserDOs = new EntitySet<ReportUserDO>(new Action<ReportUserDO>(this.attach_ReportUserDOs), new Action<ReportUserDO>(this.detach_ReportUserDOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemId", DbType="Int NOT NULL")]
		public int SystemId
		{
			get
			{
				return this._SystemId;
			}
			set
			{
				if ((this._SystemId != value))
				{
					this.OnSystemIdChanging(value);
					this.SendPropertyChanging();
					this._SystemId = value;
					this.SendPropertyChanged("SystemId");
					this.OnSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeamDO_ReportUserDO", Storage="_ReportUserDOs", ThisKey="TeamId", OtherKey="TeamId")]
		public EntitySet<ReportUserDO> ReportUserDOs
		{
			get
			{
				return this._ReportUserDOs;
			}
			set
			{
				this._ReportUserDOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReportUserDOs(ReportUserDO entity)
		{
			this.SendPropertyChanging();
			entity.TeamDO = this;
		}
		
		private void detach_ReportUserDOs(ReportUserDO entity)
		{
			this.SendPropertyChanging();
			entity.TeamDO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dashboards")]
	public partial class DashboardDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DashboardId;
		
		private int _SystemId;
		
		private string _Name;
		
		private string _Url;
		
		private string _Description;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<short> _Status;
		
		private EntitySet<Dashboard_OrganisationRole_LevelDO> _Dashboard_OrganisationRole_LevelDOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDashboardIdChanging(int value);
    partial void OnDashboardIdChanged();
    partial void OnSystemIdChanging(int value);
    partial void OnSystemIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    #endregion
		
		public DashboardDO()
		{
			this._Dashboard_OrganisationRole_LevelDOs = new EntitySet<Dashboard_OrganisationRole_LevelDO>(new Action<Dashboard_OrganisationRole_LevelDO>(this.attach_Dashboard_OrganisationRole_LevelDOs), new Action<Dashboard_OrganisationRole_LevelDO>(this.detach_Dashboard_OrganisationRole_LevelDOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DashboardId
		{
			get
			{
				return this._DashboardId;
			}
			set
			{
				if ((this._DashboardId != value))
				{
					this.OnDashboardIdChanging(value);
					this.SendPropertyChanging();
					this._DashboardId = value;
					this.SendPropertyChanged("DashboardId");
					this.OnDashboardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemId", DbType="Int NOT NULL")]
		public int SystemId
		{
			get
			{
				return this._SystemId;
			}
			set
			{
				if ((this._SystemId != value))
				{
					this.OnSystemIdChanging(value);
					this.SendPropertyChanging();
					this._SystemId = value;
					this.SendPropertyChanged("SystemId");
					this.OnSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(300)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DashboardDO_Dashboard_OrganisationRole_LevelDO", Storage="_Dashboard_OrganisationRole_LevelDOs", ThisKey="DashboardId", OtherKey="DashboardId")]
		public EntitySet<Dashboard_OrganisationRole_LevelDO> Dashboard_OrganisationRole_LevelDOs
		{
			get
			{
				return this._Dashboard_OrganisationRole_LevelDOs;
			}
			set
			{
				this._Dashboard_OrganisationRole_LevelDOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dashboard_OrganisationRole_LevelDOs(Dashboard_OrganisationRole_LevelDO entity)
		{
			this.SendPropertyChanging();
			entity.DashboardDO = this;
		}
		
		private void detach_Dashboard_OrganisationRole_LevelDOs(Dashboard_OrganisationRole_LevelDO entity)
		{
			this.SendPropertyChanging();
			entity.DashboardDO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dashboard_OrganisationRole_Levels")]
	public partial class Dashboard_OrganisationRole_LevelDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DashboardOrganisationlevelId;
		
		private int _DashboardId;
		
		private int _DashboardLevelId;
		
		private int _LevelId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntityRef<DashboardDO> _DashboardDO;
		
		private EntityRef<Organisation_LevelDO> _Organisation_LevelDO;
		
		private EntityRef<Dashboard_LevelDO> _Dashboard_LevelDO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDashboardOrganisationlevelIdChanging(int value);
    partial void OnDashboardOrganisationlevelIdChanged();
    partial void OnDashboardIdChanging(int value);
    partial void OnDashboardIdChanged();
    partial void OnDashboardLevelIdChanging(int value);
    partial void OnDashboardLevelIdChanged();
    partial void OnLevelIdChanging(int value);
    partial void OnLevelIdChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Dashboard_OrganisationRole_LevelDO()
		{
			this._DashboardDO = default(EntityRef<DashboardDO>);
			this._Organisation_LevelDO = default(EntityRef<Organisation_LevelDO>);
			this._Dashboard_LevelDO = default(EntityRef<Dashboard_LevelDO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardOrganisationlevelId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DashboardOrganisationlevelId
		{
			get
			{
				return this._DashboardOrganisationlevelId;
			}
			set
			{
				if ((this._DashboardOrganisationlevelId != value))
				{
					this.OnDashboardOrganisationlevelIdChanging(value);
					this.SendPropertyChanging();
					this._DashboardOrganisationlevelId = value;
					this.SendPropertyChanged("DashboardOrganisationlevelId");
					this.OnDashboardOrganisationlevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardId", DbType="Int NOT NULL")]
		public int DashboardId
		{
			get
			{
				return this._DashboardId;
			}
			set
			{
				if ((this._DashboardId != value))
				{
					if (this._DashboardDO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDashboardIdChanging(value);
					this.SendPropertyChanging();
					this._DashboardId = value;
					this.SendPropertyChanged("DashboardId");
					this.OnDashboardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardLevelId", DbType="Int NOT NULL")]
		public int DashboardLevelId
		{
			get
			{
				return this._DashboardLevelId;
			}
			set
			{
				if ((this._DashboardLevelId != value))
				{
					if (this._Dashboard_LevelDO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDashboardLevelIdChanging(value);
					this.SendPropertyChanging();
					this._DashboardLevelId = value;
					this.SendPropertyChanged("DashboardLevelId");
					this.OnDashboardLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelId", DbType="Int NOT NULL")]
		public int LevelId
		{
			get
			{
				return this._LevelId;
			}
			set
			{
				if ((this._LevelId != value))
				{
					if (this._Organisation_LevelDO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevelIdChanging(value);
					this.SendPropertyChanging();
					this._LevelId = value;
					this.SendPropertyChanged("LevelId");
					this.OnLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DashboardDO_Dashboard_OrganisationRole_LevelDO", Storage="_DashboardDO", ThisKey="DashboardId", OtherKey="DashboardId", IsForeignKey=true)]
		public DashboardDO DashboardDO
		{
			get
			{
				return this._DashboardDO.Entity;
			}
			set
			{
				DashboardDO previousValue = this._DashboardDO.Entity;
				if (((previousValue != value) 
							|| (this._DashboardDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DashboardDO.Entity = null;
						previousValue.Dashboard_OrganisationRole_LevelDOs.Remove(this);
					}
					this._DashboardDO.Entity = value;
					if ((value != null))
					{
						value.Dashboard_OrganisationRole_LevelDOs.Add(this);
						this._DashboardId = value.DashboardId;
					}
					else
					{
						this._DashboardId = default(int);
					}
					this.SendPropertyChanged("DashboardDO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_LevelDO_Dashboard_OrganisationRole_LevelDO", Storage="_Organisation_LevelDO", ThisKey="LevelId", OtherKey="LevelId", IsForeignKey=true)]
		public Organisation_LevelDO Organisation_LevelDO
		{
			get
			{
				return this._Organisation_LevelDO.Entity;
			}
			set
			{
				Organisation_LevelDO previousValue = this._Organisation_LevelDO.Entity;
				if (((previousValue != value) 
							|| (this._Organisation_LevelDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation_LevelDO.Entity = null;
						previousValue.Dashboard_OrganisationRole_LevelDOs.Remove(this);
					}
					this._Organisation_LevelDO.Entity = value;
					if ((value != null))
					{
						value.Dashboard_OrganisationRole_LevelDOs.Add(this);
						this._LevelId = value.LevelId;
					}
					else
					{
						this._LevelId = default(int);
					}
					this.SendPropertyChanged("Organisation_LevelDO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dashboard_LevelDO_Dashboard_OrganisationRole_LevelDO", Storage="_Dashboard_LevelDO", ThisKey="DashboardLevelId", OtherKey="DashboardLevelId", IsForeignKey=true)]
		public Dashboard_LevelDO Dashboard_LevelDO
		{
			get
			{
				return this._Dashboard_LevelDO.Entity;
			}
			set
			{
				Dashboard_LevelDO previousValue = this._Dashboard_LevelDO.Entity;
				if (((previousValue != value) 
							|| (this._Dashboard_LevelDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dashboard_LevelDO.Entity = null;
						previousValue.Dashboard_OrganisationRole_LevelDOs.Remove(this);
					}
					this._Dashboard_LevelDO.Entity = value;
					if ((value != null))
					{
						value.Dashboard_OrganisationRole_LevelDOs.Add(this);
						this._DashboardLevelId = value.DashboardLevelId;
					}
					else
					{
						this._DashboardLevelId = default(int);
					}
					this.SendPropertyChanged("Dashboard_LevelDO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dashboard_Levels")]
	public partial class Dashboard_LevelDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DashboardLevelId;
		
		private string _Name;
		
		private short _Sort;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<short> _Status;
		
		private EntitySet<Dashboard_OrganisationRole_LevelDO> _Dashboard_OrganisationRole_LevelDOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDashboardLevelIdChanging(int value);
    partial void OnDashboardLevelIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortChanging(short value);
    partial void OnSortChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    #endregion
		
		public Dashboard_LevelDO()
		{
			this._Dashboard_OrganisationRole_LevelDOs = new EntitySet<Dashboard_OrganisationRole_LevelDO>(new Action<Dashboard_OrganisationRole_LevelDO>(this.attach_Dashboard_OrganisationRole_LevelDOs), new Action<Dashboard_OrganisationRole_LevelDO>(this.detach_Dashboard_OrganisationRole_LevelDOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardLevelId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DashboardLevelId
		{
			get
			{
				return this._DashboardLevelId;
			}
			set
			{
				if ((this._DashboardLevelId != value))
				{
					this.OnDashboardLevelIdChanging(value);
					this.SendPropertyChanging();
					this._DashboardLevelId = value;
					this.SendPropertyChanged("DashboardLevelId");
					this.OnDashboardLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="SmallInt NOT NULL")]
		public short Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dashboard_LevelDO_Dashboard_OrganisationRole_LevelDO", Storage="_Dashboard_OrganisationRole_LevelDOs", ThisKey="DashboardLevelId", OtherKey="DashboardLevelId")]
		public EntitySet<Dashboard_OrganisationRole_LevelDO> Dashboard_OrganisationRole_LevelDOs
		{
			get
			{
				return this._Dashboard_OrganisationRole_LevelDOs;
			}
			set
			{
				this._Dashboard_OrganisationRole_LevelDOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dashboard_OrganisationRole_LevelDOs(Dashboard_OrganisationRole_LevelDO entity)
		{
			this.SendPropertyChanging();
			entity.Dashboard_LevelDO = this;
		}
		
		private void detach_Dashboard_OrganisationRole_LevelDOs(Dashboard_OrganisationRole_LevelDO entity)
		{
			this.SendPropertyChanging();
			entity.Dashboard_LevelDO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dashboard_Graph_Description")]
	public partial class Dashboard_Graph_DescriptionDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DescriptionId;
		
		private int _SystemId;
		
		private string _Type;
		
		private string _Description;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDescriptionIdChanging(int value);
    partial void OnDescriptionIdChanged();
    partial void OnSystemIdChanging(int value);
    partial void OnSystemIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Dashboard_Graph_DescriptionDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DescriptionId
		{
			get
			{
				return this._DescriptionId;
			}
			set
			{
				if ((this._DescriptionId != value))
				{
					this.OnDescriptionIdChanging(value);
					this.SendPropertyChanging();
					this._DescriptionId = value;
					this.SendPropertyChanged("DescriptionId");
					this.OnDescriptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemId", DbType="Int NOT NULL")]
		public int SystemId
		{
			get
			{
				return this._SystemId;
			}
			set
			{
				if ((this._SystemId != value))
				{
					this.OnSystemIdChanging(value);
					this.SendPropertyChanging();
					this._SystemId = value;
					this.SendPropertyChanged("SystemId");
					this.OnSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportUsers")]
	public partial class ReportUserDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private System.Nullable<bool> _Is_External_User;
		
		private System.Nullable<int> _TeamId;
		
		private System.Nullable<int> _Organisation_RoleId;
		
		private System.Nullable<int> _External_GroupId;
		
		private EntityRef<External_GroupDO> _External_GroupDO;
		
		private EntityRef<Organisation_RoleDO> _Organisation_RoleDO;
		
		private EntityRef<TeamDO> _TeamDO;
		
		private EntityRef<UserDO> _UserDO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnIs_External_UserChanging(System.Nullable<bool> value);
    partial void OnIs_External_UserChanged();
    partial void OnTeamIdChanging(System.Nullable<int> value);
    partial void OnTeamIdChanged();
    partial void OnOrganisation_RoleIdChanging(System.Nullable<int> value);
    partial void OnOrganisation_RoleIdChanged();
    partial void OnExternal_GroupIdChanging(System.Nullable<int> value);
    partial void OnExternal_GroupIdChanged();
    #endregion
		
		public ReportUserDO()
		{
			this._External_GroupDO = default(EntityRef<External_GroupDO>);
			this._Organisation_RoleDO = default(EntityRef<Organisation_RoleDO>);
			this._TeamDO = default(EntityRef<TeamDO>);
			this._UserDO = default(EntityRef<UserDO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserDO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_External_User", DbType="Bit")]
		public System.Nullable<bool> Is_External_User
		{
			get
			{
				return this._Is_External_User;
			}
			set
			{
				if ((this._Is_External_User != value))
				{
					this.OnIs_External_UserChanging(value);
					this.SendPropertyChanging();
					this._Is_External_User = value;
					this.SendPropertyChanged("Is_External_User");
					this.OnIs_External_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="Int")]
		public System.Nullable<int> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					if (this._TeamDO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organisation_RoleId", DbType="Int")]
		public System.Nullable<int> Organisation_RoleId
		{
			get
			{
				return this._Organisation_RoleId;
			}
			set
			{
				if ((this._Organisation_RoleId != value))
				{
					if (this._Organisation_RoleDO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganisation_RoleIdChanging(value);
					this.SendPropertyChanging();
					this._Organisation_RoleId = value;
					this.SendPropertyChanged("Organisation_RoleId");
					this.OnOrganisation_RoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_External_GroupId", DbType="Int")]
		public System.Nullable<int> External_GroupId
		{
			get
			{
				return this._External_GroupId;
			}
			set
			{
				if ((this._External_GroupId != value))
				{
					if (this._External_GroupDO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExternal_GroupIdChanging(value);
					this.SendPropertyChanging();
					this._External_GroupId = value;
					this.SendPropertyChanged("External_GroupId");
					this.OnExternal_GroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="External_GroupDO_ReportUserDO", Storage="_External_GroupDO", ThisKey="External_GroupId", OtherKey="External_GroupId", IsForeignKey=true)]
		public External_GroupDO External_GroupDO
		{
			get
			{
				return this._External_GroupDO.Entity;
			}
			set
			{
				External_GroupDO previousValue = this._External_GroupDO.Entity;
				if (((previousValue != value) 
							|| (this._External_GroupDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._External_GroupDO.Entity = null;
						previousValue.ReportUserDOs.Remove(this);
					}
					this._External_GroupDO.Entity = value;
					if ((value != null))
					{
						value.ReportUserDOs.Add(this);
						this._External_GroupId = value.External_GroupId;
					}
					else
					{
						this._External_GroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("External_GroupDO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_RoleDO_ReportUserDO", Storage="_Organisation_RoleDO", ThisKey="Organisation_RoleId", OtherKey="Organisation_RoleId", IsForeignKey=true)]
		public Organisation_RoleDO Organisation_RoleDO
		{
			get
			{
				return this._Organisation_RoleDO.Entity;
			}
			set
			{
				Organisation_RoleDO previousValue = this._Organisation_RoleDO.Entity;
				if (((previousValue != value) 
							|| (this._Organisation_RoleDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation_RoleDO.Entity = null;
						previousValue.ReportUserDOs.Remove(this);
					}
					this._Organisation_RoleDO.Entity = value;
					if ((value != null))
					{
						value.ReportUserDOs.Add(this);
						this._Organisation_RoleId = value.Organisation_RoleId;
					}
					else
					{
						this._Organisation_RoleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organisation_RoleDO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeamDO_ReportUserDO", Storage="_TeamDO", ThisKey="TeamId", OtherKey="TeamId", IsForeignKey=true)]
		public TeamDO TeamDO
		{
			get
			{
				return this._TeamDO.Entity;
			}
			set
			{
				TeamDO previousValue = this._TeamDO.Entity;
				if (((previousValue != value) 
							|| (this._TeamDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeamDO.Entity = null;
						previousValue.ReportUserDOs.Remove(this);
					}
					this._TeamDO.Entity = value;
					if ((value != null))
					{
						value.ReportUserDOs.Add(this);
						this._TeamId = value.TeamId;
					}
					else
					{
						this._TeamId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TeamDO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDO_ReportUserDO", Storage="_UserDO", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserDO UserDO
		{
			get
			{
				return this._UserDO.Entity;
			}
			set
			{
				UserDO previousValue = this._UserDO.Entity;
				if (((previousValue != value) 
							|| (this._UserDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserDO.Entity = null;
						previousValue.ReportUserDOs.Remove(this);
					}
					this._UserDO.Entity = value;
					if ((value != null))
					{
						value.ReportUserDOs.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserDO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dashboard_Traffic_Light_Rules")]
	public partial class Dashboard_Traffic_Light_RuleDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SystemId;
		
		private string _DashboardType;
		
		private string _Type;
		
		private string _Value;
		
		private string _Sub_Value;
		
		private System.Nullable<int> _Measure;
		
		private string _Name;
		
		private string _Color;
		
		private string _Description;
		
		private string _ImageUrl;
		
		private System.Nullable<double> _FromValue;
		
		private System.Nullable<double> _ToValue;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSystemIdChanging(int value);
    partial void OnSystemIdChanged();
    partial void OnDashboardTypeChanging(string value);
    partial void OnDashboardTypeChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnSub_ValueChanging(string value);
    partial void OnSub_ValueChanged();
    partial void OnMeasureChanging(System.Nullable<int> value);
    partial void OnMeasureChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnFromValueChanging(System.Nullable<double> value);
    partial void OnFromValueChanged();
    partial void OnToValueChanging(System.Nullable<double> value);
    partial void OnToValueChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Dashboard_Traffic_Light_RuleDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemId", DbType="Int NOT NULL")]
		public int SystemId
		{
			get
			{
				return this._SystemId;
			}
			set
			{
				if ((this._SystemId != value))
				{
					this.OnSystemIdChanging(value);
					this.SendPropertyChanging();
					this._SystemId = value;
					this.SendPropertyChanged("SystemId");
					this.OnSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardType", DbType="VarChar(50)")]
		public string DashboardType
		{
			get
			{
				return this._DashboardType;
			}
			set
			{
				if ((this._DashboardType != value))
				{
					this.OnDashboardTypeChanging(value);
					this.SendPropertyChanging();
					this._DashboardType = value;
					this.SendPropertyChanged("DashboardType");
					this.OnDashboardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(20)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sub_Value", DbType="VarChar(256)")]
		public string Sub_Value
		{
			get
			{
				return this._Sub_Value;
			}
			set
			{
				if ((this._Sub_Value != value))
				{
					this.OnSub_ValueChanging(value);
					this.SendPropertyChanging();
					this._Sub_Value = value;
					this.SendPropertyChanged("Sub_Value");
					this.OnSub_ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measure", DbType="Int")]
		public System.Nullable<int> Measure
		{
			get
			{
				return this._Measure;
			}
			set
			{
				if ((this._Measure != value))
				{
					this.OnMeasureChanging(value);
					this.SendPropertyChanging();
					this._Measure = value;
					this.SendPropertyChanged("Measure");
					this.OnMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="VarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="VarChar(256)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromValue", DbType="Float")]
		public System.Nullable<double> FromValue
		{
			get
			{
				return this._FromValue;
			}
			set
			{
				if ((this._FromValue != value))
				{
					this.OnFromValueChanging(value);
					this.SendPropertyChanging();
					this._FromValue = value;
					this.SendPropertyChanged("FromValue");
					this.OnFromValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToValue", DbType="Float")]
		public System.Nullable<double> ToValue
		{
			get
			{
				return this._ToValue;
			}
			set
			{
				if ((this._ToValue != value))
				{
					this.OnToValueChanging(value);
					this.SendPropertyChanging();
					this._ToValue = value;
					this.SendPropertyChanged("ToValue");
					this.OnToValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class UserDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _UserName;
		
		private string _Password;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Address;
		
		private string _Email;
		
		private System.Nullable<short> _Status;
		
		private string _Phone;
		
		private System.Nullable<System.DateTime> _Online_Locked_Until_Datetime;
		
		private System.Nullable<short> _Online_No_Of_Login_Attempts;
		
		private System.Nullable<System.DateTime> _Last_Online_Login_Date;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private bool _Is_System_User;
		
		private System.Nullable<int> _Default_System_Id;
		
		private EntityRef<SystemUserDO> _SystemUserDO;
		
		private EntitySet<ReportUserDO> _ReportUserDOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnOnline_Locked_Until_DatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOnline_Locked_Until_DatetimeChanged();
    partial void OnOnline_No_Of_Login_AttemptsChanging(System.Nullable<short> value);
    partial void OnOnline_No_Of_Login_AttemptsChanged();
    partial void OnLast_Online_Login_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnLast_Online_Login_DateChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnIs_System_UserChanging(bool value);
    partial void OnIs_System_UserChanged();
    partial void OnDefault_System_IdChanging(System.Nullable<int> value);
    partial void OnDefault_System_IdChanged();
    #endregion
		
		public UserDO()
		{
			this._SystemUserDO = default(EntityRef<SystemUserDO>);
			this._ReportUserDOs = new EntitySet<ReportUserDO>(new Action<ReportUserDO>(this.attach_ReportUserDOs), new Action<ReportUserDO>(this.detach_ReportUserDOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(256)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(256)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(256)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(30)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Online_Locked_Until_Datetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Online_Locked_Until_Datetime
		{
			get
			{
				return this._Online_Locked_Until_Datetime;
			}
			set
			{
				if ((this._Online_Locked_Until_Datetime != value))
				{
					this.OnOnline_Locked_Until_DatetimeChanging(value);
					this.SendPropertyChanging();
					this._Online_Locked_Until_Datetime = value;
					this.SendPropertyChanged("Online_Locked_Until_Datetime");
					this.OnOnline_Locked_Until_DatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Online_No_Of_Login_Attempts", DbType="SmallInt")]
		public System.Nullable<short> Online_No_Of_Login_Attempts
		{
			get
			{
				return this._Online_No_Of_Login_Attempts;
			}
			set
			{
				if ((this._Online_No_Of_Login_Attempts != value))
				{
					this.OnOnline_No_Of_Login_AttemptsChanging(value);
					this.SendPropertyChanging();
					this._Online_No_Of_Login_Attempts = value;
					this.SendPropertyChanged("Online_No_Of_Login_Attempts");
					this.OnOnline_No_Of_Login_AttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Online_Login_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Last_Online_Login_Date
		{
			get
			{
				return this._Last_Online_Login_Date;
			}
			set
			{
				if ((this._Last_Online_Login_Date != value))
				{
					this.OnLast_Online_Login_DateChanging(value);
					this.SendPropertyChanging();
					this._Last_Online_Login_Date = value;
					this.SendPropertyChanged("Last_Online_Login_Date");
					this.OnLast_Online_Login_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_System_User", DbType="Bit NOT NULL")]
		public bool Is_System_User
		{
			get
			{
				return this._Is_System_User;
			}
			set
			{
				if ((this._Is_System_User != value))
				{
					this.OnIs_System_UserChanging(value);
					this.SendPropertyChanging();
					this._Is_System_User = value;
					this.SendPropertyChanged("Is_System_User");
					this.OnIs_System_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Default_System_Id", DbType="Int")]
		public System.Nullable<int> Default_System_Id
		{
			get
			{
				return this._Default_System_Id;
			}
			set
			{
				if ((this._Default_System_Id != value))
				{
					this.OnDefault_System_IdChanging(value);
					this.SendPropertyChanging();
					this._Default_System_Id = value;
					this.SendPropertyChanged("Default_System_Id");
					this.OnDefault_System_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDO_SystemUserDO", Storage="_SystemUserDO", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public SystemUserDO SystemUserDO
		{
			get
			{
				return this._SystemUserDO.Entity;
			}
			set
			{
				SystemUserDO previousValue = this._SystemUserDO.Entity;
				if (((previousValue != value) 
							|| (this._SystemUserDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUserDO.Entity = null;
						previousValue.UserDO = null;
					}
					this._SystemUserDO.Entity = value;
					if ((value != null))
					{
						value.UserDO = this;
					}
					this.SendPropertyChanged("SystemUserDO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDO_ReportUserDO", Storage="_ReportUserDOs", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<ReportUserDO> ReportUserDOs
		{
			get
			{
				return this._ReportUserDOs;
			}
			set
			{
				this._ReportUserDOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReportUserDOs(ReportUserDO entity)
		{
			this.SendPropertyChanging();
			entity.UserDO = this;
		}
		
		private void detach_ReportUserDOs(ReportUserDO entity)
		{
			this.SendPropertyChanging();
			entity.UserDO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dashboard_Favours")]
	public partial class Dashboard_FavourDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FavourId;
		
		private string _Name;
		
		private string _Url;
		
		private int _UserId;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<bool> _Is_Landing_Page;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFavourIdChanging(int value);
    partial void OnFavourIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnIs_Landing_PageChanging(System.Nullable<bool> value);
    partial void OnIs_Landing_PageChanged();
    #endregion
		
		public Dashboard_FavourDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavourId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FavourId
		{
			get
			{
				return this._FavourId;
			}
			set
			{
				if ((this._FavourId != value))
				{
					this.OnFavourIdChanging(value);
					this.SendPropertyChanging();
					this._FavourId = value;
					this.SendPropertyChanged("FavourId");
					this.OnFavourIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Landing_Page", DbType="Bit")]
		public System.Nullable<bool> Is_Landing_Page
		{
			get
			{
				return this._Is_Landing_Page;
			}
			set
			{
				if ((this._Is_Landing_Page != value))
				{
					this.OnIs_Landing_PageChanging(value);
					this.SendPropertyChanging();
					this._Is_Landing_Page = value;
					this.SendPropertyChanged("Is_Landing_Page");
					this.OnIs_Landing_PageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EML_AWC_Projections")]
	public partial class EML_AWC_ProjectionDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Unit_Type;
		
		private string _Unit_Name;
		
		private string _Type;
		
		private System.DateTime _Time_Id;
		
		private double _Projection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnit_TypeChanging(string value);
    partial void OnUnit_TypeChanged();
    partial void OnUnit_NameChanging(string value);
    partial void OnUnit_NameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnTime_IdChanging(System.DateTime value);
    partial void OnTime_IdChanged();
    partial void OnProjectionChanging(double value);
    partial void OnProjectionChanged();
    #endregion
		
		public EML_AWC_ProjectionDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_Type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Unit_Type
		{
			get
			{
				return this._Unit_Type;
			}
			set
			{
				if ((this._Unit_Type != value))
				{
					this.OnUnit_TypeChanging(value);
					this.SendPropertyChanging();
					this._Unit_Type = value;
					this.SendPropertyChanged("Unit_Type");
					this.OnUnit_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_Name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Unit_Name
		{
			get
			{
				return this._Unit_Name;
			}
			set
			{
				if ((this._Unit_Name != value))
				{
					this.OnUnit_NameChanging(value);
					this.SendPropertyChanging();
					this._Unit_Name = value;
					this.SendPropertyChanged("Unit_Name");
					this.OnUnit_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Id", DbType="DateTime NOT NULL")]
		public System.DateTime Time_Id
		{
			get
			{
				return this._Time_Id;
			}
			set
			{
				if ((this._Time_Id != value))
				{
					this.OnTime_IdChanging(value);
					this.SendPropertyChanging();
					this._Time_Id = value;
					this.SendPropertyChanged("Time_Id");
					this.OnTime_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Projection", DbType="Float NOT NULL")]
		public double Projection
		{
			get
			{
				return this._Projection;
			}
			set
			{
				if ((this._Projection != value))
				{
					this.OnProjectionChanging(value);
					this.SendPropertyChanging();
					this._Projection = value;
					this.SendPropertyChanged("Projection");
					this.OnProjectionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EML_RTW_Target_Base")]
	public partial class EML_RTW_Target_BaseDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Type;
		
		private string _Value;
		
		private string _Sub_Value;
		
		private System.Nullable<int> _Measure;
		
		private System.Nullable<double> _Target;
		
		private System.Nullable<double> _Base;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<short> _Status;
		
		private string _Remuneration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnSub_ValueChanging(string value);
    partial void OnSub_ValueChanged();
    partial void OnMeasureChanging(System.Nullable<int> value);
    partial void OnMeasureChanged();
    partial void OnTargetChanging(System.Nullable<double> value);
    partial void OnTargetChanged();
    partial void OnBaseChanging(System.Nullable<double> value);
    partial void OnBaseChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnRemunerationChanging(string value);
    partial void OnRemunerationChanged();
    #endregion
		
		public EML_RTW_Target_BaseDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(20)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sub_Value", DbType="VarChar(256)")]
		public string Sub_Value
		{
			get
			{
				return this._Sub_Value;
			}
			set
			{
				if ((this._Sub_Value != value))
				{
					this.OnSub_ValueChanging(value);
					this.SendPropertyChanging();
					this._Sub_Value = value;
					this.SendPropertyChanged("Sub_Value");
					this.OnSub_ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measure", DbType="Int")]
		public System.Nullable<int> Measure
		{
			get
			{
				return this._Measure;
			}
			set
			{
				if ((this._Measure != value))
				{
					this.OnMeasureChanging(value);
					this.SendPropertyChanging();
					this._Measure = value;
					this.SendPropertyChanged("Measure");
					this.OnMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="Float")]
		public System.Nullable<double> Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Base", DbType="Float")]
		public System.Nullable<double> Base
		{
			get
			{
				return this._Base;
			}
			set
			{
				if ((this._Base != value))
				{
					this.OnBaseChanging(value);
					this.SendPropertyChanging();
					this._Base = value;
					this.SendPropertyChanged("Base");
					this.OnBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remuneration", DbType="VarChar(20)")]
		public string Remuneration
		{
			get
			{
				return this._Remuneration;
			}
			set
			{
				if ((this._Remuneration != value))
				{
					this.OnRemunerationChanging(value);
					this.SendPropertyChanging();
					this._Remuneration = value;
					this.SendPropertyChanged("Remuneration");
					this.OnRemunerationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HEM_AWC_Projections")]
	public partial class HEM_AWC_ProjectionDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Unit_Type;
		
		private string _Unit_Name;
		
		private string _Type;
		
		private System.DateTime _Time_Id;
		
		private double _Projection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnit_TypeChanging(string value);
    partial void OnUnit_TypeChanged();
    partial void OnUnit_NameChanging(string value);
    partial void OnUnit_NameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnTime_IdChanging(System.DateTime value);
    partial void OnTime_IdChanged();
    partial void OnProjectionChanging(double value);
    partial void OnProjectionChanged();
    #endregion
		
		public HEM_AWC_ProjectionDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_Type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Unit_Type
		{
			get
			{
				return this._Unit_Type;
			}
			set
			{
				if ((this._Unit_Type != value))
				{
					this.OnUnit_TypeChanging(value);
					this.SendPropertyChanging();
					this._Unit_Type = value;
					this.SendPropertyChanged("Unit_Type");
					this.OnUnit_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_Name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Unit_Name
		{
			get
			{
				return this._Unit_Name;
			}
			set
			{
				if ((this._Unit_Name != value))
				{
					this.OnUnit_NameChanging(value);
					this.SendPropertyChanging();
					this._Unit_Name = value;
					this.SendPropertyChanged("Unit_Name");
					this.OnUnit_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Id", DbType="DateTime NOT NULL")]
		public System.DateTime Time_Id
		{
			get
			{
				return this._Time_Id;
			}
			set
			{
				if ((this._Time_Id != value))
				{
					this.OnTime_IdChanging(value);
					this.SendPropertyChanging();
					this._Time_Id = value;
					this.SendPropertyChanged("Time_Id");
					this.OnTime_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Projection", DbType="Float NOT NULL")]
		public double Projection
		{
			get
			{
				return this._Projection;
			}
			set
			{
				if ((this._Projection != value))
				{
					this.OnProjectionChanging(value);
					this.SendPropertyChanging();
					this._Projection = value;
					this.SendPropertyChanged("Projection");
					this.OnProjectionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HEM_RTW_Target_Base")]
	public partial class HEM_RTW_Target_BaseDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Type;
		
		private string _Value;
		
		private string _Sub_Value;
		
		private System.Nullable<int> _Measure;
		
		private System.Nullable<double> _Target;
		
		private System.Nullable<double> _Base;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<short> _Status;
		
		private string _Remuneration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnSub_ValueChanging(string value);
    partial void OnSub_ValueChanged();
    partial void OnMeasureChanging(System.Nullable<int> value);
    partial void OnMeasureChanged();
    partial void OnTargetChanging(System.Nullable<double> value);
    partial void OnTargetChanged();
    partial void OnBaseChanging(System.Nullable<double> value);
    partial void OnBaseChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnRemunerationChanging(string value);
    partial void OnRemunerationChanged();
    #endregion
		
		public HEM_RTW_Target_BaseDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(20)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sub_Value", DbType="VarChar(256)")]
		public string Sub_Value
		{
			get
			{
				return this._Sub_Value;
			}
			set
			{
				if ((this._Sub_Value != value))
				{
					this.OnSub_ValueChanging(value);
					this.SendPropertyChanging();
					this._Sub_Value = value;
					this.SendPropertyChanged("Sub_Value");
					this.OnSub_ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measure", DbType="Int")]
		public System.Nullable<int> Measure
		{
			get
			{
				return this._Measure;
			}
			set
			{
				if ((this._Measure != value))
				{
					this.OnMeasureChanging(value);
					this.SendPropertyChanging();
					this._Measure = value;
					this.SendPropertyChanged("Measure");
					this.OnMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="Float")]
		public System.Nullable<double> Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Base", DbType="Float")]
		public System.Nullable<double> Base
		{
			get
			{
				return this._Base;
			}
			set
			{
				if ((this._Base != value))
				{
					this.OnBaseChanging(value);
					this.SendPropertyChanging();
					this._Base = value;
					this.SendPropertyChanged("Base");
					this.OnBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remuneration", DbType="VarChar(20)")]
		public string Remuneration
		{
			get
			{
				return this._Remuneration;
			}
			set
			{
				if ((this._Remuneration != value))
				{
					this.OnRemunerationChanging(value);
					this.SendPropertyChanging();
					this._Remuneration = value;
					this.SendPropertyChanged("Remuneration");
					this.OnRemunerationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TMF_AWC_Projections")]
	public partial class TMF_AWC_ProjectionDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Unit_Type;
		
		private string _Unit_Name;
		
		private string _Type;
		
		private System.DateTime _Time_Id;
		
		private double _Projection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnit_TypeChanging(string value);
    partial void OnUnit_TypeChanged();
    partial void OnUnit_NameChanging(string value);
    partial void OnUnit_NameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnTime_IdChanging(System.DateTime value);
    partial void OnTime_IdChanged();
    partial void OnProjectionChanging(double value);
    partial void OnProjectionChanged();
    #endregion
		
		public TMF_AWC_ProjectionDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_Type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Unit_Type
		{
			get
			{
				return this._Unit_Type;
			}
			set
			{
				if ((this._Unit_Type != value))
				{
					this.OnUnit_TypeChanging(value);
					this.SendPropertyChanging();
					this._Unit_Type = value;
					this.SendPropertyChanged("Unit_Type");
					this.OnUnit_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_Name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Unit_Name
		{
			get
			{
				return this._Unit_Name;
			}
			set
			{
				if ((this._Unit_Name != value))
				{
					this.OnUnit_NameChanging(value);
					this.SendPropertyChanging();
					this._Unit_Name = value;
					this.SendPropertyChanged("Unit_Name");
					this.OnUnit_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Id", DbType="DateTime NOT NULL")]
		public System.DateTime Time_Id
		{
			get
			{
				return this._Time_Id;
			}
			set
			{
				if ((this._Time_Id != value))
				{
					this.OnTime_IdChanging(value);
					this.SendPropertyChanging();
					this._Time_Id = value;
					this.SendPropertyChanged("Time_Id");
					this.OnTime_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Projection", DbType="Float NOT NULL")]
		public double Projection
		{
			get
			{
				return this._Projection;
			}
			set
			{
				if ((this._Projection != value))
				{
					this.OnProjectionChanging(value);
					this.SendPropertyChanging();
					this._Projection = value;
					this.SendPropertyChanged("Projection");
					this.OnProjectionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TMF_RTW_Target_Base")]
	public partial class TMF_RTW_Target_BaseDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Type;
		
		private string _Value;
		
		private string _Sub_Value;
		
		private System.Nullable<int> _Measure;
		
		private System.Nullable<double> _Target;
		
		private System.Nullable<double> _Base;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<short> _Status;
		
		private string _Remuneration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnSub_ValueChanging(string value);
    partial void OnSub_ValueChanged();
    partial void OnMeasureChanging(System.Nullable<int> value);
    partial void OnMeasureChanged();
    partial void OnTargetChanging(System.Nullable<double> value);
    partial void OnTargetChanged();
    partial void OnBaseChanging(System.Nullable<double> value);
    partial void OnBaseChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnRemunerationChanging(string value);
    partial void OnRemunerationChanged();
    #endregion
		
		public TMF_RTW_Target_BaseDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(20)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sub_Value", DbType="VarChar(256)")]
		public string Sub_Value
		{
			get
			{
				return this._Sub_Value;
			}
			set
			{
				if ((this._Sub_Value != value))
				{
					this.OnSub_ValueChanging(value);
					this.SendPropertyChanging();
					this._Sub_Value = value;
					this.SendPropertyChanged("Sub_Value");
					this.OnSub_ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measure", DbType="Int")]
		public System.Nullable<int> Measure
		{
			get
			{
				return this._Measure;
			}
			set
			{
				if ((this._Measure != value))
				{
					this.OnMeasureChanging(value);
					this.SendPropertyChanging();
					this._Measure = value;
					this.SendPropertyChanged("Measure");
					this.OnMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="Float")]
		public System.Nullable<double> Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Base", DbType="Float")]
		public System.Nullable<double> Base
		{
			get
			{
				return this._Base;
			}
			set
			{
				if ((this._Base != value))
				{
					this.OnBaseChanging(value);
					this.SendPropertyChanging();
					this._Base = value;
					this.SendPropertyChanged("Base");
					this.OnBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remuneration", DbType="VarChar(20)")]
		public string Remuneration
		{
			get
			{
				return this._Remuneration;
			}
			set
			{
				if ((this._Remuneration != value))
				{
					this.OnRemunerationChanging(value);
					this.SendPropertyChanging();
					this._Remuneration = value;
					this.SendPropertyChanged("Remuneration");
					this.OnRemunerationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EML_Portfolio")]
	public partial class EML_PortfolioDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Team;
		
		private string _Case_Manager;
		
		private string _Agency_Id;
		
		private string _Policy_No;
		
		private string _EMPL_SIZE;
		
		private string _Account_Manager;
		
		private string _Portfolio;
		
		private System.DateTime _Reporting_Date;
		
		private string _Is_Open_Claim;
		
		private string _Claim_No;
		
		private string _WIC_Code;
		
		private string _Company_Name;
		
		private string _Current_Cost_Code;
		
		private string _Worker_Name;
		
		private string _Employee_Number;
		
		private string _Worker_Phone_Number;
		
		private string _Claims_Officer_Name;
		
		private System.Nullable<System.DateTime> _Date_Of_Birth;
		
		private System.Nullable<System.DateTime> _Date_Of_Injury;
		
		private System.Nullable<System.DateTime> _Date_Of_Notification;
		
		private System.Nullable<int> _Notification_Lag;
		
		private System.Nullable<int> _Entered_Lag;
		
		private string _Claim_Liability_Indicator_Group;
		
		private System.Nullable<decimal> _Investigation_Incurred;
		
		private System.Nullable<decimal> _Total_Paid;
		
		private System.Nullable<bool> _Is_Time_Lost;
		
		private System.Nullable<System.DateTime> _Date_Claim_Closed;
		
		private System.Nullable<System.DateTime> _Date_Claim_Received;
		
		private System.Nullable<System.DateTime> _Date_Claim_Reopened;
		
		private System.Nullable<int> _Result_Of_Injury_Code;
		
		private System.Nullable<double> _WPI;
		
		private System.Nullable<bool> _Common_Law;
		
		private System.Nullable<double> _Total_Recoveries;
		
		private string _Med_Cert_Status;
		
		private System.Nullable<bool> _Is_Working;
		
		private System.Nullable<double> _Physio_Paid;
		
		private System.Nullable<double> _Chiro_Paid;
		
		private System.Nullable<double> _Massage_Paid;
		
		private System.Nullable<double> _Osteopathy_Paid;
		
		private System.Nullable<double> _Acupuncture_Paid;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<bool> _Is_Stress;
		
		private System.Nullable<bool> _Is_Inactive_Claims;
		
		private System.Nullable<bool> _Is_Medically_Discharged;
		
		private System.Nullable<bool> _Is_Exempt;
		
		private System.Nullable<bool> _Is_Reactive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTeamChanging(string value);
    partial void OnTeamChanged();
    partial void OnCase_ManagerChanging(string value);
    partial void OnCase_ManagerChanged();
    partial void OnAgency_IdChanging(string value);
    partial void OnAgency_IdChanged();
    partial void OnPolicy_NoChanging(string value);
    partial void OnPolicy_NoChanged();
    partial void OnEMPL_SIZEChanging(string value);
    partial void OnEMPL_SIZEChanged();
    partial void OnAccount_ManagerChanging(string value);
    partial void OnAccount_ManagerChanged();
    partial void OnPortfolioChanging(string value);
    partial void OnPortfolioChanged();
    partial void OnReporting_DateChanging(System.DateTime value);
    partial void OnReporting_DateChanged();
    partial void OnClaim_Closed_FlagChanging(string value);
    partial void OnClaim_Closed_FlagChanged();
    partial void OnClaim_NoChanging(string value);
    partial void OnClaim_NoChanged();
    partial void OnWIC_CodeChanging(string value);
    partial void OnWIC_CodeChanged();
    partial void OnCompany_NameChanging(string value);
    partial void OnCompany_NameChanged();
    partial void OnCurrent_Cost_CodeChanging(string value);
    partial void OnCurrent_Cost_CodeChanged();
    partial void OnWorker_NameChanging(string value);
    partial void OnWorker_NameChanged();
    partial void OnEmployee_NumberChanging(string value);
    partial void OnEmployee_NumberChanged();
    partial void OnWorker_Phone_NumberChanging(string value);
    partial void OnWorker_Phone_NumberChanged();
    partial void OnClaims_Officer_NameChanging(string value);
    partial void OnClaims_Officer_NameChanged();
    partial void OnDate_Of_BirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Of_BirthChanged();
    partial void OnDate_Of_InjuryChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Of_InjuryChanged();
    partial void OnDate_Of_NotificationChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Of_NotificationChanged();
    partial void OnNotification_LagChanging(System.Nullable<int> value);
    partial void OnNotification_LagChanged();
    partial void OnEntered_LagChanging(System.Nullable<int> value);
    partial void OnEntered_LagChanged();
    partial void OnClaim_Liability_Indicator_GroupChanging(string value);
    partial void OnClaim_Liability_Indicator_GroupChanged();
    partial void OnInvestigation_IncurredChanging(System.Nullable<decimal> value);
    partial void OnInvestigation_IncurredChanged();
    partial void OnTotal_PaidChanging(System.Nullable<decimal> value);
    partial void OnTotal_PaidChanged();
    partial void OnIs_Time_LostChanging(System.Nullable<bool> value);
    partial void OnIs_Time_LostChanged();
    partial void OnDate_Claim_ClosedChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Claim_ClosedChanged();
    partial void OnDate_Claim_ReceivedChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Claim_ReceivedChanged();
    partial void OnDate_Claim_ReopenedChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Claim_ReopenedChanged();
    partial void OnResult_Of_Injury_CodeChanging(System.Nullable<int> value);
    partial void OnResult_Of_Injury_CodeChanged();
    partial void OnWPIChanging(System.Nullable<double> value);
    partial void OnWPIChanged();
    partial void OnCommon_LawChanging(System.Nullable<bool> value);
    partial void OnCommon_LawChanged();
    partial void OnTotal_RecoveriesChanging(System.Nullable<double> value);
    partial void OnTotal_RecoveriesChanged();
    partial void OnMed_Cert_StatusChanging(string value);
    partial void OnMed_Cert_StatusChanged();
    partial void OnIs_WorkingChanging(System.Nullable<bool> value);
    partial void OnIs_WorkingChanged();
    partial void OnPhysio_PaidChanging(System.Nullable<double> value);
    partial void OnPhysio_PaidChanged();
    partial void OnChiro_PaidChanging(System.Nullable<double> value);
    partial void OnChiro_PaidChanged();
    partial void OnMassage_PaidChanging(System.Nullable<double> value);
    partial void OnMassage_PaidChanged();
    partial void OnOsteopathy_PaidChanging(System.Nullable<double> value);
    partial void OnOsteopathy_PaidChanged();
    partial void OnAcupuncture_PaidChanging(System.Nullable<double> value);
    partial void OnAcupuncture_PaidChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnIs_StressChanging(System.Nullable<bool> value);
    partial void OnIs_StressChanged();
    partial void OnIs_Inactive_ClaimsChanging(System.Nullable<bool> value);
    partial void OnIs_Inactive_ClaimsChanged();
    partial void OnIs_Medically_DischargedChanging(System.Nullable<bool> value);
    partial void OnIs_Medically_DischargedChanged();
    partial void OnIs_ExemptChanging(System.Nullable<bool> value);
    partial void OnIs_ExemptChanged();
    partial void OnIs_ReactiveChanging(System.Nullable<bool> value);
    partial void OnIs_ReactiveChanged();
    #endregion
		
		public EML_PortfolioDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team", DbType="VarChar(20)")]
		public string Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				if ((this._Team != value))
				{
					this.OnTeamChanging(value);
					this.SendPropertyChanging();
					this._Team = value;
					this.SendPropertyChanged("Team");
					this.OnTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Case_Manager", DbType="VarChar(81)")]
		public string Case_Manager
		{
			get
			{
				return this._Case_Manager;
			}
			set
			{
				if ((this._Case_Manager != value))
				{
					this.OnCase_ManagerChanging(value);
					this.SendPropertyChanging();
					this._Case_Manager = value;
					this.SendPropertyChanged("Case_Manager");
					this.OnCase_ManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agency_Id", DbType="VarChar(20)")]
		public string Agency_Id
		{
			get
			{
				return this._Agency_Id;
			}
			set
			{
				if ((this._Agency_Id != value))
				{
					this.OnAgency_IdChanging(value);
					this.SendPropertyChanging();
					this._Agency_Id = value;
					this.SendPropertyChanged("Agency_Id");
					this.OnAgency_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Policy_No", DbType="Char(19)")]
		public string Policy_No
		{
			get
			{
				return this._Policy_No;
			}
			set
			{
				if ((this._Policy_No != value))
				{
					this.OnPolicy_NoChanging(value);
					this.SendPropertyChanging();
					this._Policy_No = value;
					this.SendPropertyChanged("Policy_No");
					this.OnPolicy_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPL_SIZE", DbType="VarChar(256)")]
		public string EMPL_SIZE
		{
			get
			{
				return this._EMPL_SIZE;
			}
			set
			{
				if ((this._EMPL_SIZE != value))
				{
					this.OnEMPL_SIZEChanging(value);
					this.SendPropertyChanging();
					this._EMPL_SIZE = value;
					this.SendPropertyChanged("EMPL_SIZE");
					this.OnEMPL_SIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Manager", DbType="VarChar(256)")]
		public string Account_Manager
		{
			get
			{
				return this._Account_Manager;
			}
			set
			{
				if ((this._Account_Manager != value))
				{
					this.OnAccount_ManagerChanging(value);
					this.SendPropertyChanging();
					this._Account_Manager = value;
					this.SendPropertyChanged("Account_Manager");
					this.OnAccount_ManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portfolio", DbType="VarChar(256)")]
		public string Portfolio
		{
			get
			{
				return this._Portfolio;
			}
			set
			{
				if ((this._Portfolio != value))
				{
					this.OnPortfolioChanging(value);
					this.SendPropertyChanging();
					this._Portfolio = value;
					this.SendPropertyChanged("Portfolio");
					this.OnPortfolioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reporting_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Reporting_Date
		{
			get
			{
				return this._Reporting_Date;
			}
			set
			{
				if ((this._Reporting_Date != value))
				{
					this.OnReporting_DateChanging(value);
					this.SendPropertyChanging();
					this._Reporting_Date = value;
					this.SendPropertyChanged("Reporting_Date");
					this.OnReporting_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Open_Claim", DbType="NChar(1)", CanBeNull=false)]
		public string Claim_Closed_Flag
		{
			get
			{
				return this._Is_Open_Claim;
			}
			set
			{
				if ((this._Is_Open_Claim != value))
				{
					this.OnClaim_Closed_FlagChanging(value);
					this.SendPropertyChanging();
					this._Is_Open_Claim = value;
					this.SendPropertyChanged("Claim_Closed_Flag");
					this.OnClaim_Closed_FlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Claim_No", DbType="VarChar(19)")]
		public string Claim_No
		{
			get
			{
				return this._Claim_No;
			}
			set
			{
				if ((this._Claim_No != value))
				{
					this.OnClaim_NoChanging(value);
					this.SendPropertyChanging();
					this._Claim_No = value;
					this.SendPropertyChanged("Claim_No");
					this.OnClaim_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WIC_Code", DbType="VarChar(50)")]
		public string WIC_Code
		{
			get
			{
				return this._WIC_Code;
			}
			set
			{
				if ((this._WIC_Code != value))
				{
					this.OnWIC_CodeChanging(value);
					this.SendPropertyChanging();
					this._WIC_Code = value;
					this.SendPropertyChanged("WIC_Code");
					this.OnWIC_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Name", DbType="VarChar(256)")]
		public string Company_Name
		{
			get
			{
				return this._Company_Name;
			}
			set
			{
				if ((this._Company_Name != value))
				{
					this.OnCompany_NameChanging(value);
					this.SendPropertyChanging();
					this._Company_Name = value;
					this.SendPropertyChanged("Company_Name");
					this.OnCompany_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Current_Cost_Code", DbType="VarChar(256)")]
		public string Current_Cost_Code
		{
			get
			{
				return this._Current_Cost_Code;
			}
			set
			{
				if ((this._Current_Cost_Code != value))
				{
					this.OnCurrent_Cost_CodeChanging(value);
					this.SendPropertyChanging();
					this._Current_Cost_Code = value;
					this.SendPropertyChanged("Current_Cost_Code");
					this.OnCurrent_Cost_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Worker_Name", DbType="VarChar(256)")]
		public string Worker_Name
		{
			get
			{
				return this._Worker_Name;
			}
			set
			{
				if ((this._Worker_Name != value))
				{
					this.OnWorker_NameChanging(value);
					this.SendPropertyChanging();
					this._Worker_Name = value;
					this.SendPropertyChanged("Worker_Name");
					this.OnWorker_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_Number", DbType="VarChar(256)")]
		public string Employee_Number
		{
			get
			{
				return this._Employee_Number;
			}
			set
			{
				if ((this._Employee_Number != value))
				{
					this.OnEmployee_NumberChanging(value);
					this.SendPropertyChanging();
					this._Employee_Number = value;
					this.SendPropertyChanged("Employee_Number");
					this.OnEmployee_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Worker_Phone_Number", DbType="VarChar(256)")]
		public string Worker_Phone_Number
		{
			get
			{
				return this._Worker_Phone_Number;
			}
			set
			{
				if ((this._Worker_Phone_Number != value))
				{
					this.OnWorker_Phone_NumberChanging(value);
					this.SendPropertyChanging();
					this._Worker_Phone_Number = value;
					this.SendPropertyChanged("Worker_Phone_Number");
					this.OnWorker_Phone_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Claims_Officer_Name", DbType="VarChar(256)")]
		public string Claims_Officer_Name
		{
			get
			{
				return this._Claims_Officer_Name;
			}
			set
			{
				if ((this._Claims_Officer_Name != value))
				{
					this.OnClaims_Officer_NameChanging(value);
					this.SendPropertyChanging();
					this._Claims_Officer_Name = value;
					this.SendPropertyChanged("Claims_Officer_Name");
					this.OnClaims_Officer_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Of_Birth", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Of_Birth
		{
			get
			{
				return this._Date_Of_Birth;
			}
			set
			{
				if ((this._Date_Of_Birth != value))
				{
					this.OnDate_Of_BirthChanging(value);
					this.SendPropertyChanging();
					this._Date_Of_Birth = value;
					this.SendPropertyChanged("Date_Of_Birth");
					this.OnDate_Of_BirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Of_Injury", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Of_Injury
		{
			get
			{
				return this._Date_Of_Injury;
			}
			set
			{
				if ((this._Date_Of_Injury != value))
				{
					this.OnDate_Of_InjuryChanging(value);
					this.SendPropertyChanging();
					this._Date_Of_Injury = value;
					this.SendPropertyChanged("Date_Of_Injury");
					this.OnDate_Of_InjuryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Of_Notification", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Of_Notification
		{
			get
			{
				return this._Date_Of_Notification;
			}
			set
			{
				if ((this._Date_Of_Notification != value))
				{
					this.OnDate_Of_NotificationChanging(value);
					this.SendPropertyChanging();
					this._Date_Of_Notification = value;
					this.SendPropertyChanged("Date_Of_Notification");
					this.OnDate_Of_NotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notification_Lag", DbType="Int")]
		public System.Nullable<int> Notification_Lag
		{
			get
			{
				return this._Notification_Lag;
			}
			set
			{
				if ((this._Notification_Lag != value))
				{
					this.OnNotification_LagChanging(value);
					this.SendPropertyChanging();
					this._Notification_Lag = value;
					this.SendPropertyChanged("Notification_Lag");
					this.OnNotification_LagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entered_Lag", DbType="Int")]
		public System.Nullable<int> Entered_Lag
		{
			get
			{
				return this._Entered_Lag;
			}
			set
			{
				if ((this._Entered_Lag != value))
				{
					this.OnEntered_LagChanging(value);
					this.SendPropertyChanging();
					this._Entered_Lag = value;
					this.SendPropertyChanged("Entered_Lag");
					this.OnEntered_LagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Claim_Liability_Indicator_Group", DbType="VarChar(256)")]
		public string Claim_Liability_Indicator_Group
		{
			get
			{
				return this._Claim_Liability_Indicator_Group;
			}
			set
			{
				if ((this._Claim_Liability_Indicator_Group != value))
				{
					this.OnClaim_Liability_Indicator_GroupChanging(value);
					this.SendPropertyChanging();
					this._Claim_Liability_Indicator_Group = value;
					this.SendPropertyChanged("Claim_Liability_Indicator_Group");
					this.OnClaim_Liability_Indicator_GroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Investigation_Incurred", DbType="Money")]
		public System.Nullable<decimal> Investigation_Incurred
		{
			get
			{
				return this._Investigation_Incurred;
			}
			set
			{
				if ((this._Investigation_Incurred != value))
				{
					this.OnInvestigation_IncurredChanging(value);
					this.SendPropertyChanging();
					this._Investigation_Incurred = value;
					this.SendPropertyChanged("Investigation_Incurred");
					this.OnInvestigation_IncurredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Paid", DbType="Money")]
		public System.Nullable<decimal> Total_Paid
		{
			get
			{
				return this._Total_Paid;
			}
			set
			{
				if ((this._Total_Paid != value))
				{
					this.OnTotal_PaidChanging(value);
					this.SendPropertyChanging();
					this._Total_Paid = value;
					this.SendPropertyChanged("Total_Paid");
					this.OnTotal_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Time_Lost", DbType="Bit")]
		public System.Nullable<bool> Is_Time_Lost
		{
			get
			{
				return this._Is_Time_Lost;
			}
			set
			{
				if ((this._Is_Time_Lost != value))
				{
					this.OnIs_Time_LostChanging(value);
					this.SendPropertyChanging();
					this._Is_Time_Lost = value;
					this.SendPropertyChanged("Is_Time_Lost");
					this.OnIs_Time_LostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Claim_Closed", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Claim_Closed
		{
			get
			{
				return this._Date_Claim_Closed;
			}
			set
			{
				if ((this._Date_Claim_Closed != value))
				{
					this.OnDate_Claim_ClosedChanging(value);
					this.SendPropertyChanging();
					this._Date_Claim_Closed = value;
					this.SendPropertyChanged("Date_Claim_Closed");
					this.OnDate_Claim_ClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Claim_Received", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Claim_Received
		{
			get
			{
				return this._Date_Claim_Received;
			}
			set
			{
				if ((this._Date_Claim_Received != value))
				{
					this.OnDate_Claim_ReceivedChanging(value);
					this.SendPropertyChanging();
					this._Date_Claim_Received = value;
					this.SendPropertyChanged("Date_Claim_Received");
					this.OnDate_Claim_ReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Claim_Reopened", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Claim_Reopened
		{
			get
			{
				return this._Date_Claim_Reopened;
			}
			set
			{
				if ((this._Date_Claim_Reopened != value))
				{
					this.OnDate_Claim_ReopenedChanging(value);
					this.SendPropertyChanging();
					this._Date_Claim_Reopened = value;
					this.SendPropertyChanged("Date_Claim_Reopened");
					this.OnDate_Claim_ReopenedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result_Of_Injury_Code", DbType="Int")]
		public System.Nullable<int> Result_Of_Injury_Code
		{
			get
			{
				return this._Result_Of_Injury_Code;
			}
			set
			{
				if ((this._Result_Of_Injury_Code != value))
				{
					this.OnResult_Of_Injury_CodeChanging(value);
					this.SendPropertyChanging();
					this._Result_Of_Injury_Code = value;
					this.SendPropertyChanged("Result_Of_Injury_Code");
					this.OnResult_Of_Injury_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPI", DbType="Float")]
		public System.Nullable<double> WPI
		{
			get
			{
				return this._WPI;
			}
			set
			{
				if ((this._WPI != value))
				{
					this.OnWPIChanging(value);
					this.SendPropertyChanging();
					this._WPI = value;
					this.SendPropertyChanged("WPI");
					this.OnWPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Common_Law", DbType="Bit")]
		public System.Nullable<bool> Common_Law
		{
			get
			{
				return this._Common_Law;
			}
			set
			{
				if ((this._Common_Law != value))
				{
					this.OnCommon_LawChanging(value);
					this.SendPropertyChanging();
					this._Common_Law = value;
					this.SendPropertyChanged("Common_Law");
					this.OnCommon_LawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Recoveries", DbType="Float")]
		public System.Nullable<double> Total_Recoveries
		{
			get
			{
				return this._Total_Recoveries;
			}
			set
			{
				if ((this._Total_Recoveries != value))
				{
					this.OnTotal_RecoveriesChanging(value);
					this.SendPropertyChanging();
					this._Total_Recoveries = value;
					this.SendPropertyChanged("Total_Recoveries");
					this.OnTotal_RecoveriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Med_Cert_Status", DbType="VarChar(20)")]
		public string Med_Cert_Status
		{
			get
			{
				return this._Med_Cert_Status;
			}
			set
			{
				if ((this._Med_Cert_Status != value))
				{
					this.OnMed_Cert_StatusChanging(value);
					this.SendPropertyChanging();
					this._Med_Cert_Status = value;
					this.SendPropertyChanged("Med_Cert_Status");
					this.OnMed_Cert_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Working", DbType="Bit")]
		public System.Nullable<bool> Is_Working
		{
			get
			{
				return this._Is_Working;
			}
			set
			{
				if ((this._Is_Working != value))
				{
					this.OnIs_WorkingChanging(value);
					this.SendPropertyChanging();
					this._Is_Working = value;
					this.SendPropertyChanged("Is_Working");
					this.OnIs_WorkingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Physio_Paid", DbType="Float")]
		public System.Nullable<double> Physio_Paid
		{
			get
			{
				return this._Physio_Paid;
			}
			set
			{
				if ((this._Physio_Paid != value))
				{
					this.OnPhysio_PaidChanging(value);
					this.SendPropertyChanging();
					this._Physio_Paid = value;
					this.SendPropertyChanged("Physio_Paid");
					this.OnPhysio_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chiro_Paid", DbType="Float")]
		public System.Nullable<double> Chiro_Paid
		{
			get
			{
				return this._Chiro_Paid;
			}
			set
			{
				if ((this._Chiro_Paid != value))
				{
					this.OnChiro_PaidChanging(value);
					this.SendPropertyChanging();
					this._Chiro_Paid = value;
					this.SendPropertyChanged("Chiro_Paid");
					this.OnChiro_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Massage_Paid", DbType="Float")]
		public System.Nullable<double> Massage_Paid
		{
			get
			{
				return this._Massage_Paid;
			}
			set
			{
				if ((this._Massage_Paid != value))
				{
					this.OnMassage_PaidChanging(value);
					this.SendPropertyChanging();
					this._Massage_Paid = value;
					this.SendPropertyChanged("Massage_Paid");
					this.OnMassage_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Osteopathy_Paid", DbType="Float")]
		public System.Nullable<double> Osteopathy_Paid
		{
			get
			{
				return this._Osteopathy_Paid;
			}
			set
			{
				if ((this._Osteopathy_Paid != value))
				{
					this.OnOsteopathy_PaidChanging(value);
					this.SendPropertyChanging();
					this._Osteopathy_Paid = value;
					this.SendPropertyChanged("Osteopathy_Paid");
					this.OnOsteopathy_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acupuncture_Paid", DbType="Float")]
		public System.Nullable<double> Acupuncture_Paid
		{
			get
			{
				return this._Acupuncture_Paid;
			}
			set
			{
				if ((this._Acupuncture_Paid != value))
				{
					this.OnAcupuncture_PaidChanging(value);
					this.SendPropertyChanging();
					this._Acupuncture_Paid = value;
					this.SendPropertyChanged("Acupuncture_Paid");
					this.OnAcupuncture_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Stress", DbType="Bit")]
		public System.Nullable<bool> Is_Stress
		{
			get
			{
				return this._Is_Stress;
			}
			set
			{
				if ((this._Is_Stress != value))
				{
					this.OnIs_StressChanging(value);
					this.SendPropertyChanging();
					this._Is_Stress = value;
					this.SendPropertyChanged("Is_Stress");
					this.OnIs_StressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Inactive_Claims", DbType="Bit")]
		public System.Nullable<bool> Is_Inactive_Claims
		{
			get
			{
				return this._Is_Inactive_Claims;
			}
			set
			{
				if ((this._Is_Inactive_Claims != value))
				{
					this.OnIs_Inactive_ClaimsChanging(value);
					this.SendPropertyChanging();
					this._Is_Inactive_Claims = value;
					this.SendPropertyChanged("Is_Inactive_Claims");
					this.OnIs_Inactive_ClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Medically_Discharged", DbType="Bit")]
		public System.Nullable<bool> Is_Medically_Discharged
		{
			get
			{
				return this._Is_Medically_Discharged;
			}
			set
			{
				if ((this._Is_Medically_Discharged != value))
				{
					this.OnIs_Medically_DischargedChanging(value);
					this.SendPropertyChanging();
					this._Is_Medically_Discharged = value;
					this.SendPropertyChanged("Is_Medically_Discharged");
					this.OnIs_Medically_DischargedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Exempt", DbType="Bit")]
		public System.Nullable<bool> Is_Exempt
		{
			get
			{
				return this._Is_Exempt;
			}
			set
			{
				if ((this._Is_Exempt != value))
				{
					this.OnIs_ExemptChanging(value);
					this.SendPropertyChanging();
					this._Is_Exempt = value;
					this.SendPropertyChanged("Is_Exempt");
					this.OnIs_ExemptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Reactive", DbType="Bit")]
		public System.Nullable<bool> Is_Reactive
		{
			get
			{
				return this._Is_Reactive;
			}
			set
			{
				if ((this._Is_Reactive != value))
				{
					this.OnIs_ReactiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Reactive = value;
					this.SendPropertyChanged("Is_Reactive");
					this.OnIs_ReactiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HEM_Portfolio")]
	public partial class HEM_PortfolioDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Team;
		
		private string _Case_Manager;
		
		private string _Agency_Id;
		
		private string _Policy_No;
		
		private string _EMPL_SIZE;
		
		private string _Account_Manager;
		
		private string _Portfolio;
		
		private System.DateTime _Reporting_Date;
		
		private string _Is_Open_Claim;
		
		private string _Claim_No;
		
		private string _WIC_Code;
		
		private string _Company_Name;
		
		private string _Current_Cost_Code;
		
		private string _Worker_Name;
		
		private string _Employee_Number;
		
		private string _Worker_Phone_Number;
		
		private string _Claims_Officer_Name;
		
		private System.Nullable<System.DateTime> _Date_Of_Birth;
		
		private System.Nullable<System.DateTime> _Date_Of_Injury;
		
		private System.Nullable<System.DateTime> _Date_Of_Notification;
		
		private System.Nullable<int> _Notification_Lag;
		
		private System.Nullable<int> _Entered_Lag;
		
		private string _Claim_Liability_Indicator_Group;
		
		private System.Nullable<decimal> _Investigation_Incurred;
		
		private System.Nullable<decimal> _Total_Paid;
		
		private System.Nullable<bool> _Is_Time_Lost;
		
		private System.Nullable<System.DateTime> _Date_Claim_Closed;
		
		private System.Nullable<System.DateTime> _Date_Claim_Received;
		
		private System.Nullable<System.DateTime> _Date_Claim_Reopened;
		
		private System.Nullable<int> _Result_Of_Injury_Code;
		
		private System.Nullable<double> _WPI;
		
		private System.Nullable<bool> _Common_Law;
		
		private System.Nullable<double> _Total_Recoveries;
		
		private string _Med_Cert_Status;
		
		private System.Nullable<bool> _Is_Working;
		
		private System.Nullable<double> _Physio_Paid;
		
		private System.Nullable<double> _Chiro_Paid;
		
		private System.Nullable<double> _Massage_Paid;
		
		private System.Nullable<double> _Osteopathy_Paid;
		
		private System.Nullable<double> _Acupuncture_Paid;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<bool> _Is_Stress;
		
		private System.Nullable<bool> _Is_Inactive_Claims;
		
		private System.Nullable<bool> _Is_Medically_Discharged;
		
		private System.Nullable<bool> _Is_Exempt;
		
		private System.Nullable<bool> _Is_Reactive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTeamChanging(string value);
    partial void OnTeamChanged();
    partial void OnCase_ManagerChanging(string value);
    partial void OnCase_ManagerChanged();
    partial void OnAgency_IdChanging(string value);
    partial void OnAgency_IdChanged();
    partial void OnPolicy_NoChanging(string value);
    partial void OnPolicy_NoChanged();
    partial void OnEMPL_SIZEChanging(string value);
    partial void OnEMPL_SIZEChanged();
    partial void OnAccount_ManagerChanging(string value);
    partial void OnAccount_ManagerChanged();
    partial void OnPortfolioChanging(string value);
    partial void OnPortfolioChanged();
    partial void OnReporting_DateChanging(System.DateTime value);
    partial void OnReporting_DateChanged();
    partial void OnClaim_Closed_FlagChanging(string value);
    partial void OnClaim_Closed_FlagChanged();
    partial void OnClaim_NoChanging(string value);
    partial void OnClaim_NoChanged();
    partial void OnWIC_CodeChanging(string value);
    partial void OnWIC_CodeChanged();
    partial void OnCompany_NameChanging(string value);
    partial void OnCompany_NameChanged();
    partial void OnCurrent_Cost_CodeChanging(string value);
    partial void OnCurrent_Cost_CodeChanged();
    partial void OnWorker_NameChanging(string value);
    partial void OnWorker_NameChanged();
    partial void OnEmployee_NumberChanging(string value);
    partial void OnEmployee_NumberChanged();
    partial void OnWorker_Phone_NumberChanging(string value);
    partial void OnWorker_Phone_NumberChanged();
    partial void OnClaims_Officer_NameChanging(string value);
    partial void OnClaims_Officer_NameChanged();
    partial void OnDate_Of_BirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Of_BirthChanged();
    partial void OnDate_Of_InjuryChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Of_InjuryChanged();
    partial void OnDate_Of_NotificationChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Of_NotificationChanged();
    partial void OnNotification_LagChanging(System.Nullable<int> value);
    partial void OnNotification_LagChanged();
    partial void OnEntered_LagChanging(System.Nullable<int> value);
    partial void OnEntered_LagChanged();
    partial void OnClaim_Liability_Indicator_GroupChanging(string value);
    partial void OnClaim_Liability_Indicator_GroupChanged();
    partial void OnInvestigation_IncurredChanging(System.Nullable<decimal> value);
    partial void OnInvestigation_IncurredChanged();
    partial void OnTotal_PaidChanging(System.Nullable<decimal> value);
    partial void OnTotal_PaidChanged();
    partial void OnIs_Time_LostChanging(System.Nullable<bool> value);
    partial void OnIs_Time_LostChanged();
    partial void OnDate_Claim_ClosedChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Claim_ClosedChanged();
    partial void OnDate_Claim_ReceivedChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Claim_ReceivedChanged();
    partial void OnDate_Claim_ReopenedChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Claim_ReopenedChanged();
    partial void OnResult_Of_Injury_CodeChanging(System.Nullable<int> value);
    partial void OnResult_Of_Injury_CodeChanged();
    partial void OnWPIChanging(System.Nullable<double> value);
    partial void OnWPIChanged();
    partial void OnCommon_LawChanging(System.Nullable<bool> value);
    partial void OnCommon_LawChanged();
    partial void OnTotal_RecoveriesChanging(System.Nullable<double> value);
    partial void OnTotal_RecoveriesChanged();
    partial void OnMed_Cert_StatusChanging(string value);
    partial void OnMed_Cert_StatusChanged();
    partial void OnIs_WorkingChanging(System.Nullable<bool> value);
    partial void OnIs_WorkingChanged();
    partial void OnPhysio_PaidChanging(System.Nullable<double> value);
    partial void OnPhysio_PaidChanged();
    partial void OnChiro_PaidChanging(System.Nullable<double> value);
    partial void OnChiro_PaidChanged();
    partial void OnMassage_PaidChanging(System.Nullable<double> value);
    partial void OnMassage_PaidChanged();
    partial void OnOsteopathy_PaidChanging(System.Nullable<double> value);
    partial void OnOsteopathy_PaidChanged();
    partial void OnAcupuncture_PaidChanging(System.Nullable<double> value);
    partial void OnAcupuncture_PaidChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnIs_StressChanging(System.Nullable<bool> value);
    partial void OnIs_StressChanged();
    partial void OnIs_Inactive_ClaimsChanging(System.Nullable<bool> value);
    partial void OnIs_Inactive_ClaimsChanged();
    partial void OnIs_Medically_DischargedChanging(System.Nullable<bool> value);
    partial void OnIs_Medically_DischargedChanged();
    partial void OnIs_ExemptChanging(System.Nullable<bool> value);
    partial void OnIs_ExemptChanged();
    partial void OnIs_ReactiveChanging(System.Nullable<bool> value);
    partial void OnIs_ReactiveChanged();
    #endregion
		
		public HEM_PortfolioDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team", DbType="VarChar(20)")]
		public string Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				if ((this._Team != value))
				{
					this.OnTeamChanging(value);
					this.SendPropertyChanging();
					this._Team = value;
					this.SendPropertyChanged("Team");
					this.OnTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Case_Manager", DbType="VarChar(81)")]
		public string Case_Manager
		{
			get
			{
				return this._Case_Manager;
			}
			set
			{
				if ((this._Case_Manager != value))
				{
					this.OnCase_ManagerChanging(value);
					this.SendPropertyChanging();
					this._Case_Manager = value;
					this.SendPropertyChanged("Case_Manager");
					this.OnCase_ManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agency_Id", DbType="VarChar(20)")]
		public string Agency_Id
		{
			get
			{
				return this._Agency_Id;
			}
			set
			{
				if ((this._Agency_Id != value))
				{
					this.OnAgency_IdChanging(value);
					this.SendPropertyChanging();
					this._Agency_Id = value;
					this.SendPropertyChanged("Agency_Id");
					this.OnAgency_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Policy_No", DbType="Char(19)")]
		public string Policy_No
		{
			get
			{
				return this._Policy_No;
			}
			set
			{
				if ((this._Policy_No != value))
				{
					this.OnPolicy_NoChanging(value);
					this.SendPropertyChanging();
					this._Policy_No = value;
					this.SendPropertyChanged("Policy_No");
					this.OnPolicy_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPL_SIZE", DbType="VarChar(256)")]
		public string EMPL_SIZE
		{
			get
			{
				return this._EMPL_SIZE;
			}
			set
			{
				if ((this._EMPL_SIZE != value))
				{
					this.OnEMPL_SIZEChanging(value);
					this.SendPropertyChanging();
					this._EMPL_SIZE = value;
					this.SendPropertyChanged("EMPL_SIZE");
					this.OnEMPL_SIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Manager", DbType="VarChar(256)")]
		public string Account_Manager
		{
			get
			{
				return this._Account_Manager;
			}
			set
			{
				if ((this._Account_Manager != value))
				{
					this.OnAccount_ManagerChanging(value);
					this.SendPropertyChanging();
					this._Account_Manager = value;
					this.SendPropertyChanged("Account_Manager");
					this.OnAccount_ManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portfolio", DbType="VarChar(256)")]
		public string Portfolio
		{
			get
			{
				return this._Portfolio;
			}
			set
			{
				if ((this._Portfolio != value))
				{
					this.OnPortfolioChanging(value);
					this.SendPropertyChanging();
					this._Portfolio = value;
					this.SendPropertyChanged("Portfolio");
					this.OnPortfolioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reporting_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Reporting_Date
		{
			get
			{
				return this._Reporting_Date;
			}
			set
			{
				if ((this._Reporting_Date != value))
				{
					this.OnReporting_DateChanging(value);
					this.SendPropertyChanging();
					this._Reporting_Date = value;
					this.SendPropertyChanged("Reporting_Date");
					this.OnReporting_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Open_Claim", DbType="NChar(1)", CanBeNull=false)]
		public string Claim_Closed_Flag
		{
			get
			{
				return this._Is_Open_Claim;
			}
			set
			{
				if ((this._Is_Open_Claim != value))
				{
					this.OnClaim_Closed_FlagChanging(value);
					this.SendPropertyChanging();
					this._Is_Open_Claim = value;
					this.SendPropertyChanged("Claim_Closed_Flag");
					this.OnClaim_Closed_FlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Claim_No", DbType="VarChar(19)")]
		public string Claim_No
		{
			get
			{
				return this._Claim_No;
			}
			set
			{
				if ((this._Claim_No != value))
				{
					this.OnClaim_NoChanging(value);
					this.SendPropertyChanging();
					this._Claim_No = value;
					this.SendPropertyChanged("Claim_No");
					this.OnClaim_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WIC_Code", DbType="VarChar(50)")]
		public string WIC_Code
		{
			get
			{
				return this._WIC_Code;
			}
			set
			{
				if ((this._WIC_Code != value))
				{
					this.OnWIC_CodeChanging(value);
					this.SendPropertyChanging();
					this._WIC_Code = value;
					this.SendPropertyChanged("WIC_Code");
					this.OnWIC_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Name", DbType="VarChar(256)")]
		public string Company_Name
		{
			get
			{
				return this._Company_Name;
			}
			set
			{
				if ((this._Company_Name != value))
				{
					this.OnCompany_NameChanging(value);
					this.SendPropertyChanging();
					this._Company_Name = value;
					this.SendPropertyChanged("Company_Name");
					this.OnCompany_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Current_Cost_Code", DbType="VarChar(256)")]
		public string Current_Cost_Code
		{
			get
			{
				return this._Current_Cost_Code;
			}
			set
			{
				if ((this._Current_Cost_Code != value))
				{
					this.OnCurrent_Cost_CodeChanging(value);
					this.SendPropertyChanging();
					this._Current_Cost_Code = value;
					this.SendPropertyChanged("Current_Cost_Code");
					this.OnCurrent_Cost_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Worker_Name", DbType="VarChar(256)")]
		public string Worker_Name
		{
			get
			{
				return this._Worker_Name;
			}
			set
			{
				if ((this._Worker_Name != value))
				{
					this.OnWorker_NameChanging(value);
					this.SendPropertyChanging();
					this._Worker_Name = value;
					this.SendPropertyChanged("Worker_Name");
					this.OnWorker_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_Number", DbType="VarChar(256)")]
		public string Employee_Number
		{
			get
			{
				return this._Employee_Number;
			}
			set
			{
				if ((this._Employee_Number != value))
				{
					this.OnEmployee_NumberChanging(value);
					this.SendPropertyChanging();
					this._Employee_Number = value;
					this.SendPropertyChanged("Employee_Number");
					this.OnEmployee_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Worker_Phone_Number", DbType="VarChar(256)")]
		public string Worker_Phone_Number
		{
			get
			{
				return this._Worker_Phone_Number;
			}
			set
			{
				if ((this._Worker_Phone_Number != value))
				{
					this.OnWorker_Phone_NumberChanging(value);
					this.SendPropertyChanging();
					this._Worker_Phone_Number = value;
					this.SendPropertyChanged("Worker_Phone_Number");
					this.OnWorker_Phone_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Claims_Officer_Name", DbType="VarChar(256)")]
		public string Claims_Officer_Name
		{
			get
			{
				return this._Claims_Officer_Name;
			}
			set
			{
				if ((this._Claims_Officer_Name != value))
				{
					this.OnClaims_Officer_NameChanging(value);
					this.SendPropertyChanging();
					this._Claims_Officer_Name = value;
					this.SendPropertyChanged("Claims_Officer_Name");
					this.OnClaims_Officer_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Of_Birth", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Of_Birth
		{
			get
			{
				return this._Date_Of_Birth;
			}
			set
			{
				if ((this._Date_Of_Birth != value))
				{
					this.OnDate_Of_BirthChanging(value);
					this.SendPropertyChanging();
					this._Date_Of_Birth = value;
					this.SendPropertyChanged("Date_Of_Birth");
					this.OnDate_Of_BirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Of_Injury", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Of_Injury
		{
			get
			{
				return this._Date_Of_Injury;
			}
			set
			{
				if ((this._Date_Of_Injury != value))
				{
					this.OnDate_Of_InjuryChanging(value);
					this.SendPropertyChanging();
					this._Date_Of_Injury = value;
					this.SendPropertyChanged("Date_Of_Injury");
					this.OnDate_Of_InjuryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Of_Notification", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Of_Notification
		{
			get
			{
				return this._Date_Of_Notification;
			}
			set
			{
				if ((this._Date_Of_Notification != value))
				{
					this.OnDate_Of_NotificationChanging(value);
					this.SendPropertyChanging();
					this._Date_Of_Notification = value;
					this.SendPropertyChanged("Date_Of_Notification");
					this.OnDate_Of_NotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notification_Lag", DbType="Int")]
		public System.Nullable<int> Notification_Lag
		{
			get
			{
				return this._Notification_Lag;
			}
			set
			{
				if ((this._Notification_Lag != value))
				{
					this.OnNotification_LagChanging(value);
					this.SendPropertyChanging();
					this._Notification_Lag = value;
					this.SendPropertyChanged("Notification_Lag");
					this.OnNotification_LagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entered_Lag", DbType="Int")]
		public System.Nullable<int> Entered_Lag
		{
			get
			{
				return this._Entered_Lag;
			}
			set
			{
				if ((this._Entered_Lag != value))
				{
					this.OnEntered_LagChanging(value);
					this.SendPropertyChanging();
					this._Entered_Lag = value;
					this.SendPropertyChanged("Entered_Lag");
					this.OnEntered_LagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Claim_Liability_Indicator_Group", DbType="VarChar(256)")]
		public string Claim_Liability_Indicator_Group
		{
			get
			{
				return this._Claim_Liability_Indicator_Group;
			}
			set
			{
				if ((this._Claim_Liability_Indicator_Group != value))
				{
					this.OnClaim_Liability_Indicator_GroupChanging(value);
					this.SendPropertyChanging();
					this._Claim_Liability_Indicator_Group = value;
					this.SendPropertyChanged("Claim_Liability_Indicator_Group");
					this.OnClaim_Liability_Indicator_GroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Investigation_Incurred", DbType="Money")]
		public System.Nullable<decimal> Investigation_Incurred
		{
			get
			{
				return this._Investigation_Incurred;
			}
			set
			{
				if ((this._Investigation_Incurred != value))
				{
					this.OnInvestigation_IncurredChanging(value);
					this.SendPropertyChanging();
					this._Investigation_Incurred = value;
					this.SendPropertyChanged("Investigation_Incurred");
					this.OnInvestigation_IncurredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Paid", DbType="Money")]
		public System.Nullable<decimal> Total_Paid
		{
			get
			{
				return this._Total_Paid;
			}
			set
			{
				if ((this._Total_Paid != value))
				{
					this.OnTotal_PaidChanging(value);
					this.SendPropertyChanging();
					this._Total_Paid = value;
					this.SendPropertyChanged("Total_Paid");
					this.OnTotal_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Time_Lost", DbType="Bit")]
		public System.Nullable<bool> Is_Time_Lost
		{
			get
			{
				return this._Is_Time_Lost;
			}
			set
			{
				if ((this._Is_Time_Lost != value))
				{
					this.OnIs_Time_LostChanging(value);
					this.SendPropertyChanging();
					this._Is_Time_Lost = value;
					this.SendPropertyChanged("Is_Time_Lost");
					this.OnIs_Time_LostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Claim_Closed", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Claim_Closed
		{
			get
			{
				return this._Date_Claim_Closed;
			}
			set
			{
				if ((this._Date_Claim_Closed != value))
				{
					this.OnDate_Claim_ClosedChanging(value);
					this.SendPropertyChanging();
					this._Date_Claim_Closed = value;
					this.SendPropertyChanged("Date_Claim_Closed");
					this.OnDate_Claim_ClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Claim_Received", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Claim_Received
		{
			get
			{
				return this._Date_Claim_Received;
			}
			set
			{
				if ((this._Date_Claim_Received != value))
				{
					this.OnDate_Claim_ReceivedChanging(value);
					this.SendPropertyChanging();
					this._Date_Claim_Received = value;
					this.SendPropertyChanged("Date_Claim_Received");
					this.OnDate_Claim_ReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Claim_Reopened", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Claim_Reopened
		{
			get
			{
				return this._Date_Claim_Reopened;
			}
			set
			{
				if ((this._Date_Claim_Reopened != value))
				{
					this.OnDate_Claim_ReopenedChanging(value);
					this.SendPropertyChanging();
					this._Date_Claim_Reopened = value;
					this.SendPropertyChanged("Date_Claim_Reopened");
					this.OnDate_Claim_ReopenedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result_Of_Injury_Code", DbType="Int")]
		public System.Nullable<int> Result_Of_Injury_Code
		{
			get
			{
				return this._Result_Of_Injury_Code;
			}
			set
			{
				if ((this._Result_Of_Injury_Code != value))
				{
					this.OnResult_Of_Injury_CodeChanging(value);
					this.SendPropertyChanging();
					this._Result_Of_Injury_Code = value;
					this.SendPropertyChanged("Result_Of_Injury_Code");
					this.OnResult_Of_Injury_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPI", DbType="Float")]
		public System.Nullable<double> WPI
		{
			get
			{
				return this._WPI;
			}
			set
			{
				if ((this._WPI != value))
				{
					this.OnWPIChanging(value);
					this.SendPropertyChanging();
					this._WPI = value;
					this.SendPropertyChanged("WPI");
					this.OnWPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Common_Law", DbType="Bit")]
		public System.Nullable<bool> Common_Law
		{
			get
			{
				return this._Common_Law;
			}
			set
			{
				if ((this._Common_Law != value))
				{
					this.OnCommon_LawChanging(value);
					this.SendPropertyChanging();
					this._Common_Law = value;
					this.SendPropertyChanged("Common_Law");
					this.OnCommon_LawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Recoveries", DbType="Float")]
		public System.Nullable<double> Total_Recoveries
		{
			get
			{
				return this._Total_Recoveries;
			}
			set
			{
				if ((this._Total_Recoveries != value))
				{
					this.OnTotal_RecoveriesChanging(value);
					this.SendPropertyChanging();
					this._Total_Recoveries = value;
					this.SendPropertyChanged("Total_Recoveries");
					this.OnTotal_RecoveriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Med_Cert_Status", DbType="VarChar(20)")]
		public string Med_Cert_Status
		{
			get
			{
				return this._Med_Cert_Status;
			}
			set
			{
				if ((this._Med_Cert_Status != value))
				{
					this.OnMed_Cert_StatusChanging(value);
					this.SendPropertyChanging();
					this._Med_Cert_Status = value;
					this.SendPropertyChanged("Med_Cert_Status");
					this.OnMed_Cert_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Working", DbType="Bit")]
		public System.Nullable<bool> Is_Working
		{
			get
			{
				return this._Is_Working;
			}
			set
			{
				if ((this._Is_Working != value))
				{
					this.OnIs_WorkingChanging(value);
					this.SendPropertyChanging();
					this._Is_Working = value;
					this.SendPropertyChanged("Is_Working");
					this.OnIs_WorkingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Physio_Paid", DbType="Float")]
		public System.Nullable<double> Physio_Paid
		{
			get
			{
				return this._Physio_Paid;
			}
			set
			{
				if ((this._Physio_Paid != value))
				{
					this.OnPhysio_PaidChanging(value);
					this.SendPropertyChanging();
					this._Physio_Paid = value;
					this.SendPropertyChanged("Physio_Paid");
					this.OnPhysio_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chiro_Paid", DbType="Float")]
		public System.Nullable<double> Chiro_Paid
		{
			get
			{
				return this._Chiro_Paid;
			}
			set
			{
				if ((this._Chiro_Paid != value))
				{
					this.OnChiro_PaidChanging(value);
					this.SendPropertyChanging();
					this._Chiro_Paid = value;
					this.SendPropertyChanged("Chiro_Paid");
					this.OnChiro_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Massage_Paid", DbType="Float")]
		public System.Nullable<double> Massage_Paid
		{
			get
			{
				return this._Massage_Paid;
			}
			set
			{
				if ((this._Massage_Paid != value))
				{
					this.OnMassage_PaidChanging(value);
					this.SendPropertyChanging();
					this._Massage_Paid = value;
					this.SendPropertyChanged("Massage_Paid");
					this.OnMassage_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Osteopathy_Paid", DbType="Float")]
		public System.Nullable<double> Osteopathy_Paid
		{
			get
			{
				return this._Osteopathy_Paid;
			}
			set
			{
				if ((this._Osteopathy_Paid != value))
				{
					this.OnOsteopathy_PaidChanging(value);
					this.SendPropertyChanging();
					this._Osteopathy_Paid = value;
					this.SendPropertyChanged("Osteopathy_Paid");
					this.OnOsteopathy_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acupuncture_Paid", DbType="Float")]
		public System.Nullable<double> Acupuncture_Paid
		{
			get
			{
				return this._Acupuncture_Paid;
			}
			set
			{
				if ((this._Acupuncture_Paid != value))
				{
					this.OnAcupuncture_PaidChanging(value);
					this.SendPropertyChanging();
					this._Acupuncture_Paid = value;
					this.SendPropertyChanged("Acupuncture_Paid");
					this.OnAcupuncture_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Stress", DbType="Bit")]
		public System.Nullable<bool> Is_Stress
		{
			get
			{
				return this._Is_Stress;
			}
			set
			{
				if ((this._Is_Stress != value))
				{
					this.OnIs_StressChanging(value);
					this.SendPropertyChanging();
					this._Is_Stress = value;
					this.SendPropertyChanged("Is_Stress");
					this.OnIs_StressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Inactive_Claims", DbType="Bit")]
		public System.Nullable<bool> Is_Inactive_Claims
		{
			get
			{
				return this._Is_Inactive_Claims;
			}
			set
			{
				if ((this._Is_Inactive_Claims != value))
				{
					this.OnIs_Inactive_ClaimsChanging(value);
					this.SendPropertyChanging();
					this._Is_Inactive_Claims = value;
					this.SendPropertyChanged("Is_Inactive_Claims");
					this.OnIs_Inactive_ClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Medically_Discharged", DbType="Bit")]
		public System.Nullable<bool> Is_Medically_Discharged
		{
			get
			{
				return this._Is_Medically_Discharged;
			}
			set
			{
				if ((this._Is_Medically_Discharged != value))
				{
					this.OnIs_Medically_DischargedChanging(value);
					this.SendPropertyChanging();
					this._Is_Medically_Discharged = value;
					this.SendPropertyChanged("Is_Medically_Discharged");
					this.OnIs_Medically_DischargedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Exempt", DbType="Bit")]
		public System.Nullable<bool> Is_Exempt
		{
			get
			{
				return this._Is_Exempt;
			}
			set
			{
				if ((this._Is_Exempt != value))
				{
					this.OnIs_ExemptChanging(value);
					this.SendPropertyChanging();
					this._Is_Exempt = value;
					this.SendPropertyChanged("Is_Exempt");
					this.OnIs_ExemptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Reactive", DbType="Bit")]
		public System.Nullable<bool> Is_Reactive
		{
			get
			{
				return this._Is_Reactive;
			}
			set
			{
				if ((this._Is_Reactive != value))
				{
					this.OnIs_ReactiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Reactive = value;
					this.SendPropertyChanged("Is_Reactive");
					this.OnIs_ReactiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TMF_Portfolio")]
	public partial class TMF_PortfolioDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Team;
		
		private string _Case_Manager;
		
		private string _Agency_Id;
		
		private string _Policy_No;
		
		private string _EMPL_SIZE;
		
		private string _Account_Manager;
		
		private string _Portfolio;
		
		private System.DateTime _Reporting_Date;
		
		private string _Is_Open_Claim;
		
		private string _Claim_No;
		
		private string _WIC_Code;
		
		private string _Company_Name;
		
		private string _Current_Cost_Code;
		
		private string _Worker_Name;
		
		private string _Employee_Number;
		
		private string _Worker_Phone_Number;
		
		private string _Claims_Officer_Name;
		
		private System.Nullable<System.DateTime> _Date_Of_Birth;
		
		private System.Nullable<System.DateTime> _Date_Of_Injury;
		
		private System.Nullable<System.DateTime> _Date_Of_Notification;
		
		private System.Nullable<int> _Notification_Lag;
		
		private System.Nullable<int> _Entered_Lag;
		
		private string _Claim_Liability_Indicator_Group;
		
		private System.Nullable<decimal> _Investigation_Incurred;
		
		private System.Nullable<decimal> _Total_Paid;
		
		private System.Nullable<bool> _Is_Time_Lost;
		
		private System.Nullable<System.DateTime> _Date_Claim_Closed;
		
		private System.Nullable<System.DateTime> _Date_Claim_Received;
		
		private System.Nullable<System.DateTime> _Date_Claim_Reopened;
		
		private System.Nullable<int> _Result_Of_Injury_Code;
		
		private System.Nullable<double> _WPI;
		
		private System.Nullable<bool> _Common_Law;
		
		private System.Nullable<double> _Total_Recoveries;
		
		private string _Med_Cert_Status;
		
		private System.Nullable<bool> _Is_Working;
		
		private System.Nullable<double> _Physio_Paid;
		
		private System.Nullable<double> _Chiro_Paid;
		
		private System.Nullable<double> _Massage_Paid;
		
		private System.Nullable<double> _Osteopathy_Paid;
		
		private System.Nullable<double> _Acupuncture_Paid;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<bool> _Is_Stress;
		
		private System.Nullable<bool> _Is_Inactive_Claims;
		
		private System.Nullable<bool> _Is_Medically_Discharged;
		
		private System.Nullable<bool> _Is_Exempt;
		
		private System.Nullable<bool> _Is_Reactive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTeamChanging(string value);
    partial void OnTeamChanged();
    partial void OnCase_ManagerChanging(string value);
    partial void OnCase_ManagerChanged();
    partial void OnAgency_IdChanging(string value);
    partial void OnAgency_IdChanged();
    partial void OnPolicy_NoChanging(string value);
    partial void OnPolicy_NoChanged();
    partial void OnEMPL_SIZEChanging(string value);
    partial void OnEMPL_SIZEChanged();
    partial void OnAccount_ManagerChanging(string value);
    partial void OnAccount_ManagerChanged();
    partial void OnPortfolioChanging(string value);
    partial void OnPortfolioChanged();
    partial void OnReporting_DateChanging(System.DateTime value);
    partial void OnReporting_DateChanged();
    partial void OnClaim_Closed_FlagChanging(string value);
    partial void OnClaim_Closed_FlagChanged();
    partial void OnClaim_NoChanging(string value);
    partial void OnClaim_NoChanged();
    partial void OnWIC_CodeChanging(string value);
    partial void OnWIC_CodeChanged();
    partial void OnCompany_NameChanging(string value);
    partial void OnCompany_NameChanged();
    partial void OnCurrent_Cost_CodeChanging(string value);
    partial void OnCurrent_Cost_CodeChanged();
    partial void OnWorker_NameChanging(string value);
    partial void OnWorker_NameChanged();
    partial void OnEmployee_NumberChanging(string value);
    partial void OnEmployee_NumberChanged();
    partial void OnWorker_Phone_NumberChanging(string value);
    partial void OnWorker_Phone_NumberChanged();
    partial void OnClaims_Officer_NameChanging(string value);
    partial void OnClaims_Officer_NameChanged();
    partial void OnDate_Of_BirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Of_BirthChanged();
    partial void OnDate_Of_InjuryChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Of_InjuryChanged();
    partial void OnDate_Of_NotificationChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Of_NotificationChanged();
    partial void OnNotification_LagChanging(System.Nullable<int> value);
    partial void OnNotification_LagChanged();
    partial void OnEntered_LagChanging(System.Nullable<int> value);
    partial void OnEntered_LagChanged();
    partial void OnClaim_Liability_Indicator_GroupChanging(string value);
    partial void OnClaim_Liability_Indicator_GroupChanged();
    partial void OnInvestigation_IncurredChanging(System.Nullable<decimal> value);
    partial void OnInvestigation_IncurredChanged();
    partial void OnTotal_PaidChanging(System.Nullable<decimal> value);
    partial void OnTotal_PaidChanged();
    partial void OnIs_Time_LostChanging(System.Nullable<bool> value);
    partial void OnIs_Time_LostChanged();
    partial void OnDate_Claim_ClosedChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Claim_ClosedChanged();
    partial void OnDate_Claim_ReceivedChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Claim_ReceivedChanged();
    partial void OnDate_Claim_ReopenedChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Claim_ReopenedChanged();
    partial void OnResult_Of_Injury_CodeChanging(System.Nullable<int> value);
    partial void OnResult_Of_Injury_CodeChanged();
    partial void OnWPIChanging(System.Nullable<double> value);
    partial void OnWPIChanged();
    partial void OnCommon_LawChanging(System.Nullable<bool> value);
    partial void OnCommon_LawChanged();
    partial void OnTotal_RecoveriesChanging(System.Nullable<double> value);
    partial void OnTotal_RecoveriesChanged();
    partial void OnMed_Cert_StatusChanging(string value);
    partial void OnMed_Cert_StatusChanged();
    partial void OnIs_WorkingChanging(System.Nullable<bool> value);
    partial void OnIs_WorkingChanged();
    partial void OnPhysio_PaidChanging(System.Nullable<double> value);
    partial void OnPhysio_PaidChanged();
    partial void OnChiro_PaidChanging(System.Nullable<double> value);
    partial void OnChiro_PaidChanged();
    partial void OnMassage_PaidChanging(System.Nullable<double> value);
    partial void OnMassage_PaidChanged();
    partial void OnOsteopathy_PaidChanging(System.Nullable<double> value);
    partial void OnOsteopathy_PaidChanged();
    partial void OnAcupuncture_PaidChanging(System.Nullable<double> value);
    partial void OnAcupuncture_PaidChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnIs_StressChanging(System.Nullable<bool> value);
    partial void OnIs_StressChanged();
    partial void OnIs_Inactive_ClaimsChanging(System.Nullable<bool> value);
    partial void OnIs_Inactive_ClaimsChanged();
    partial void OnIs_Medically_DischargedChanging(System.Nullable<bool> value);
    partial void OnIs_Medically_DischargedChanged();
    partial void OnIs_ExemptChanging(System.Nullable<bool> value);
    partial void OnIs_ExemptChanged();
    partial void OnIs_ReactiveChanging(System.Nullable<bool> value);
    partial void OnIs_ReactiveChanged();
    #endregion
		
		public TMF_PortfolioDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team", DbType="VarChar(20)")]
		public string Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				if ((this._Team != value))
				{
					this.OnTeamChanging(value);
					this.SendPropertyChanging();
					this._Team = value;
					this.SendPropertyChanged("Team");
					this.OnTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Case_Manager", DbType="VarChar(81)")]
		public string Case_Manager
		{
			get
			{
				return this._Case_Manager;
			}
			set
			{
				if ((this._Case_Manager != value))
				{
					this.OnCase_ManagerChanging(value);
					this.SendPropertyChanging();
					this._Case_Manager = value;
					this.SendPropertyChanged("Case_Manager");
					this.OnCase_ManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agency_Id", DbType="VarChar(20)")]
		public string Agency_Id
		{
			get
			{
				return this._Agency_Id;
			}
			set
			{
				if ((this._Agency_Id != value))
				{
					this.OnAgency_IdChanging(value);
					this.SendPropertyChanging();
					this._Agency_Id = value;
					this.SendPropertyChanged("Agency_Id");
					this.OnAgency_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Policy_No", DbType="Char(19)")]
		public string Policy_No
		{
			get
			{
				return this._Policy_No;
			}
			set
			{
				if ((this._Policy_No != value))
				{
					this.OnPolicy_NoChanging(value);
					this.SendPropertyChanging();
					this._Policy_No = value;
					this.SendPropertyChanged("Policy_No");
					this.OnPolicy_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPL_SIZE", DbType="VarChar(256)")]
		public string EMPL_SIZE
		{
			get
			{
				return this._EMPL_SIZE;
			}
			set
			{
				if ((this._EMPL_SIZE != value))
				{
					this.OnEMPL_SIZEChanging(value);
					this.SendPropertyChanging();
					this._EMPL_SIZE = value;
					this.SendPropertyChanged("EMPL_SIZE");
					this.OnEMPL_SIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Manager", DbType="VarChar(256)")]
		public string Account_Manager
		{
			get
			{
				return this._Account_Manager;
			}
			set
			{
				if ((this._Account_Manager != value))
				{
					this.OnAccount_ManagerChanging(value);
					this.SendPropertyChanging();
					this._Account_Manager = value;
					this.SendPropertyChanged("Account_Manager");
					this.OnAccount_ManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portfolio", DbType="VarChar(256)")]
		public string Portfolio
		{
			get
			{
				return this._Portfolio;
			}
			set
			{
				if ((this._Portfolio != value))
				{
					this.OnPortfolioChanging(value);
					this.SendPropertyChanging();
					this._Portfolio = value;
					this.SendPropertyChanged("Portfolio");
					this.OnPortfolioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reporting_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Reporting_Date
		{
			get
			{
				return this._Reporting_Date;
			}
			set
			{
				if ((this._Reporting_Date != value))
				{
					this.OnReporting_DateChanging(value);
					this.SendPropertyChanging();
					this._Reporting_Date = value;
					this.SendPropertyChanged("Reporting_Date");
					this.OnReporting_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Open_Claim", DbType="NChar(1)", CanBeNull=false)]
		public string Claim_Closed_Flag
		{
			get
			{
				return this._Is_Open_Claim;
			}
			set
			{
				if ((this._Is_Open_Claim != value))
				{
					this.OnClaim_Closed_FlagChanging(value);
					this.SendPropertyChanging();
					this._Is_Open_Claim = value;
					this.SendPropertyChanged("Claim_Closed_Flag");
					this.OnClaim_Closed_FlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Claim_No", DbType="VarChar(19)")]
		public string Claim_No
		{
			get
			{
				return this._Claim_No;
			}
			set
			{
				if ((this._Claim_No != value))
				{
					this.OnClaim_NoChanging(value);
					this.SendPropertyChanging();
					this._Claim_No = value;
					this.SendPropertyChanged("Claim_No");
					this.OnClaim_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WIC_Code", DbType="VarChar(50)")]
		public string WIC_Code
		{
			get
			{
				return this._WIC_Code;
			}
			set
			{
				if ((this._WIC_Code != value))
				{
					this.OnWIC_CodeChanging(value);
					this.SendPropertyChanging();
					this._WIC_Code = value;
					this.SendPropertyChanged("WIC_Code");
					this.OnWIC_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Name", DbType="VarChar(256)")]
		public string Company_Name
		{
			get
			{
				return this._Company_Name;
			}
			set
			{
				if ((this._Company_Name != value))
				{
					this.OnCompany_NameChanging(value);
					this.SendPropertyChanging();
					this._Company_Name = value;
					this.SendPropertyChanged("Company_Name");
					this.OnCompany_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Current_Cost_Code", DbType="VarChar(256)")]
		public string Current_Cost_Code
		{
			get
			{
				return this._Current_Cost_Code;
			}
			set
			{
				if ((this._Current_Cost_Code != value))
				{
					this.OnCurrent_Cost_CodeChanging(value);
					this.SendPropertyChanging();
					this._Current_Cost_Code = value;
					this.SendPropertyChanged("Current_Cost_Code");
					this.OnCurrent_Cost_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Worker_Name", DbType="VarChar(256)")]
		public string Worker_Name
		{
			get
			{
				return this._Worker_Name;
			}
			set
			{
				if ((this._Worker_Name != value))
				{
					this.OnWorker_NameChanging(value);
					this.SendPropertyChanging();
					this._Worker_Name = value;
					this.SendPropertyChanged("Worker_Name");
					this.OnWorker_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_Number", DbType="VarChar(256)")]
		public string Employee_Number
		{
			get
			{
				return this._Employee_Number;
			}
			set
			{
				if ((this._Employee_Number != value))
				{
					this.OnEmployee_NumberChanging(value);
					this.SendPropertyChanging();
					this._Employee_Number = value;
					this.SendPropertyChanged("Employee_Number");
					this.OnEmployee_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Worker_Phone_Number", DbType="VarChar(256)")]
		public string Worker_Phone_Number
		{
			get
			{
				return this._Worker_Phone_Number;
			}
			set
			{
				if ((this._Worker_Phone_Number != value))
				{
					this.OnWorker_Phone_NumberChanging(value);
					this.SendPropertyChanging();
					this._Worker_Phone_Number = value;
					this.SendPropertyChanged("Worker_Phone_Number");
					this.OnWorker_Phone_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Claims_Officer_Name", DbType="VarChar(256)")]
		public string Claims_Officer_Name
		{
			get
			{
				return this._Claims_Officer_Name;
			}
			set
			{
				if ((this._Claims_Officer_Name != value))
				{
					this.OnClaims_Officer_NameChanging(value);
					this.SendPropertyChanging();
					this._Claims_Officer_Name = value;
					this.SendPropertyChanged("Claims_Officer_Name");
					this.OnClaims_Officer_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Of_Birth", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Of_Birth
		{
			get
			{
				return this._Date_Of_Birth;
			}
			set
			{
				if ((this._Date_Of_Birth != value))
				{
					this.OnDate_Of_BirthChanging(value);
					this.SendPropertyChanging();
					this._Date_Of_Birth = value;
					this.SendPropertyChanged("Date_Of_Birth");
					this.OnDate_Of_BirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Of_Injury", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Of_Injury
		{
			get
			{
				return this._Date_Of_Injury;
			}
			set
			{
				if ((this._Date_Of_Injury != value))
				{
					this.OnDate_Of_InjuryChanging(value);
					this.SendPropertyChanging();
					this._Date_Of_Injury = value;
					this.SendPropertyChanged("Date_Of_Injury");
					this.OnDate_Of_InjuryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Of_Notification", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Of_Notification
		{
			get
			{
				return this._Date_Of_Notification;
			}
			set
			{
				if ((this._Date_Of_Notification != value))
				{
					this.OnDate_Of_NotificationChanging(value);
					this.SendPropertyChanging();
					this._Date_Of_Notification = value;
					this.SendPropertyChanged("Date_Of_Notification");
					this.OnDate_Of_NotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notification_Lag", DbType="Int")]
		public System.Nullable<int> Notification_Lag
		{
			get
			{
				return this._Notification_Lag;
			}
			set
			{
				if ((this._Notification_Lag != value))
				{
					this.OnNotification_LagChanging(value);
					this.SendPropertyChanging();
					this._Notification_Lag = value;
					this.SendPropertyChanged("Notification_Lag");
					this.OnNotification_LagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entered_Lag", DbType="Int")]
		public System.Nullable<int> Entered_Lag
		{
			get
			{
				return this._Entered_Lag;
			}
			set
			{
				if ((this._Entered_Lag != value))
				{
					this.OnEntered_LagChanging(value);
					this.SendPropertyChanging();
					this._Entered_Lag = value;
					this.SendPropertyChanged("Entered_Lag");
					this.OnEntered_LagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Claim_Liability_Indicator_Group", DbType="VarChar(256)")]
		public string Claim_Liability_Indicator_Group
		{
			get
			{
				return this._Claim_Liability_Indicator_Group;
			}
			set
			{
				if ((this._Claim_Liability_Indicator_Group != value))
				{
					this.OnClaim_Liability_Indicator_GroupChanging(value);
					this.SendPropertyChanging();
					this._Claim_Liability_Indicator_Group = value;
					this.SendPropertyChanged("Claim_Liability_Indicator_Group");
					this.OnClaim_Liability_Indicator_GroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Investigation_Incurred", DbType="Money")]
		public System.Nullable<decimal> Investigation_Incurred
		{
			get
			{
				return this._Investigation_Incurred;
			}
			set
			{
				if ((this._Investigation_Incurred != value))
				{
					this.OnInvestigation_IncurredChanging(value);
					this.SendPropertyChanging();
					this._Investigation_Incurred = value;
					this.SendPropertyChanged("Investigation_Incurred");
					this.OnInvestigation_IncurredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Paid", DbType="Money")]
		public System.Nullable<decimal> Total_Paid
		{
			get
			{
				return this._Total_Paid;
			}
			set
			{
				if ((this._Total_Paid != value))
				{
					this.OnTotal_PaidChanging(value);
					this.SendPropertyChanging();
					this._Total_Paid = value;
					this.SendPropertyChanged("Total_Paid");
					this.OnTotal_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Time_Lost", DbType="Bit")]
		public System.Nullable<bool> Is_Time_Lost
		{
			get
			{
				return this._Is_Time_Lost;
			}
			set
			{
				if ((this._Is_Time_Lost != value))
				{
					this.OnIs_Time_LostChanging(value);
					this.SendPropertyChanging();
					this._Is_Time_Lost = value;
					this.SendPropertyChanged("Is_Time_Lost");
					this.OnIs_Time_LostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Claim_Closed", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Claim_Closed
		{
			get
			{
				return this._Date_Claim_Closed;
			}
			set
			{
				if ((this._Date_Claim_Closed != value))
				{
					this.OnDate_Claim_ClosedChanging(value);
					this.SendPropertyChanging();
					this._Date_Claim_Closed = value;
					this.SendPropertyChanged("Date_Claim_Closed");
					this.OnDate_Claim_ClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Claim_Received", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Claim_Received
		{
			get
			{
				return this._Date_Claim_Received;
			}
			set
			{
				if ((this._Date_Claim_Received != value))
				{
					this.OnDate_Claim_ReceivedChanging(value);
					this.SendPropertyChanging();
					this._Date_Claim_Received = value;
					this.SendPropertyChanged("Date_Claim_Received");
					this.OnDate_Claim_ReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Claim_Reopened", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Claim_Reopened
		{
			get
			{
				return this._Date_Claim_Reopened;
			}
			set
			{
				if ((this._Date_Claim_Reopened != value))
				{
					this.OnDate_Claim_ReopenedChanging(value);
					this.SendPropertyChanging();
					this._Date_Claim_Reopened = value;
					this.SendPropertyChanged("Date_Claim_Reopened");
					this.OnDate_Claim_ReopenedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result_Of_Injury_Code", DbType="Int")]
		public System.Nullable<int> Result_Of_Injury_Code
		{
			get
			{
				return this._Result_Of_Injury_Code;
			}
			set
			{
				if ((this._Result_Of_Injury_Code != value))
				{
					this.OnResult_Of_Injury_CodeChanging(value);
					this.SendPropertyChanging();
					this._Result_Of_Injury_Code = value;
					this.SendPropertyChanged("Result_Of_Injury_Code");
					this.OnResult_Of_Injury_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPI", DbType="Float")]
		public System.Nullable<double> WPI
		{
			get
			{
				return this._WPI;
			}
			set
			{
				if ((this._WPI != value))
				{
					this.OnWPIChanging(value);
					this.SendPropertyChanging();
					this._WPI = value;
					this.SendPropertyChanged("WPI");
					this.OnWPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Common_Law", DbType="Bit")]
		public System.Nullable<bool> Common_Law
		{
			get
			{
				return this._Common_Law;
			}
			set
			{
				if ((this._Common_Law != value))
				{
					this.OnCommon_LawChanging(value);
					this.SendPropertyChanging();
					this._Common_Law = value;
					this.SendPropertyChanged("Common_Law");
					this.OnCommon_LawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Recoveries", DbType="Float")]
		public System.Nullable<double> Total_Recoveries
		{
			get
			{
				return this._Total_Recoveries;
			}
			set
			{
				if ((this._Total_Recoveries != value))
				{
					this.OnTotal_RecoveriesChanging(value);
					this.SendPropertyChanging();
					this._Total_Recoveries = value;
					this.SendPropertyChanged("Total_Recoveries");
					this.OnTotal_RecoveriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Med_Cert_Status", DbType="VarChar(20)")]
		public string Med_Cert_Status
		{
			get
			{
				return this._Med_Cert_Status;
			}
			set
			{
				if ((this._Med_Cert_Status != value))
				{
					this.OnMed_Cert_StatusChanging(value);
					this.SendPropertyChanging();
					this._Med_Cert_Status = value;
					this.SendPropertyChanged("Med_Cert_Status");
					this.OnMed_Cert_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Working", DbType="Bit")]
		public System.Nullable<bool> Is_Working
		{
			get
			{
				return this._Is_Working;
			}
			set
			{
				if ((this._Is_Working != value))
				{
					this.OnIs_WorkingChanging(value);
					this.SendPropertyChanging();
					this._Is_Working = value;
					this.SendPropertyChanged("Is_Working");
					this.OnIs_WorkingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Physio_Paid", DbType="Float")]
		public System.Nullable<double> Physio_Paid
		{
			get
			{
				return this._Physio_Paid;
			}
			set
			{
				if ((this._Physio_Paid != value))
				{
					this.OnPhysio_PaidChanging(value);
					this.SendPropertyChanging();
					this._Physio_Paid = value;
					this.SendPropertyChanged("Physio_Paid");
					this.OnPhysio_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chiro_Paid", DbType="Float")]
		public System.Nullable<double> Chiro_Paid
		{
			get
			{
				return this._Chiro_Paid;
			}
			set
			{
				if ((this._Chiro_Paid != value))
				{
					this.OnChiro_PaidChanging(value);
					this.SendPropertyChanging();
					this._Chiro_Paid = value;
					this.SendPropertyChanged("Chiro_Paid");
					this.OnChiro_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Massage_Paid", DbType="Float")]
		public System.Nullable<double> Massage_Paid
		{
			get
			{
				return this._Massage_Paid;
			}
			set
			{
				if ((this._Massage_Paid != value))
				{
					this.OnMassage_PaidChanging(value);
					this.SendPropertyChanging();
					this._Massage_Paid = value;
					this.SendPropertyChanged("Massage_Paid");
					this.OnMassage_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Osteopathy_Paid", DbType="Float")]
		public System.Nullable<double> Osteopathy_Paid
		{
			get
			{
				return this._Osteopathy_Paid;
			}
			set
			{
				if ((this._Osteopathy_Paid != value))
				{
					this.OnOsteopathy_PaidChanging(value);
					this.SendPropertyChanging();
					this._Osteopathy_Paid = value;
					this.SendPropertyChanged("Osteopathy_Paid");
					this.OnOsteopathy_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acupuncture_Paid", DbType="Float")]
		public System.Nullable<double> Acupuncture_Paid
		{
			get
			{
				return this._Acupuncture_Paid;
			}
			set
			{
				if ((this._Acupuncture_Paid != value))
				{
					this.OnAcupuncture_PaidChanging(value);
					this.SendPropertyChanging();
					this._Acupuncture_Paid = value;
					this.SendPropertyChanged("Acupuncture_Paid");
					this.OnAcupuncture_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Stress", DbType="Bit")]
		public System.Nullable<bool> Is_Stress
		{
			get
			{
				return this._Is_Stress;
			}
			set
			{
				if ((this._Is_Stress != value))
				{
					this.OnIs_StressChanging(value);
					this.SendPropertyChanging();
					this._Is_Stress = value;
					this.SendPropertyChanged("Is_Stress");
					this.OnIs_StressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Inactive_Claims", DbType="Bit")]
		public System.Nullable<bool> Is_Inactive_Claims
		{
			get
			{
				return this._Is_Inactive_Claims;
			}
			set
			{
				if ((this._Is_Inactive_Claims != value))
				{
					this.OnIs_Inactive_ClaimsChanging(value);
					this.SendPropertyChanging();
					this._Is_Inactive_Claims = value;
					this.SendPropertyChanged("Is_Inactive_Claims");
					this.OnIs_Inactive_ClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Medically_Discharged", DbType="Bit")]
		public System.Nullable<bool> Is_Medically_Discharged
		{
			get
			{
				return this._Is_Medically_Discharged;
			}
			set
			{
				if ((this._Is_Medically_Discharged != value))
				{
					this.OnIs_Medically_DischargedChanging(value);
					this.SendPropertyChanging();
					this._Is_Medically_Discharged = value;
					this.SendPropertyChanged("Is_Medically_Discharged");
					this.OnIs_Medically_DischargedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Exempt", DbType="Bit")]
		public System.Nullable<bool> Is_Exempt
		{
			get
			{
				return this._Is_Exempt;
			}
			set
			{
				if ((this._Is_Exempt != value))
				{
					this.OnIs_ExemptChanging(value);
					this.SendPropertyChanging();
					this._Is_Exempt = value;
					this.SendPropertyChanged("Is_Exempt");
					this.OnIs_ExemptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Reactive", DbType="Bit")]
		public System.Nullable<bool> Is_Reactive
		{
			get
			{
				return this._Is_Reactive;
			}
			set
			{
				if ((this._Is_Reactive != value))
				{
					this.OnIs_ReactiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Reactive = value;
					this.SendPropertyChanged("Is_Reactive");
					this.OnIs_ReactiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dashboard_TimeAccess")]
	public partial class Dashboard_TimeAccessDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Url;
		
		private int _UserId;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Dashboard_TimeAccessDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(256)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TMF_Agencies_Sub_Category")]
	public partial class TMF_Agencies_Sub_CategoryDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AgencyId;
		
		private string _AgencyName;
		
		private string _Sub_Category;
		
		private string _POLICY_NO;
		
		private string _Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAgencyIdChanging(string value);
    partial void OnAgencyIdChanged();
    partial void OnAgencyNameChanging(string value);
    partial void OnAgencyNameChanged();
    partial void OnSub_CategoryChanging(string value);
    partial void OnSub_CategoryChanged();
    partial void OnPOLICY_NOChanging(string value);
    partial void OnPOLICY_NOChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    #endregion
		
		public TMF_Agencies_Sub_CategoryDO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyId", DbType="VarChar(20)")]
		public string AgencyId
		{
			get
			{
				return this._AgencyId;
			}
			set
			{
				if ((this._AgencyId != value))
				{
					this.OnAgencyIdChanging(value);
					this.SendPropertyChanging();
					this._AgencyId = value;
					this.SendPropertyChanged("AgencyId");
					this.OnAgencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyName", DbType="Char(20)")]
		public string AgencyName
		{
			get
			{
				return this._AgencyName;
			}
			set
			{
				if ((this._AgencyName != value))
				{
					this.OnAgencyNameChanging(value);
					this.SendPropertyChanging();
					this._AgencyName = value;
					this.SendPropertyChanged("AgencyName");
					this.OnAgencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sub_Category", DbType="VarChar(256)")]
		public string Sub_Category
		{
			get
			{
				return this._Sub_Category;
			}
			set
			{
				if ((this._Sub_Category != value))
				{
					this.OnSub_CategoryChanging(value);
					this.SendPropertyChanging();
					this._Sub_Category = value;
					this.SendPropertyChanged("Sub_Category");
					this.OnSub_CategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POLICY_NO", DbType="Char(19)")]
		public string POLICY_NO
		{
			get
			{
				return this._POLICY_NO;
			}
			set
			{
				if ((this._POLICY_NO != value))
				{
					this.OnPOLICY_NOChanging(value);
					this.SendPropertyChanging();
					this._POLICY_NO = value;
					this.SendPropertyChanged("POLICY_NO");
					this.OnPOLICY_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="VarChar(50)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
