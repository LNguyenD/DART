<?xml version="1.0" encoding="utf-8" ?>
<project name="EM_Report_DeployTMF" default="all" xmlns="http://nant.sf.net/release/0.91/nant.xsd">
  <property name="framework-get-assembly-directory" value="${framework::get-assembly-directory('net-4.0')}" />
  <property name="dotNetReferenceAssemblyPath" value="${framework-get-assembly-directory}\" />
  <property name="nant.settings.currentframework" value="net-4.0" />

  <property name="solution.configuration" value="Debug" overwrite="true" />

  <property name="solution.name" value="EM_Report"/>
  <property name="solution.Common.project.name" value="Common"/>
  <property name="solution.CustomSecurity.project.name" value="CustomSecurity"/>
  <property name="solution.EM_Report.Domain.project.name" value="EM_Report.Domain"/>
  <property name="solution.EM_Report.DAL.project.name" value="EM_Report.DAL"/>
  <property name="solution.EM_Report.BLL.project.name" value="EM_Report.BLL"/>
  <property name="solution.EM_Report.Service.project.name" value="EM_Report.Service"/>
  <property name="solution.EM_Report.Tests.project.name" value="EM_Report.Tests"/>
  <property name="solution.EM_Report.WCFServer.project.name" value="EM_Report.WCFServer"/>
  <property name="solution.EM_Report.project.name" value="EM_Report"/>
  <property name="solution.deploymentProject.name" value="${solution.EM_Report.project.name}"/>

  <property name="solution.EM_Report.WCFServer.credentials.name" value="credentials.config"/>

  <property name="iis.application.name" value="Default Web Site/emreportingTMF"/>
  <property name="TestConnectionString" value="Data Source=10.9.0.21;Initial Catalog=EM_Reporting;Persist Security Info=True;User ID=vnteam;Password=vnteam"/>
  <property name="DartConnectionString" value="m+X1KhqbXB0PXAuWTmawTjCRXGPSn4JRDO0NKznlvdjlwXUiJUvhqrXYi1Sea5ZMY9uuCIpqzn5kuyb9s0PwZc87h16Am7xPOT51rdgOEX1H6aOGKm+3RsG2yhamZd5LQianHptLt/riIFBH+S8dJw==#####"/>
  <property name="rsServer" value="https://aswvnsql01.aswigsyd.int/ReportServer"/>
  <property name="rsDomain" value="aswvnsql01.aswigsyd.int"/>
  <property name="informationTipBox.text" value="trunk build"/>

  <property name="deploymentPackages.directory.name" value="DeploymentPackages"/>
  <property name="deploymentPackages.directory.path" value="${path::get-full-path(deploymentPackages.directory.name)}"/>
  <property name="deploymentPackages.scriptFile.path" value="${deploymentPackages.directory.path}\_PublishedWebsites\${solution.deploymentProject.name}_Package\${solution.deploymentProject.name}.deploy.cmd"/>
  <property name="deploymentPackages.parameterFile.path" value="${deploymentPackages.directory.path}\_PublishedWebsites\${solution.deploymentProject.name}_Package\${solution.deploymentProject.name}.SetParameters.xml"/>

  <!-- a dummy test target -->
  <target name="dummy">
    <echo message="${project::get-name()} is located at: ${nant::get-base-directory()}"/>
    <echo message="${solution.name}.sln"/>
  </target>

	<target name="clean">
		<delete dir="${solution.Common.project.name}/bin" failonerror="true" />
		<delete dir="${solution.Common.project.name}/obj" failonerror="true" />

		<delete dir="${solution.CustomSecurity.project.name}/bin" failonerror="true" />
		<delete dir="${solution.CustomSecurity.project.name}/obj" failonerror="true" />

		<delete dir="${solution.EM_Report.project.name}/bin" failonerror="true" />
		<delete dir="${solution.EM_Report.project.name}/obj" failonerror="true" />

		<delete dir="${solution.EM_Report.BLL.project.name}/bin" failonerror="true" />
		<delete dir="${solution.EM_Report.BLL.project.name}/obj" failonerror="true" />

		<delete dir="${solution.EM_Report.DAL.project.name}/bin" failonerror="true" />
		<delete dir="${solution.EM_Report.DAL.project.name}/obj" failonerror="true" />

		<delete dir="${solution.EM_Report.Domain.project.name}/bin" failonerror="true" />
		<delete dir="${solution.EM_Report.Domain.project.name}/obj" failonerror="true" />

		<delete dir="${solution.EM_Report.Service.project.name}/bin" failonerror="true" />
		<delete dir="${solution.EM_Report.Service.project.name}/obj" failonerror="true" />

		<delete dir="${solution.EM_Report.Tests.project.name}/bin" failonerror="true" />
		<delete dir="${solution.EM_Report.Tests.project.name}/obj" failonerror="true" />

		<delete dir="${solution.EM_Report.WCFServer.project.name}/bin" failonerror="true" />
		<delete dir="${solution.EM_Report.WCFServer.project.name}/obj" failonerror="true" />
	</target>

  <target name="build" depends="clean">
    <xmlpoke file="${solution.EM_Report.WCFServer.project.name}/${solution.EM_Report.WCFServer.credentials.name}"
              xpath="/connectionStrings/add[@name = 'DartConnectionString']/@connectionString"
              value="${DartConnectionString}"/>
    <xmlpoke file="${solution.EM_Report.WCFServer.project.name}/web.config"
                 xpath="/configuration/appSettings/add[@key = 'ReportServerUrl']/@value"
                 value="${rsServer}"/>
    <xmlpoke file="${solution.EM_Report.WCFServer.project.name}/web.config"
                xpath="/configuration/appSettings/add[@key = 'ReportServerDomain']/@value"
                value="${rsDomain}"/>
    <!--<solution configuration="${solution.configuration}" solutionfile="${solution.name}.sln" />-->
    <msbuild target="build" project="${solution.name}.sln">
      <property name="configuration" value="${solution.configuration}"/>
      <property name="Platform" value="Any CPU"/>
    </msbuild>
  </target>

	<target name="runtest">
		<if test="${property::exists('solution.EM_Report.Tests.project.name') and string::trim(solution.EM_Report.Tests.project.name) != ''}">
			<!-- define connection string for nunit tests-->
			<xmlpoke file="${solution.EM_Report.Tests.project.name}/App.config"
                    xpath="/configuration/connectionStrings/add[@name = 'EM_ReportConnectionString']/@connectionString"
                    value="${DartConnectionString}"/>
			<copy file="${solution.EM_Report.Tests.project.name}/App.config" tofile="${solution.EM_Report.Tests.project.name}/${solution.EM_Report.Tests.project.name}.config"></copy>
			<!-- execute tests -->
			<exec program="nunit-console.exe">
				<arg file="${solution.EM_Report.Tests.project.name}/${solution.EM_Report.Tests.project.name}.csproj"/>
				<arg value="/config=${solution.configuration}"/>
			</exec>
		</if>
		<if test="${not (property::exists('solution.EM_Report.Tests.project.name') and string::trim(solution.EM_Report.Tests.project.name) != '') }">
			<echo message="no test case to execute"/>
		</if>
	</target>

	<target name="package">
    <!-- update connection string -->
	<xmlpoke file="${solution.EM_Report.WCFServer.project.name}/${solution.EM_Report.WCFServer.credentials.name}"
				xpath="/connectionStrings/add[@name = 'DartConnectionString']/@connectionString"
				value="${DartConnectionString}"/>
    <xmlpoke file="${solution.EM_Report.project.name}/web.config" xpath="/configuration/appSettings/add[@key = 'Site']/@value" value="TMF"/>
    
    <!-- delete deployment package directory -->
    <delete dir="${deploymentPackages.directory.name}"/>

    <!-- invoke msbuild -->
    <msbuild target="package" project="${solution.deploymentProject.name}/${solution.deploymentProject.name}.csproj">
      <property name="configuration" value="${solution.configuration}"/>
      <property name="outputpath" value="${deploymentPackages.directory.path}"/>
    </msbuild>

    <!-- define application name on IIS before deploying -->
    <xmlpoke file="${deploymentPackages.parameterFile.path}" xpath="/parameters/setParameter[@name = 'IIS Web Application Name']/@value" value="${iis.application.name}" />
  </target>

  <target name="deploy">
    <exec program="${deploymentPackages.scriptFile.path}">
      <!-- confirm deployment -->
      <arg value="/Y"/>
    </exec>
  </target>

  <target name="all" depends="build, runtest">
  </target>
</project>
