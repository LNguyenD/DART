@model List<EM_Report.Domain.Organisation_Levels>
@using EM_Report.Helpers;
@using EM_Report.Common.Utilities;
@using EM_Report.Domain;
@using EM_Report.Repositories;
@{
    ViewBag.Title = "Organisation Level";
    ViewBag.Heading = "Report >> Organisation Role Level List";
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Master.cshtml";
    var idx = 0;
    var idxC = 0;
}
<div id="organizationrole">
    <link href="@Url.ContentV("~/Css/report.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.ContentV("~/Css/level.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.ContentV("~/scripts/jquery.ui.core.js")") type="text/javascript"></script>
    <script src="@Url.ContentV("~/scripts/jquery.ui.widget.js")" type="text/javascript"></script>
    <script src="@Url.ContentV("~/scripts/jquery.ui.mouse.js")" type="text/javascript"></script>
    <script src="@Url.ContentV("~/scripts/jquery.ui.sortable.js")" type="text/javascript"></script>
    <script src="@Url.ContentV("~/scripts/jquery.ui.droppable.js")" type="text/javascript"></script>
    <script src="@Url.ContentV("~/scripts/jquery.ui.tabs.js")" type="text/javascript"></script>
    <div class="wrapper" id="tabs">
        <div class="w_100p">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="formWrap">
                    <h1>Organisation Level List</h1>
                    <br />
                    <ul class="BoxHeader level-list">
                        @{
                            var intSystemId = !string.IsNullOrEmpty(Request["systemid"]) ? int.Parse(Request["systemid"]) : 0;

                            if (intSystemId != 0)
                            {
                                var lstSystems = Base.LoginSession.lstSystems.ToList();
                                foreach (var system in lstSystems)
                                {
                                    if (system.SystemId == intSystemId)
                                    {                        
                                        <label>@(system.Name.ToUpper() == "HEM" ? "Hospitality" : system.Name.ToUpper() == "EML" ? "WCNSW" : system.Name.ToUpper())</label>
                                    }
                                }
                            }

                            foreach (var item in (IQueryable<Organisation_Levels>)ViewBag.LevelList)
                            {
                                string Name = "Level " + idx.ToString();
                                if (idx == 0)
                                {                     
                                    <li id="level-@(item.LevelId)" class="level-arrow-select-left"><a href="#tabs-@(idx)">@Name</a></li>
                                }
                                else if (idx == 1)
                                {                      
                                    <li id="level-@(item.LevelId)" class="level-arrow-select-right"><a href="#tabs-@(idx)">@Name</a></li>
                                }
                                else
                                {
                                    <li id="level-@(item.LevelId)" class="level-arrow"><a href="#tabs-@(idx)">@Name</a></li>
                                }
                                idx++;
                            }     
                        }
                        <li class="level-arrow-last" style="width: 0px!important; background-image: none!important">
                            <a style="cursor: default" href="#tabs-2"></a></li>
                    </ul>
                    @foreach (var item in (IQueryable<Organisation_Levels>)ViewBag.LevelList)
                    {
                        var lstRoleOfLevel = (new OrganisationRolesRepository()).GetRolesOfLevel(item.LevelId);
                        <div class="formWrap sortContent" id="tabs-@(idxC)">
                            <div class="level-role-title">
                                <a href="@Url.Action("details", "level", new { id = item.LevelId, systemid = Request["systemid"] })">@(item.Name + (item.Status == 1 ? "" : " (" + item.StatusName + ")"))</a>
                            </div>
                            <ul id="sortable@(idxC)" class="connectedSortable ui-helper-reset">
                                @foreach (var i in lstRoleOfLevel)
                                {
                                    <li id="role-@(i.Organisation_RoleId)" class="level-role">
                                        <a href="@Url.Action("details/" + i.Organisation_RoleId + "", "organisation", new { systemid = Request["systemid"] })">@(i.Name + (i.Status == 1 ? "" : " (" + i.StatusName + ")"))</a>
                                    </li>
                                }
                            </ul>
                        </div>
                        idxC++;
                    }
                    <br />
                    <div class="clear">
                    </div>
                    <div class="right">
                        @if (Login.AuthorizeSystemPermission(ResourcesHelper.System_Group, ResourcesHelper.Permission_Add))
                        {
                            <span class="btnPurple">
                                <input type="button" name="txtAddOrg" value="Add New Organisation" 
                                onclick="window.location = ('@Url.Action("details", "organisation", new { systemid = @intSystemId })')" /></span>
                        }
                        @if (Login.AuthorizeSystemPermission(ResourcesHelper.System_Group, ResourcesHelper.Permission_Add))
                        {
                            <span class="btnPurple">
                                <input type="button" name="txtAddLevel" value="Add New Level"
                                onclick="window.location = ('@Url.Action("details", "level", new { systemid = @intSystemId })')" /></span>
                        }
                    </div>
                    <div class="clear" style="z-index: 4290;"></div>
                </div>
            }
        </div>
    </div>
</div>
<script type="text/javascript">
    $(function () {
        $("#tabs").tabs().find(".ui-tabs-nav").sortable({
            items: "> li:not(:last)",
            stop: function (event, ui) {
                $.post("organisation_level",
                {
                    itype: "level"
                    , data: $('li[id*=level-]').map(function (index) { return this.id.replace("level-", "") + "|" + index; }).get().join(',')
                    , "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                }
                    , function (data) { });
                $("#" + $(".level-arrow-select-left").children("a").attr("href").replace("#", "")).removeClass().addClass("formWrap sortContent ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide");
                ResetSelectedTab(ui.item);
                $("#" + ui.item.children("a").attr("href").replace("#", "")).removeClass().addClass("formWrap sortContent ui-tabs-panel ui-widget-content ui-corner-bottom");
            }
        });
        $("ul[id*=sortable]").sortable().disableSelection();

        var $tabs = $("#tabs").tabs();

        var $tab_items = $("ul:first li", $tabs).droppable({
            accept: ".connectedSortable li",
            tolerance: "pointer",
            drop: function (event, ui) {
                var $item = $(this);
                var $list = $($item.find("a").attr("href"))
					.find(".connectedSortable");

                ui.draggable.hide("slow", function () {
                    $tabs.tabs("select", $tab_items.index($item));
                    $(this).appendTo($list).show("slow");
                });
                ResetSelectedTab($item);
                $.post("organisation_level", {
                    itype: "role",
                    systemId: $('#cboSystem').val()
                    , lid: $item.attr("id").replace("level-", "")
                    , rid: ui.draggable.attr("id").replace("role-", "")
                    , "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                });
            }
        });

        $('.level-list >li >a').not(':last').bind('click', function () {
            ResetSelectedTab($(this).parent());
        });
    });

    function ResetSelectedTab(el) {
        $('.level-arrow-select-left').removeClass().addClass("level-arrow ui-state-default ui-corner-top ui-droppable");
        $('.level-arrow-select-right').removeClass().addClass("level-arrow ui-state-default ui-corner-top ui-droppable");
        $(el).removeClass().addClass("level-arrow-select-left ui-state-default ui-corner-top ui-droppable");
        $(el).next().removeClass().addClass("level-arrow-select-right ui-state-default ui-corner-top ui-droppable");
    }
</script>
