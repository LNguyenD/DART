@using EM_Report.Helpers;
@using EM_Report.Domain.Resources;
@Html.AntiForgeryToken()

<script src="@Url.ContentV("~/Scripts/iCabinet.js")" type="text/javascript"></script>
@Html.Partial("~/Views/Report/FileCabinetWrap.cshtml")
<div class="boxBdr_tl_000">
    <div class="boxBdr_tr_000">
        <div class="boxBdr_bl_000">
            <div class="boxBdr_br_000">
                <div class="breadcrum_02" id="breadcrum_02ID">
                    <div id="guidebarbox" style="padding-top: 7px">
                        <a class="current" style="color: #FFF">Dashboard</a>
                        @if (ViewBag.HasLevel0 == true)
                        {
                            var strLevel0URL = "~/dashboard/level0?reportpath=/emreporting/reports/Level0";
                            <a href="@Base.AbsoluteUrl(strLevel0URL)">Executive
                                view</a>
                        }
                        @if (Base.GetController.ToLower() == "dashboard")
                        {
                            var STR_RTW = "Return to work";
                            var STR_AWC = "Active weekly claims";
                            var strRouteAction = Base.GetAction.ToLower();
                            var systemName = Base.GetSystemNameByUrl(Request.Url.PathAndQuery) == "EML" ? "WCNSW" : Base.GetSystemNameByUrl(Request.Url.PathAndQuery) == "HEM" ? "Hospitality"
                                              : Base.GetSystemNameByUrl(Request.Url.PathAndQuery);

                            if (strRouteAction.StartsWith("level"))
                            {
                                // extract System name from report path
                                var reportPath = Request["reportpath"];
                                var strReportName = reportPath.Substring(reportPath.LastIndexOf("/") + 1);
                                if (strReportName.IndexOf("_") >= 0)
                                {
                                    var strSystemName = strReportName.Substring(0, strReportName.IndexOf("_"));

                                    var strType = Request["Type"] ?? string.Empty;
                                    var strTypeCrumbtrail = (strType == "employer_size" ? "employer size" :
                                        (strType == "account_manager" ? "account manager" : strType));
                                    if (strType != string.Empty)
                                    {
                                        strType = strType.ToLower().Trim();
                                    }

                                    var strValue = Request["Value"] ?? string.Empty;
                                    if (strValue != string.Empty)
                                    {
                                        strValue = (strType != "account_manager" ? strValue.ToLower().Trim() : strValue.Trim());
                                        strValue = strValue.Replace("@@@", " & ").Replace("___", "?").ToLower().Trim();
                                    }

                                    var strSubValue = Request["SubValue"] ?? string.Empty;
                                    if (strSubValue != string.Empty)
                                    {
                                        strSubValue = strSubValue.Replace("@@@", "&").Replace("___", "?").ToLower().Trim();
                                    }

                                    var strMeasureRTW = Request["Measure"] ?? string.Empty;

                                    var strLevel1URL = "~/dashboard/level1?reportpath=/emreporting/reports/"
                                        + @strSystemName + "_Level1";
                                    var strLevelNoURL = string.Empty;
                                    if (strMeasureRTW != string.Empty)
                                    {
                                        // RTW Dashboard
                                        strLevelNoURL = "~/dashboard/level{0}?Type=" + strType + "&Measure=" + strMeasureRTW
                                            + "&reportpath=/emreporting/reports/" + strSystemName + "_rtw_level{0}";
                                    }
                                    else
                                    {
                                        var reportType = Request["ReportType"] ?? string.Empty;

                                        // AWC Dashboard
                                        strLevelNoURL = "~/dashboard/level{0}?Type=" + strType + "&ReportType=" + reportType
                                            + "&reportpath=/emreporting/reports/" + strSystemName + "_awc_level{0}";
                                    }

                                    var dashboardType = (strMeasureRTW != string.Empty ? STR_RTW : STR_AWC);

                                    var intLevel = 0;
                                    if (int.TryParse(strRouteAction.Substring(5), out intLevel))
                                    {
                                        if (intLevel == 1)
                                        {
                            <a class="current">Home</a>
                                        }
                                        else
                                        {
                            <a href="@Base.AbsoluteUrl(strLevel1URL)">Home</a>
                                            for (int i = 2; i <= intLevel; i++)
                                            {
                                                if (intLevel == 2)
                                                {
                                                    if (strMeasureRTW != string.Empty)
                                                    {
                            <a id="level2CrumbtrailsRTW" class="current">@(dashboardType + " comparison by " + strTypeCrumbtrail)</a>
                                                    }
                                                    else
                                                    {
                            <a id="level2CrumbtrailsAWC" class="current">@(dashboardType + " in " + systemName + " " + strTypeCrumbtrail + " view")</a>
                                                    }
                                                }
                                                else
                                                {
                                                    var _strLevelNoURL = strLevelNoURL;

                                                    if (i == 2)
                                                    {
                                                        if (strMeasureRTW != string.Empty)
                                                        {
                                                            // RTW Level 2
                                                            _strLevelNoURL += "&IsVisible=all";
                            <a href="@Base.AbsoluteUrl(string.Format(_strLevelNoURL, i))">@(dashboardType
                                 + " comparison by " + strTypeCrumbtrail)</a>
                                                        }
                                                        else
                                                        {
                                                            //AWC Level 2
                            <a href="@Base.AbsoluteUrl(string.Format(_strLevelNoURL, i))">@(dashboardType
                                                    + " in " + systemName + " " + strTypeCrumbtrail + " view ")</a>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        var strByClause = string.Empty;
                                                        var midleText = string.Empty;
                                                        _strLevelNoURL += "&Value=" + strValue;

                                                        if (i == 3)
                                                        {
                                                            strByClause += strTypeCrumbtrail + " " + strValue;
                                                            midleText = strMeasureRTW == string.Empty ? " detail for " : " detail by ";
                                                        }
                                                        else
                                                        {
                                                            if (i == 4 && strMeasureRTW == string.Empty)
                                                            {
                                                                _strLevelNoURL += "&SubValue=" + strSubValue;

                                                                // AWC Level 4
                                                                strByClause += String.Format((strType == "account_manager" || strType == "portfolio" ? "employer size {0}" : 
                                                                    strType == "agency" ? "subcategory {0}" : "team {0}"), strSubValue);
                                                                midleText = " detail for ";
                                                            }
                                                            else
                                                            {
                                                                _strLevelNoURL += "&SubValue=&IsVisible=all";

                                                                // RTW Level 4
                                                                strByClause = (strType == "account_manager" || strType == "portfolio" ? "employer size" : (strType == "employer_size" || strType == "agency") ? "subcategory" : "team");
                                                                midleText = " comparison by ";
                                                            }

                                                            if (i == 5)
                                                            {
                                                                strByClause = (strType == "account_manager" || strType == "portfolio" ? "employer size" : (strType == "employer_size" || strType == "agency") ? "subcategory" : "team") + " " + strSubValue;
                                                                midleText = strMeasureRTW == string.Empty ? "  " : " detail by ";
                                                            }
                                                        }

                                                        if (i == intLevel)
                                                        {
                            <a class="current">@(dashboardType + midleText + strByClause)</a>
                                                        }
                                                        else
                                                        {
                            <a href="@Base.AbsoluteUrl(string.Format(_strLevelNoURL, i))">@(dashboardType + midleText + strByClause)</a>
                                                        }
                                                    }
                                                }
                                            }

                                            // set look ahead URLs
                                            if (intLevel == 2 || intLevel == 3)
                                            {
                                                if (strMeasureRTW == string.Empty)
                                                {
                                                    if (intLevel == 2)
                                                    {
                            <a id="lookaheadLevel3CrumbtrailsAWC" class="lookahead">@(dashboardType + " detail for " + strTypeCrumbtrail)</a>
                                                    }
                                            
                            <a id="lookaheadLevel4CrumbtrailsAWC" class="lookahead">@(dashboardType + " " + ((strType == "account_manager" || strType == "portfolio") ? "detail for employer size" : (strType == "employer_size" || strType == "agency") ? "detail for subcategory" : "detail for team"))</a>
                                                }
                                                else
                                                {
                                                    if (intLevel == 2)
                                                    {
                            <a id="lookaheadLevel3Crumbtrails" class="lookahead">@(dashboardType + " detail by " + strTypeCrumbtrail)</a>
                            <a id="lookaheadLevel4Crumbtrails" class="lookahead">@(dashboardType + " comparison by " + ((strType == "account_manager" || strType == "portfolio") ? "employer size" : (strType == "employer_size" || strType == "agency") ? "subcategory" : "team"))</a>
                            <a id="lookaheadLevel5Crumbtrails" class="lookahead">@(dashboardType + " detail by " + ((strType == "account_manager" || strType == "portfolio") ? "employer size" : (strType == "employer_size" || strType == "agency") ? "subcategory" : "team"))</a>
                                                    }
                                                    else
                                                    {
                                                        // detect system Total and Grouping logic in level 3
                                                        if (strValue != systemName.ToLower() 
                                                            && strValue.ToLower() != "health & other"
                                                            && strValue.ToLower() != "police & fire"
                                                            && strValue.ToLower() != "hotel")
                                                        {
                            <a id="lookaheadLevel4Crumbtrails" class="lookahead">@(dashboardType + " comparison by " + ((strType == "account_manager" || strType == "portfolio") ? "employer size" : (strType == "employer_size" || strType == "agency") ? "subcategory" : "team"))</a>
                            <a id="lookaheadLevel5Crumbtrails" class="lookahead">@(dashboardType + " detail by " + ((strType == "account_manager" || strType == "portfolio") ? "employer size" : (strType == "employer_size" || strType == "agency") ? "subcategory" : "team"))</a>
                                                        }
                                                    }
                                                }
                                            }
                                            else if (intLevel == 4)
                                            {
                                                if (strMeasureRTW != string.Empty)
                                                {
                            <a class="lookahead">@(dashboardType + " detail by " + ((strType == "account_manager" || strType == "portfolio") ? "employer size" : (strType == "employer_size" || strType == "agency") ? "subcategory" : "team"))</a>
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    </div>
                    <div class="right" id="showBM" style="width: 278px;">
                        @if ("level0,level1,level2,level3".Contains(Base.GetAction.ToLower()) || ("level4".Contains(Base.GetAction.ToLower()) && Request["reportpath"] != null && Request["reportpath"].ToLower().IndexOf("_rtw_") >= 0))
                        {
                            if (!(Base.GetAction.ToLower() == "level3" && Request["Type"].ToLower() == "group" && Request["reportpath"].ToLower().IndexOf("tmf") >= 0))
                            {
                            <a style="cursor: pointer;" class="trafficIcon">Show traffic light</a>
                            }
                        }
                        <a style="cursor: pointer;" class="bookmark">@Resource.Show_Bookmark</a>
                        @Html.Action("Details", "Dashboard_Favour")
                        @{
                            var strRouteAction2 = Base.GetAction.ToLower();
                            if (strRouteAction2.StartsWith("level"))
                            {
                                var intLevel = 0;
                                if (int.TryParse(strRouteAction2.Substring(5), out intLevel))
                                {
                                    if (intLevel != 0)
                                    {
                                        // extract System name from report path
                                        var reportPath = Request["reportpath"];
                                        var strReportName = reportPath.Substring(reportPath.LastIndexOf("/") + 1);
                                        if (strReportName.IndexOf("_") >= 0)
                                        {
                                            var strSystemName = strReportName.Substring(0, strReportName.IndexOf("_")).ToLower();
                                            
                                            var strMeasureRTW = Request["Measure"] ?? string.Empty;
                                            var strDashboard = (strMeasureRTW != string.Empty ? "rtw" : "awc");

                                            var strType = Request["Type"] ?? string.Empty;
                                            if (strType != string.Empty)
                                            {
                                                strType = strType.ToLower().Trim();
                                            }

                                            var strValue = Request["Value"] ?? string.Empty;
                                            if (strValue != string.Empty)
                                            {
                                                strValue = (strType != "account_manager" ? strValue.Trim() : strValue.Trim());
                                                strValue = strValue.Replace("@@@", " & ").Replace("___", "?").Trim();
                                            }

                                            var strSubValue = Request["SubValue"] ?? string.Empty;
                                            if (strSubValue != string.Empty)
                                            {
                                                strSubValue = strSubValue.Replace("@@@", "&").Replace("___", "?").Trim();
                                            }

                                            if (intLevel == 1)
                                            {
                                                // set default type for each systems
                                                var defaultType = string.Empty;

                                                if (strSystemName == "tmf")
                                                {
                                                    defaultType = "agency";
                                                }
                                                else if (strSystemName == "eml")
                                                {
                                                    defaultType = "employer_size";
                                                }
                                                else if (strSystemName == "hem")
                                                {
                                                    defaultType = "portfolio";
                                                }
                                                strType = defaultType;
                                            }
                                            <input type="hidden" id="hddSystem" name="hddSystem" value="@strSystemName" />
                                            <input type="hidden" id="hddDashboard" name="hddDashboard" value="@strDashboard" />
                                            <input type="hidden" id="hddDashboardLevel" name="hddDashboardLevel" value="@intLevel" />
                                            <input type="hidden" id="hddDashboardType" name="hddDashboardType" value="@strType" />
                                            <input type="hidden" id="hddDashboardValue" name="hddDashboardValue" value="@strValue" />
                                            <input type="hidden" id="hddDashboardSubValue" name="hddDashboardSubValue" value="@strSubValue"/>
                                            <a id="portfolioURLCrumbtrails" style="cursor: pointer;" class="file-cabinet" title="Open file cabinet"></a>
                                        }
                                    }
                                }
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*Adjust the guidebar to Center *@
<script type="text/javascript" language="javascript">
    $(document).ready(function () {

        var systemName = $('#wrapper .breadcrum_01 a:eq(0)').html().trim();

        $('a#portfolioURLCrumbtrails').click(function () {
            openCabinetPopup();
        });

        //hide guide bar look ahead in level 3 _ group
        if ((document.URL.toLowerCase().indexOf("tmf") >= 0 && document.URL.toLowerCase().indexOf("_level3") >= 0 ||
            //hide guide bar look ahead in level 2 group
            (document.URL.toLowerCase().indexOf("tmf") >= 0 && document.URL.toLowerCase().indexOf("_level2") >= 0
            && $("#tab_group").hasClass("tab_current")))
            && document.URL.toLowerCase().indexOf("type=group") >= 0) {
            $("#lookaheadLevel4Crumbtrails").hide();
            $("#lookaheadLevel5Crumbtrails").hide();
            $("#lookaheadLevel4CrumbtrailsAWC").hide();
        }

        //hide EML RTW L4,5 on guidebar if click WCNSW on EML RTW L2 account manager
        if (document.URL.indexOf("EML_rtw_level3&Value=WCNSW&Type=account_manager") >= 0
             || document.URL.indexOf("HEM_rtw_level3&Value=HOSPITALITY&Type=account_manager") >= 0) {
            $("#lookaheadLevel4Crumbtrails").hide();
            $("#lookaheadLevel5Crumbtrails").hide();
        }

        //hide guidebar look ahead level 4,5 for employer size or account manager
        if (systemName == "WCNSW") {
            if ((document.URL.toLowerCase().indexOf("_level3") >= 0 ||
                (document.URL.toLowerCase().indexOf("_level2") >= 0 && $("#tab_agencies").hasClass("tab_current")))
                && document.URL.toLowerCase().indexOf("type=employer_size") >= 0) {
                $("#lookaheadLevel4Crumbtrails").hide();
                $("#lookaheadLevel5Crumbtrails").hide();
                $("#lookaheadLevel4CrumbtrailsAWC").hide();
            }
        }

        var strValue = getParameterByName("Value").toLowerCase();
        var strReportPath = getParameterByName("reportpath").toLowerCase();
        var strType = getParameterByName("Type").toLowerCase();
      
        if (strReportPath.indexOf("_level3") >= 0
            && strValue.indexOf("police") >= 0 && strValue.indexOf("fire") >= 0
            || strValue.indexOf("health") >= 0 && strValue.indexOf("other") >= 0
            || strValue == "hotel") {
            $("#lookaheadLevel4Crumbtrails").hide();
            $("#lookaheadLevel5Crumbtrails").hide();
            $("#lookaheadLevel4CrumbtrailsAWC").hide();
        }

        //hide level 4, 5 on the guidebar for HEM-group
        if (strReportPath.indexOf("hem_") >= 0 && strType == "group" && (strReportPath.indexOf("level3") >= 0 || strReportPath.indexOf("level2") >= 0)) {
            $("#lookaheadLevel4Crumbtrails").hide();
            $("#lookaheadLevel5Crumbtrails").hide();
            $("#lookaheadLevel4CrumbtrailsAWC").hide();
        }

        // remove style for portfolio button in level 0
        if (strReportPath.indexOf("level0") >= 0) {
            $("#showBM").removeAttr("style");
        }

        // don't have "Show traffic light" icon: reset showBM width
        if ($(".trafficIcon").html() == null) {
            $("#showBM").css("width", "140px");
        }

        adjustGuideBar();
    });

    $(window).resize(function () {
        adjustGuideBar()
    });

    function getParameterByName(key) {
        if (key != null) {
            key = key.replace(/[*+?^$.\[\]{}()|\\\/]/g, "\\$&"); // escape RegEx meta chars
            var match = location.search.match(new RegExp("[?&]" + key + "=([^&]+)(&|$)"));

            if (match != null)
                return match && decodeURIComponent(match[1].replace(/\+/g, " "));
        }

        return "";
    }

    function adjustGuideBar() {
        if ($('#showBM').width() > 180) {
            $('#guidebarbox').width($('#breadcrum_02ID').width() - 300);
        } else {
            $('#guidebarbox').width($('#breadcrum_02ID').width() - 140);
        }

        if ($('#guidebarbox').height() > 20) {
            if ($.browser.msie) {
                if ($.browser.version.substr(0, 1) < 8) {
                    // IE 7 and smaller version
                    $('#showBM').css('margin-top', '-28px');
                }
                else {
                    // IE and greater than 7 version
                    $('#showBM').css('margin-top', '-28px');
                }
            }
            else {
                $('#showBM').css('margin-top', '-28px');
            }
        }
        else {
            $('#showBM').css('margin-top', '-20px');
        }
    }
</script>