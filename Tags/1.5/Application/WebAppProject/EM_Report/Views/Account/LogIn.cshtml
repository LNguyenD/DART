@using EM_Report.Domain.Enums;
@using EM_Report.Helpers;
@model EM_Report.Domain.LogIn
@{    
    Layout = null;
    ViewBag.Title = "Sign In";
}
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=11; IE=10; IE=9; IE=8; IE=7; IE=EDGE" />
    <title>Sign In</title>

    <script src="@Url.ContentV("~/scripts/jquery-1.7.2.min.js")" type="text/javascript"></script>
    <script src="@Url.ContentV("~/scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.ContentV("~/scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script language="javascript" type="text/javascript">
        $(document).ready(function () {
            $('input:text:visible:first').focus();
            $('input').keypress(function (e) {
                if (e.which == 13) {
                    $('form').submit();
                }
            });
        });

        $(function () {
            if ($.browser.msie && $.browser.version.substr(0, 1) < 7) {
                $('li').has('ul').mouseover(function () {
                    $(this).children('ul').show("slow");
                }).mouseout(function () {
                    $(this).children('ul').hide();
                })
            }

            //Assign to those input elements that have 'placeholder' attribute
            if ($.browser.msie) {
                $('input[placeholder]').each(function () {
                    var input = $(this);

                    $(input).val(input.attr('placeholder'));

                    $(input).focus(function () {
                        if (input.val() == input.attr('placeholder')) {
                            input.val('');
                        }
                    });

                    $(input).blur(function () {
                        if (input.val() == '' || input.val() == input.attr('placeholder')) {
                            input.val(input.attr('placeholder'));
                        }
                    });
                });
            };

        });
    </script>
    <link href="@Url.ContentV("~/css/main.css")" rel="stylesheet" type="text/css" media="screen" />
    <link href="@Url.ContentV("~/css/custom_main.css")" rel="stylesheet" type="text/css" media="screen" />
</head>
<body>
    <div class="signIn">
        <div class="signInWrap">
            <div class="signInFormContainer">
                <div class="logos">
                    <div class="logo">
                        <img src="@Url.ContentV("~/images/logo_DART.png")" alt="" title="" /></div>
                    <div class="logoSub">
                        <a href="https://www.employersmutual.com.au/‎">
                            <img src="@Url.ContentV("~/images/logo_EMP.png")" alt="" title="" /></a></div>
                    <div class="clear">
                    </div>
                </div>
                @using (Html.BeginForm("login", "account", FormMethod.Post, new { id = "frmLogin" }))
                {
                    if (ViewData.ModelState["Error"] != null)
                    {
                        <div style="width: 350px">
                            <span class="error"><strong>Error </strong>- @ViewData.ModelState["Error"].Errors[0].ErrorMessage</span>
                        </div>
                    }
                    
                    @Html.AntiForgeryToken()
                    <div class="signInForm">
                        @switch (Base.LoginType)
                        {
                            case LoginType.External:
                            @Html.TextBoxFor(m => m.Email, new { id = "txtUserName", @class = "username", placeholder = "Username" });
                            @Html.ValidationMessageFor(m => m.Email);
                                                                    break;
                            case LoginType.Internal:
                            @Html.TextBoxFor(m => m.Username, new { id = "txtUserName", @class = "username", placeholder = "Username" });
                            @Html.ValidationMessageFor(m => m.Username);
                                                                       break;
                        }
                        @Html.PasswordFor(m => m.Password, new { id = "txtPassword", @class = "password", placeholder = "Password" })
                        @Html.ValidationMessageFor(m => m.Password)
                        <p>
                            <label>
                                <span>Remember me:</span>
                            </label>
                            @Html.CheckBoxFor(m => m.Is_RememberMe, new { id = "chkRememberMe", @class = "rememberme" })</p>
                        <div class="breakLine">
                        </div>
                        <span class="btn">
                            <input type="button" value="Sign In" onclick="$('form').submit();" /></span>
                        @if (Base.LoginType == LoginType.External)
                        {
                            <a href="@Base.AbsoluteUrl("~/account/resetpassword")">Lost Your Password?</a>
                        }
                        <div class="clear">
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</body>
</html>
