@model EM_Report.Domain.User
@using System.Text;
@using System.Collections;
@using EM_Report.Domain;
@{
    ViewBag.Title = "User";
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Master.cshtml";
}
<script src="@Url.ContentV("~/scripts/iReport.js")" type="text/javascript"></script>
<style>
    #divReportUser .sbHolder, #divReportUser .sbOptions {
        width: 200px;
    }

    #divInternalUser .sbHolder, #divInternalUser .sbOptions {
        /*width: 200px;*/
        width:185px;
    }

    #divExternalUser .sbHolder, #divExternalUser .sbOptions {
        width: 200px;     
    }
</style>
<div class="wrapper">
    <div class="w_100p">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="formWrap">
                @if (Model != null)
                {
                    @Html.HiddenFor(e => e.UserId)                    
                }
                <h1>@((Model != null && Model.UserId > 0) ? "Edit User" : "Add User")</h1>
                @Html.Partial("_ShowMessage")
                <div class="formInline">
                    <label>User Name</label>
                    @Html.TextBoxFor(m => m.UserName, new { id = "txtUserName", @class = "Text" })
                    @Html.ValidationMessageFor(m => m.UserName)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>Password</label>
                    @Html.PasswordFor(m => m.Password, new { id = "txtPassword", @class = "Text", @value = Model != null ? Model.Password : "" })
                    @Html.ValidationMessageFor(m => m.Password)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>Confirm Password</label>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { id = "txtConfirmPassword", @class = "Text", @value = Model != null ? Model.Password : "" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>First Name</label>
                    @Html.TextBoxFor(m => m.FirstName, new { id = "txtFirstName", @class = "Text" })
                    @Html.ValidationMessageFor(m => m.FirstName)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>Last Name</label>
                    @Html.TextBoxFor(m => m.LastName, new { id = "txtLastName", @class = "Text" })
                    @Html.ValidationMessageFor(m => m.LastName)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>Email</label>
                    @Html.TextBoxFor(m => m.Email, new { id = "txtEmail", @class = "Text" })
                    @Html.ValidationMessageFor(m => m.Email)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>Phone</label>
                    @Html.TextBoxFor(m => m.Phone, new { id = "txtPhone", @class = "Text" })
                    @Html.ValidationMessageFor(m => m.Phone)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>Address</label>
                    @Html.TextBoxFor(m => m.Address, new { id = "txtAddress", @class = "Text" })
                    @Html.ValidationMessageFor(m => m.Address)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>
                        Status</label>
                    @Html.DropDownListFor(m => m.Status, (SelectList)ViewBag.cboStatus, new { id = "cboStatus" })
                    @Html.ValidationMessageFor(m => m.Status)
                </div>
                <div class="clear">
                </div>
                @*---User Permission---*@
                <div class="formInline">
                    <label for="txtAddress">
                        User Type</label>
                    <table cellspacing="0" cellpadding="0" border="0">
                        <tr>
                            @if (Model != null && Model.UserId > 0)
                            {
                                if (Model.Is_External_User)
                                {
                                <td>
                                    @Html.RadioButtonFor(m => m.Is_External_User, false, new { id = "radioInternalUser", @onclick = "showInternalUserSection();" })
                                    <span>Internal User</span>
                                </td>
                                <td>
                                    @Html.RadioButtonFor(m => m.Is_External_User, true, new { id = "radioExternalUser", @checked = true, @onclick = "showExternalUserSection();" })
                                    <span>External User</span>
                                </td>
                                }
                                else
                                {
                                <td>
                                    @Html.RadioButtonFor(m => m.Is_External_User, false, new { id = "radioInternalUser", @checked = true, @onclick = "showInternalUserSection();" })
                                    <span>Internal User</span>
                                </td>
                                <td>
                                    @Html.RadioButtonFor(m => m.Is_External_User, true, new { id = "radioExternalUser", @onclick = "showExternalUserSection();" })
                                    <span>External User</span>
                                </td>
                                }
                            }
                            else
                            {
                                <td>
                                    @Html.RadioButtonFor(m => m.Is_External_User, false, new { id = "radioInternalUser", @checked = true, @onclick = "showInternalUserSection();" })
                                    <span>Internal User</span>
                                </td>
                                <td>
                                    @Html.RadioButtonFor(m => m.Is_External_User, true, new { id = "radioExternalUser", @onclick = "showExternalUserSection();" })
                                    <span>External User</span>
                                </td>
                            }
                        </tr>
                    </table>

                    <div id="divInternalUser">

                        @if (Model != null && Model.UserId > 0)
                        {
                            <label>&nbsp;</label>
                            <div style="margin-left: 250px">
                                @Html.RadioButtonFor(m => m.Is_System_User, true, new { id = "radioSystemUser", @checked = true, @onclick = "ShowSystemRole(this);" })
                                <span>System User</span>
                                @Html.RadioButtonFor(m => m.Is_System_User, false, new { id = "radioReportUser", @onclick = "hiddenSystemRole(this);" })
                                <span>Report User</span>
                            </div>

                            if (Model.Is_System_User)
                            {
                                <div class="formInline" style="display: block" id="cmdSave_SystemRoles">
                                    <label style="margin-left: 150px">System Role</label>
                                    @Html.DropDownListFor(m => m.System_RoleId, (SelectList)ViewBag.System_Roles, new { id = "cboSystem_Roles" })
                                </div>
                                <div class="clear">
                                </div>
                            }
                            else
                            {
                                <div class="formInline" style="display: none" id="cmdSave_SystemRoles2">
                                    <label style ="margin-left: 150px">System Role</label>
                                    @Html.DropDownListFor(m => m.System_RoleId, (SelectList)ViewBag.System_Roles, new { id = "cboSystem_Roles" })
                                </div>
                                <div class="clear">
                                </div>
                            }
                        }
                        else
                        {
                            <label>&nbsp;</label>
                            <div style="margin-left: 250px">
                                @Html.RadioButtonFor(m => m.Is_System_User, true, new { id = "radioSystemUser", @checked = true, @onclick = "ShowSystemRole(this);" })
                                <span>System User</span>
                                @Html.RadioButtonFor(m => m.Is_System_User, false, new { id = "radioReportUser", @onclick = "hiddenSystemRole(this);" })
                                <span>Report User</span>
                            </div>

                            <div class="formInline" style="display: block" id="cmdSave_SystemRoles2">
                                <label style ="margin-left: 150px">System Role</label>
                                @Html.DropDownListFor(m => m.System_RoleId, (SelectList)ViewBag.System_Roles, new { id = "cboSystem_Roles" })
                            </div>
                            <div class="clear">
                            </div>
                        }

                        <div id="divReportUser" style="padding: 0px 0px 20px -30px; margin-left: 130px">
                            <span style="display: none; color: Red; margin-left: 163px" id="msgIsRoleSelected">
                                *
                                You must select at least 1 Organisation Role
                            </span>
                            @{
                                    foreach (var s in (Systems[])ViewBag.Systems)
                                    {


                                        var roleList = (from p in (List<Organisation_Roles>)ViewBag.Organisations
                                                        join q in (List<Organisation_Levels>)ViewBag.Levels on p.LevelId equals q.LevelId into temp1
                                                        from q in temp1.DefaultIfEmpty()
                                                        where q.SystemId == s.SystemId
                                                        orderby p.Name
                                                        select new { p.Organisation_RoleId, p.Name, p.LevelId }).ToList();

                                        roleList.Insert(0, new { Organisation_RoleId = 0, Name = "--Select--", LevelId = 0 });
                                        var strRole = roleList.Select(o => "{&quot;Organisation_RoleId&quot;:" + o.Organisation_RoleId + ",&quot;Name&quot;:&quot;" + o.Name + "&quot;}");
                            <input type='hidden' value='@("[" + string.Join(",", strRole) + "]")' id='@("hddRoles_" + s.SystemId)' />

                                        var teamList = (from p in (List<Team>)ViewBag.Teams
                                                        where p.SystemId == s.SystemId
                                                        orderby p.Name
                                                        select new { p.TeamId, p.Name }).ToList();

                                        teamList.Insert(0, new { TeamId = 0, Name = "--Select--" });

                                        var strTeam = teamList.Select(o => "{&quot;TeamId&quot;:" + o.TeamId + ",&quot;Name&quot;:&quot;" + o.Name + "&quot;}");
                            <input type='hidden' value='@("[" + string.Join(",", strTeam) + "]")' id='@("hddTeams_" + s.SystemId)' />

                                        if ((Model == null || Model.UserId <= 0))
                                        {
                            <div class="formInline" style="margin-left: 120px; padding-top: 5px;">
                                <label style="width: 180px;">@(s.Name == "HEM" ? "Hospitality" : s.Name == "EML" ? "WCNSW" : s.Name) >> Organisation Role</label>
                                @Html.DropDownList("cboOrganisation_Roles_" + s.Name, new SelectList((IEnumerable)roleList,
                                                                                            "Organisation_RoleId", "Name", ViewData["cboOrganisation_Roles_" + s.Name]),
                                                                                            new { id = "cboOrganisation_Roles_" + s.Name, @name = "cboOrganisation_Roles_" + s.Name, @onchange = "checkIsOrgRole(this)" })
                                <label style="width: 80px!important; margin-left: -20px;"> >> Team</label>
                                @Html.DropDownList("cboTeams_" + s.Name, new SelectList((IEnumerable)teamList,
                                                                                            "TeamId", "Name", ViewData["cboTeams_" + s.Name]),
                                                                                            new { id = "cboTeams_" + s.Name, @name = "cboTeams_" + s.Name })
                            </div>
                            <div class="clear"></div>
                                        }
                                        else if (Model != null && Model.UserId > 0)
                                        {
                                            var systemDetail = from p in roleList
                                                               join q in (List<Organisation_Levels>)ViewBag.Levels on p.LevelId equals q.LevelId into temp1
                                                               from q in temp1.DefaultIfEmpty()
                                                               select new { q.SystemId };

                            <div class="formInline" style="margin-left: 120px; padding-top: 5px;">
                                <label style="width: 180px;">@(s.Name == "HEM" ? "Hospitality" : s.Name == "EML" ? "WCNSW" : s.Name) >> Organisation Role</label>
                                @Html.DropDownList("cboOrganisation_Roles_" + s.Name,
                                                                                            new SelectList((IEnumerable)roleList, "Organisation_RoleId", "Name", ViewData["cboOrganisation_Roles_" + s.Name]),
                                                                                            new { id = "cboOrganisation_Roles_" + s.Name, @name = "cboOrganisation_Roles_" + s.Name, @onchange = "checkIsOrgRole(this)" })
                                <label style="width: 80px!important; margin-left: -20px;"> >> Team</label>
                                @Html.DropDownList("cboTeams_" + s.Name,
                                                                                            new SelectList((IEnumerable)teamList, "TeamId", "Name", ViewData["cboTeams_" + s.Name]),
                                                                                            new { id = "cboTeams_" + s.Name, @name = "cboTeams_" + s.Name })
                            </div>
                            <div class="clear"></div>
                                        }
                                    }
                            }
                        </div>

                    </div>

                    <div id="divExternalUser" style="margin-top: 5px; margin-left: 130px">
                        @*@Html.DropDownListFor(m => m.External_GroupId, new SelectList((IEnumerable)ViewBag.External_Groups, "External_GroupId", "Name"), "--Select--", new { id = "cboExternal_Groups", @name = "cboExternal_Groups", @onchange = "checkIsExtGroup(this)" })*@
                        <span style="display: none; color: Red; margin-left: 163px" id="msgIsRoleSelected">
                            *
                            You must select at least 1 Organisation Role
                        </span>
                        @{
                        foreach (var s in (Systems[])ViewBag.Systems)
                        {
                            var extList = (from p in (List<External_Group>)ViewBag.External_Groups
                                            where p.SystemId == s.SystemId
                                            select new { p.External_GroupId, p.Name}).ToList();

                            extList.Insert(0, new { External_GroupId = 0, Name = "--Select--" });
                            var strRole = extList.Select(o => "{&quot;External Group&quot;:" + o.External_GroupId + ",&quot;Name&quot;:&quot;" + o.Name + "&quot;}");
                            <input type='hidden' value='@("[" + string.Join(",", strRole) + "]")' id='@("hddRoles_" + s.SystemId)' />

                            if ((Model == null || Model.UserId <= 0))
                            {
                                <div class="formInline" style="margin-left: 120px; padding-top: 5px;">
                                    <label style="width: 180px;">@(s.Name == "HEM" ? "Hospitality" : s.Name == "EML" ? "WCNSW" : s.Name) >> External Group</label>
                                    @Html.DropDownList("cboExternal_Group_" + s.Name, new SelectList((IEnumerable)extList,
                                                                                                          "External_GroupId", "Name", ViewData["cboExternal_Group_" + s.Name]),
                                                                                                            new { id = "cboExternal_Group_" + s.Name, @name = "cboExternal_Group_" + s.Name, @onchange = "checkIsOrgRole(this)" })
                                </div>
                                <div class="clear"></div>
                            }
                            else if (Model != null && Model.UserId > 0)
                            {
                                <div class="formInline" style="margin-left: 120px; padding-top: 5px;">
                                    <label style="width: 180px;">@(s.Name == "HEM" ? "Hospitality" : s.Name == "EML" ? "WCNSW" : s.Name) >> External Group</label>
                                    @Html.DropDownList("cboExternal_Group_" + s.Name, new SelectList((IEnumerable)extList, "External_GroupId", "Name", ViewData["cboExternal_Group_" + s.Name]),
                                                                                                         new { id = "cboExternal_Group_" + s.Name, @name = "cboExternal_Group_" + s.Name, @onchange = "checkIsOrgRole(this)" })
                                </div>
                                <div class="clear"></div>
                            }
                        }
                        }

                    </div>                 
                </div>
                <div class="clear">
                </div>
                
                
                <div class="formInline">
                    <label>Default System</label>
                    @Html.DropDownListFor(m => m.Default_System_Id, (SelectList)ViewBag.DefaultSystemId, new { id = "cboDefaultSystemId" })
                    @Html.ValidationMessageFor(m => m.Default_System_Id)
                </div>
                <div class="clear">
                </div>
                @*---User History Informations---*@
                @if (Model != null && Model.UserId > 0)
                {
                    <div class="formInline">
                        <label>Last Online Login Date</label>
                        @Html.TextBoxFor(m => m.Last_Online_Login_Date, new { @class = "Text Disabled", @readonly = true })
                    </div>
                    <div class="clear">
                    </div>
                    <div class="formInline">
                        <label>Online No Of Login Attempts</label>
                        @Html.TextBoxFor(m => m.Online_No_Of_Login_Attempts, new { @class = "Text Disabled", @readonly = true })
                    </div>
                    <div class="clear">
                    </div>
                    <div class="formInline">
                        <label>Online Locked Until Datetime</label>
                        @Html.TextBoxFor(m => m.Online_Locked_Until_Datetime, new { @class = "Text Disabled", @readonly = true })
                    </div>
                    <div class="clear">
                    </div>
                    <div class="formInline">
                        <label>Created Date</label>
                        @Html.TextBoxFor(m => m.Create_Date, "{0:dd/MM/yyyy}", new { @class = "Text Disabled", @readonly = true })
                    </div>
                    <div class="clear">
                    </div>
                    <div class="formInline">
                        <label>Created By</label>
                        @Html.TextBoxFor(m => m.OwnerName, new { @class = "Text Disabled", @readonly = true })
                    </div>
                    <div class="clear"></div>
                }
                <div class="formInline formInlineBtn">
                    <span class="btnPurple">
                        <input id="" type="button" onclick="SubmitUserForm()" value="@EM_Report.Domain.Resources.Resource.Action_Save"/>
                    </span>
                    <span class="btnPurple">
                        <input type="button" value="Back To List" 
                            onclick="window.location = ('@Url.Action("index", "user", new { systemid = Request["systemid"] })')"/>
                    </span>
                </div>
            </div>
            <div class="clear"></div>
        }
    </div>
</div>
<style>
    .formInline .sbHolder
    {
        width: 335px;
        margin-left: 0px !important;
    }
    #divInternal 
    {
        min-width: 850px !important;
    }
    #divInternal .sbHolder, #divInternal .sbSelector, #divInternal .sbOptions
    {
        width: 200px;
    }
    #divExternal .sbHolder, #divExternal .sbSelector, #divExternal .sbOptions
    {
        width: 200px;
    }
</style>
<script type="text/javascript" language="javascript">
    var oldPassword;
    $(document).ready(function () {
        //Change HEM to Hospitality and EML to WCNSW
        $('select[id="cboDefaultSystemId"] option').each(function () {
            if ($(this).html() == 'HEM') {
                $(this).html('Hospitality');
            }
            else if ($(this).html() == 'EML') {
                $(this).html('WCNSW');
            }
        });

        $('#selectStatus').hide();
        $('#selectSystem_RoleId').hide();
        $("#selectcboOrganisation_Roles_HEM").hide();
        $("#selectcboTeams_HEM").hide();
        $("#selectcboOrganisation_Roles_TMF").hide();
        $("#selectcboTeams_TMF").hide();
        $("#selectcboOrganisation_Roles_EML").hide();
        $("#selectcboTeams_EML").hide();
        $("#selectExternal_GroupId").hide();

        if ($('#radioExternalUser').prop('checked')) {
            showExternalUserSection();
        }
        else {
            showInternalUserSection();
            detectInternalUser();
        }

        $("input:radio").change(function () {
            detectInternalUser();
        }); 

    });

    function SubmitUserForm() {
        if (isValidOrgRoleAndExternalGroup() == true) {
            actionClick('save', false);
        }
    }

    function detectInternalUser() {
        if ($('#radioInternalUser').prop('checked')) {
            $('#txtPassword').attr('readonly', 'readonly');
            $('#txtConfirmPassword').attr('readonly', 'readonly');
            oldPassword = $('#txtPassword').val();

            if ($('#txtPassword').val() == '')
                $('#txtPassword').val('fakePassword');
            if ($('#txtConfirmPassword').val() == '')
                $('#txtConfirmPassword').val('fakePassword');
        }
        else {
            $('#txtPassword').removeAttr('readonly');
            $('#txtConfirmPassword').removeAttr('readonly');
            $('#txtPassword').val(oldPassword);
            $('#txtConfirmPassword').val(oldPassword);
        }
    }

    function isValidOrgRoleAndExternalGroup() {
        var isValid = true;

        if ($("#Is_System_User").first().attr("checked") != "checked") 
        {
            if ($("#Is_External_User").first().attr("checked") != "checked") //External User
            {
                if ($('#cboExternal_Groups option:selected').text().toLowerCase() == "--select--") 
                {
                    $("#msgIsExternalGroupSelected").css("display", "inline-block");
                    //isValid = false;
                }
            }
            else //Internal User
            {
                var systemlist = '@Json.Encode(((Systems[])ViewBag.Systems).Select(user => new { user.Name }))';
                var issystemselected = "false";

                for (var i = 0; i < systemlist.length; i++) 
                {
                    var rolevalue = $("#cboOrganisation_Roles_" + systemlist[i].Name).val();
                    if (rolevalue != 0) 
                        issystemselected = "true";
                }
                if (issystemselected == "false") {
                    $("#msgIsRoleSelected").css("display", "inline-block");
                    isValid = false;
                }
                else {
                    $("#msgIsRoleSelected").css("display", "none");
                }
            }
        }

        return isValid;
    }

    function checkIsExtGroup(elm) {
        if ($('#cboExternal_Groups option:selected').text().toLowerCase() != "--select--") {
            $("#msgIsExternalGroupSelected").css("display", "none");
        }
        else
            $("#msgIsExternalGroupSelected").css("display", "inline-block");
    };

    function checkIsOrgRole(elm) {
        if (elm.selectedIndex != 0)
            $("#msgIsRoleSelected").css("display", "none");
    }

    function LoadRoleFollowSystem(systemid) {
        if ($("#cboOrganisation_Roles").length > 0) {
            $("#cboOrganisation_Roles option").remove();
            var hddRoles = $("#hddRoles_" + systemid);
            if (hddRoles.length >= 0) {
                $.each($.parseJSON(hddRoles.val()), function () {
                    $("#cboOrganisation_Roles").append("<option value='" + this.Organisation_RoleId + "'>" + this.Name + "</option>");
                });
            }
        }
    }

    function LoadTeamFollowSystem(systemid) {
        if ($("#cboTeams").length > 0) {
            $("#cboTeams option").remove();
            var hddTeams = $("#hddTeams_" + systemid);
            if (hddTeams.length >= 0) {
                $.each($.parseJSON(hddTeams.val()), function () {
                    $("#cboTeams").append("<option value='" + this.TeamId + "'>" + this.Name + "</option>");
                });
            }
        }
    }

    function showInternalUserSection() {
        $('#divInternalUser').css("display", "block");
        $('#divExternalUser').css("display", "none");
    }

    function showExternalUserSection() {
        $('#divExternalUser').css("display", "block");
        $('#divInternalUser').css("display", "none");
    }

    function ShowSystemRole(me) {
        $('#cmdSave_SystemRoles').css("display", "block");
        $('#cmdSave_SystemRoles2').css("display", "block");
    }

    function hiddenSystemRole(me) {
        $('#cmdSave_SystemRoles').css("display", "none");
        $('#cmdSave_SystemRoles2').css("display", "none");
    }

    $("#cboSystems").change(function () {
        LoadRoleFollowSystem($(this).val());
        LoadTeamFollowSystem($(this).val());
    });


</script>
