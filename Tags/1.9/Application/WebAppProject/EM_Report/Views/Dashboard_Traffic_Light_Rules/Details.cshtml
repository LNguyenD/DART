@model EM_Report.Domain.Dashboard_Traffic_Light_Rule             
@using EM_Report.Common.Utilities;
@using EM_Report.Helpers;
@using EM_Report.Repositories;
@using EM_Report.Domain;
@{    
    ViewBag.Title = "Traffic light Details";
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Master.cshtml";
}
@functions {  
    public bool IsNew()
    {
        return (Model != null && Model.Id > 0) ? false : true;
    }

    public string AddButtonText()
    {
        return IsNew() ? "add" : "save";
    }
}
<div class="wrapper">
    <div class="w_100p">
        @using (Html.BeginForm())
        {          
            @Html.AntiForgeryToken()	
            <div class="formWrap">
                @Html.Hidden("action")
                @if (!IsNew())
                {
                    @Html.HiddenFor(e => e.Id)                
                }
                <h1>@(IsNew() ? "Traffic light List Add" : "Traffic light List Edit")</h1>
                @Html.Partial("_ShowMessage")
                <div class="formInline">
                    <label>
                        Dashboard Type</label>
                    @Html.TextBoxFor(e => e.DashboardType, new { id = "txtDashboardType", @class = "Text" })
                    @Html.ValidationMessageFor(e => e.DashboardType)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>Type</label>
                    @Html.TextBoxFor(e => e.Type, new { id = "txtType", @class = "Text" })
                    @Html.ValidationMessageFor(e => e.Type)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>Value</label>
                    @Html.TextBoxFor(e => e.Value, new { id = "txtValue", @class = "Text" })
                    @Html.ValidationMessageFor(e => e.Value)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>Sub Value</label>
                    @Html.TextBoxFor(e => e.Sub_Value, new { id = "txtSubValue", @class = "Text" })
                    @Html.ValidationMessageFor(e => e.Sub_Value)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>Measure</label>
                    @Html.TextBoxFor(e => e.Measure, new { id = "txtMeasure", @class = "Text" })
                    @Html.ValidationMessageFor(e => e.Measure)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>Name</label>
                    @Html.TextBoxFor(e => e.Name, new { id = "txtName", @class = "Text" })
                    @Html.ValidationMessageFor(e => e.Name)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>Description</label>
                    @Html.TextAreaFor(e => e.Description, new { id = "txtDescription", @class = "Text" })
                    @Html.ValidationMessageFor(e => e.Description)
                </div>
                <div class="clear">
                </div>
                 <div class="formInline">
                    <label>ImageUrl</label>
                    @Html.TextBoxFor(e => e.ImageUrl, new { id = "txtImageUrl", @class = "Text" })
                    @Html.ValidationMessageFor(e => e.ImageUrl)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>From Value</label>
                    @Html.TextBoxFor(e => e.FromValue, new { id = "txtFromValue", @class = "Text" })
                    @Html.ValidationMessageFor(e => e.FromValue)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>To Value</label>
                    @Html.TextBoxFor(e => e.ToValue, new { id = "txtToValue", @class = "Text" })
                    @Html.ValidationMessageFor(e => e.ToValue)
                </div>
                <div class="clear">
                </div>
                <div class="formInline">
                    <label>System</label>
                    @{
                        if (!IsNew())
                        {       
                            @Html.DropDownListFor(e => e.SystemId, (SelectList)ViewBag.cboSystemSite)
                        }
                        else
                        {
                            foreach (var s in (List<Systems>)ViewBag.cboSystemSite)
                            {
                                <label style="width: auto">@s.Name</label>
                                <input style="left: -2px !important"  type="checkbox"  value="@s.SystemId" name="chkSystem_@(s.Name)" id="chkSystem_@(s.Name)" />                              
                            }
                                <span class="field-validation-error" style="margin-left: 10px; display: none;">*</span>
                        }
                    }
                </div>
                <div class="clear">
                </div>
                <div class="formInline formInlineBtn">
                    @if (Login.AuthorizeSystemPermission(ResourcesHelper.System_Report, ResourcesHelper.Permission_Add))
                    {
                        <span class="btnPurple">
                            <input type="button" id="cmdSave" onclick="SubmitTargetForm()" value="Save" /></span>
                    }
                    <span class="btnPurple">
                        <input type="button" value="Back To List" onclick="window.location = ('@Url.Action("index", "Dashboard_Traffic_Light_Rules", new { systemid = Request["systemid"] })')"/></span>
                </div>
                <div class="clear">
                </div>
            </div>          
        }
    </div>
</div>
<script type="text/javascript" language="javascript">
    function SubmitTargetForm() {
        if (isValidRequiredTarget() == true) {
            actionClick('save', false);
        }
    }

    function isValidRequiredTarget() {
        var isValid = true;

        if ($("#Id").val() == undefined) {
            if ($("#chkSystem_HEM").is(':checked') == false && $("#chkSystem_TMF").is(':checked') == false && $("#chkSystem_EML").is(':checked') == false) {
                $("#chkSystem_EML").parent().parent().parent().parent().next().show();
                isValid = false;
            }
            else {
                $("#chkSystem_EML").parent().parent().parent().parent().next().hide();
            }
        }

        return isValid;
    }
</script>
