@model EM_Report.Domain.Dashboard_Projection_Import         
@using EM_Report.Common.Utilities;
@using EM_Report.Helpers;
@{    
    ViewBag.Title = "Import Projection List";
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Master.cshtml";
}
<div class="wrapper">
    <div class="w_100p">
    @using (Html.BeginForm("Import", "Dashboard_Projection", new { systemid = Request["systemid"] }, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="formWrap">
            @Html.Hidden("action")            
            <input type="hidden" id="pathFileTmp" name="pathFileTmp" value="@ViewBag.PathFileTmp" />
            <h1>Import Projection List
                <div class="viewImport">
                    <a href="#" class="linkImport"><img src="@Url.ContentV("~/images/ico_import_file.png")" alt="Show Template" title="Show Template" /> Preview template</a>
                    <!-- VIEW DESCRIPTION -->
                    <div class="viewImportContent">
                        <img src="@Url.ContentV("~/images/template_projection.png")" alt="Template" title="Template" />
                    </div>
                    <!-- VIEW DESCRIPTION END -->
                    <div class="clear"></div>
                </div>
            </h1>
            @Html.Partial("_ShowMessage")
            <div class="formInline">
                <label>Excel input</label>
                @Html.TextBoxFor(e => e.File, new { id = "txtExcelInput", name = "txtExcelInput", @class = "Text", type = "file", accept = ".csv" })
                <span class="field-validation-error" style="display: none">*</span>
            </div>   
            <div class="clear"></div>
            <div class="formInline formInlineBtn">
                <span class="btnPurple"><input type="button" id="cmdProcess" value="Process" onclick="ProcessImportingData()"/></span>
            </div>
            <br />
            <table name="tbGrid" cellspacing="0" cellpadding="0" class="tbl">
                <thead>
                    <tr>
                        <td sortby="Unit_Name" sortdir="" class="col_30"><span class="css_right ui-icon ui-icon-carat-2-n-s"></span>unit name</td>
                        <td sortby="Unit_Type" sortdir="" class="col_17"><span class="css_right ui-icon ui-icon-carat-2-n-s"></span>unit type</td>
                        <td sortby="Type" sortdir="" class="col_25"><span class="css_right ui-icon ui-icon-carat-2-n-s"></span>type</td>
                        <td sortby="Time_Id" sortdir="" class="col_10" align="center"><span class="css_right ui-icon ui-icon-carat-2-n-s"></span>time id</td>
                        <td sortby="Projection" sortdir="" class="col_10"><span class="css_right ui-icon ui-icon-carat-2-n-s"></span>projection</td>
                    </tr>
                </thead>
                @if (Model != null && !Model.ProjectionList.IsNullOrEmpty())
                {
                    var i = 0;
                    <tbody>
                        @foreach (var item in Model.ProjectionList)
                        {
                            <tr class="@(item.IsError ? "err" : (i % 2 == 0 ? "odd" : "even"))">
                                <td class="@(item.ErrorFields.Contains("unit_name") ? "err" : "")" title="@(item.ErrorFields.Contains("unit_name") ? "Unit Name is not valid" : item.Unit_Name)">@item.Unit_Name</td>
                                <td class="@(item.ErrorFields.Contains("unit_type") ? "err" : "")" title="@(item.ErrorFields.Contains("unit_type") ? "Unit Type is not valid" : item.Unit_Type)">@item.Unit_Type</td>
                                <td class="@(item.ErrorFields.Contains("type") ? "err" : "")" title="@(item.ErrorFields.Contains("type") ? "Type is not valid" : item.Type)">@item.Type</td>
                                <td class="@(item.ErrorFields.Contains("time_id") ? "err col_center" : "col_center")" title="@(item.ErrorFields.Contains("time_id") ? "Time Id is not valid" : Base.GetDatetimeText(@item.Time_Id))">@Base.GetDatetimeText(@item.Time_Id)</td>
                                <td class="@(item.ErrorFields.Contains("projection") ? "err" : "")" title="@(item.ErrorFields.Contains("projection") ? "Projection is not valid" : item.Projection.ToString())">@item.Projection</td>
                            </tr>
                                                                                                                                                                                                           i++;
                        }
                    </tbody>
                }            
            </table>
            <br />
            <div class="right">
                <span class="btnPurple"><input type="button" value="Save" onclick="SubmitImportingData()"/></span>
                <span class="btnPurple"><input type="button" value="Back To List" onclick="window.location = ('@Url.Action("index", "Dashboard_Projection", new { systemid = Request["systemid"] })')"/></span>
            </div>
            <div class="clear"></div>
        </div>
    }
    </div>
</div>
<script type="text/javascript" language="javascript">
    function ProcessImportingData() {
        var isValid = true;

        if ($("#txtExcelInput").val() == "") {
            $("#txtExcelInput").addClass("input-validation-error");
            $("#txtExcelInput").next().show();
            isValid = false;
        }
        else {
            $("#txtExcelInput").next().hide();
        }

        if (isValid) 
        {
            actionClick('process', false);
        }
    }

    function SubmitImportingData() {
        var isValid = true;

        if ($("#pathFileTmp").attr("value") == "") {
            if ($("#txtExcelInput").val() == "") {
                $("#txtExcelInput").addClass("input-validation-error");
                $("#txtExcelInput").next().show();
                isValid = false;
            }
            else {
                $("#txtExcelInput").next().hide();
            }
        }

        if (isValid) {
            actionClick('save', false);
        }
    }
</script>