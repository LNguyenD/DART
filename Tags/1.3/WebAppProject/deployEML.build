<?xml version="1.0" encoding="utf-8" ?>
<project name="EM_Report_deployEML" default="all" xmlns="http://nant.sf.net/release/0.91/nant.xsd">
    <property name="framework-get-assembly-directory" value="${framework::get-assembly-directory('net-4.0')}" />
    <property name="dotNetReferenceAssemblyPath" value="${framework-get-assembly-directory}\" />
    <property name="nant.settings.currentframework" value="net-4.0" />

    <property name="solution.configuration" value="Debug" overwrite="false" />
    
    <property name="solution.name" value="EM_Report"/>
    <property name="solution.EM_Report.project.name" value="EM_Report"/>
    <property name="solution.EM_Report.BLL.project.name" value="EM_Report.BLL"/>
    <property name="solution.EM_Report.DAL.project.name" value="EM_Report.DAL"/>
    <property name="solution.EM_Report.Models.project.name" value="EM_Report.Models"/>
    <property name="solution.EM_Report.Tests.project.name" value="EM_Report.Tests"/>
    <property name="solution.deploymentProject.name" value="${solution.EM_Report.project.name}"/>
    
    <property name="solution.EM_Report.credentials.name" value="credentials.config"/>

    <property name="iis.application.name" value="Default Web Site/emreportingEML"/>
    <property name="connectionString" value="Data Source=10.9.0.21;Initial Catalog=EM_Reporting;Persist Security Info=True;User ID=emreportingteam;Password=emdbdev123"/>
    <property name="rsConnectionString" value="Data Source=10.9.0.21;Initial Catalog=emiprod;User ID=kct;Password=password"/>
    <property name="rsServer" value="http://10.9.0.21/reportserver"/>
    <property name="MainSSRSAccount_Domain" value="10.9.0.21"/>
    <property name="MainSSRSAccount_UserName" value="reportadmin"/>
    <property name="MainSSRSAccount_Password" value="!QAZ@WSX"/>
    <property name="informationTipBox.text" value="trunk build"/>

    <property name="deploymentPackages.directory.name" value="DeploymentPackages"/>
    <property name="deploymentPackages.directory.path" value="${path::get-full-path(deploymentPackages.directory.name)}"/>
    <property name="deploymentPackages.scriptFile.path" value="${deploymentPackages.directory.path}\_PublishedWebsites\${solution.deploymentProject.name}_Package\${solution.deploymentProject.name}.deploy.cmd"/>
    <property name="deploymentPackages.parameterFile.path" value="${deploymentPackages.directory.path}\_PublishedWebsites\${solution.deploymentProject.name}_Package\${solution.deploymentProject.name}.SetParameters.xml"/>

    <!-- a dummy test target -->
    <target name="dummy">
        <echo message="${project::get-name()} is located at: ${nant::get-base-directory()}"/>
        <echo message="${solution.name}.sln"/>
    </target>

    <target name="clean">
        <delete dir="${solution.EM_Report.project.name}/bin" failonerror="true" />
        <delete dir="${solution.EM_Report.project.name}/obj" failonerror="true" />

        <delete dir="${solution.EM_Report.BLL.project.name}/bin" failonerror="true" />
        <delete dir="${solution.EM_Report.BLL.project.name}/obj" failonerror="true" />

        <delete dir="${solution.EM_Report.DAL.project.name}/bin" failonerror="true" />
        <delete dir="${solution.EM_Report.DAL.project.name}/obj" failonerror="true" />

        <delete dir="${solution.EM_Report.Models.project.name}/bin" failonerror="true" />
        <delete dir="${solution.EM_Report.Models.project.name}/obj" failonerror="true" />

        <delete dir="${solution.EM_Report.Tests.project.name}/bin" failonerror="true" />
        <delete dir="${solution.EM_Report.Tests.project.name}/obj" failonerror="true" />
    </target>

    <target name="build" depends="clean">
        <xmlpoke file="${solution.EM_Report.project.name}/${solution.EM_Report.credentials.name}"
                  xpath="/connectionStrings/add[@name = 'EM_ReportConnectionString']/@connectionString"
                  value="${connectionString}"/>
        <xmlpoke file="${solution.EM_Report.project.name}/${solution.EM_Report.credentials.name}"
                  xpath="/connectionStrings/add[@name = 'RS_ConnectionString']/@connectionString"
                  value="${rsConnectionString}"/>
        <xmlpoke file="${solution.EM_Report.project.name}/web.config"
                 xpath="/configuration/appSettings/add[@key = 'ReportServerUrl']/@value"
                 value="${rsServer}"/>
        <xmlpoke file="${solution.EM_Report.project.name}/web.config"
                 xpath="/configuration/appSettings/add[@key = 'MainSSRSAccount_Domain']/@value"
                 value="${MainSSRSAccount_Domain}"/>
        <xmlpoke file="${solution.EM_Report.project.name}/web.config"
                 xpath="/configuration/appSettings/add[@key = 'MainSSRSAccount_UserName']/@value"
                 value="${MainSSRSAccount_UserName}"/>
        <xmlpoke file="${solution.EM_Report.project.name}/web.config"
                 xpath="/configuration/appSettings/add[@key = 'MainSSRSAccount_Password']/@value"
                 value="${MainSSRSAccount_Password}"/>
        <!--<solution configuration="${solution.configuration}" solutionfile="${solution.name}.sln" />-->
        <msbuild target="build" project="${solution.name}.sln">
            <property name="configuration" value="${solution.configuration}"/>
            <property name="Platform" value="Any CPU"/>
        </msbuild>
    </target>

    <target name="runtest">
        <if test="${property::exists('solution.EM_Report.Tests.project.name') and string::trim(solution.EM_Report.Tests.project.name) != ''}">
            <!-- define connection string for nunit tests-->
            <xmlpoke file="${solution.EM_Report.Tests.project.name}/App.config" 
                    xpath="/configuration/connectionStrings/add[@name = 'EM_ReportConnectionString']/@connectionString" 
                    value="${connectionString}"/>
            <copy file="${solution.EM_Report.Tests.project.name}/App.config" tofile="${solution.EM_Report.Tests.project.name}/${solution.EM_Report.Tests.project.name}.config"></copy>
            <!-- execute tests -->
            <exec program="nunit-console.exe">
                <arg file="${solution.EM_Report.Tests.project.name}/${solution.EM_Report.Tests.project.name}.csproj"/>
                <arg value="/config=${solution.configuration}"/>
            </exec>
        </if>
        <if test="${not (property::exists('solution.EM_Report.Tests.project.name') and string::trim(solution.EM_Report.Tests.project.name) != '') }">
            <echo message="no test case to execute"/>
        </if>
    </target>   
    
     <target name="package">
        <!-- update connection string -->
       <xmlpoke file="${solution.EM_Report.project.name}/${solution.EM_Report.credentials.name}"
             xpath="/connectionStrings/add[@name = 'EM_ReportConnectionString']/@connectionString"
             value="${connectionString}"/>
        <xmlpoke file="${solution.EM_Report.project.name}/web.config" xpath="/configuration/appSettings/add[@key = 'Site']/@value" value="EML"/>

        <!-- delete deployment package directory -->
        <delete dir="${deploymentPackages.directory.name}"/>

        <!-- invoke msbuild -->
        <msbuild target="package" project="${solution.deploymentProject.name}/${solution.deploymentProject.name}.csproj">
            <property name="configuration" value="${solution.configuration}"/>
            <property name="outputpath" value="${deploymentPackages.directory.path}"/>
        </msbuild>

        <!-- define application name on IIS before deploying -->
        <xmlpoke file="${deploymentPackages.parameterFile.path}" xpath="/parameters/setParameter[@name = 'IIS Web Application Name']/@value" value="${iis.application.name}" />
    </target>

    <target name="deploy">
        <exec program="${deploymentPackages.scriptFile.path}">
            <!-- confirm deployment -->
            <arg value="/Y"/>
        </exec>
    </target>

    <target name="all" depends="build, runtest, package, deploy">
    </target>
</project>
