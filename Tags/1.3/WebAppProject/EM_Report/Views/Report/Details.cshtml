@model EM_Report.Models.ReportModel
@using EM_Report.BLL.Commons;           
@using EM_Report.Helpers;
@using EM_Report.Models;
@{
	ViewBag.Title = "Report";    
	Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Master.cshtml";
}
@functions {  
	public bool IsNew()
	{
		return (Model != null && Model.ReportId > 0) ? false : true;
	}

	public string AddButtonText()
	{
		return IsNew() ? "add" : "save";
	}
}
<div class="Wrapper">
    <div class="BoxHeader">
        <span>Report >> @(IsNew()?"Add Report":"Edit Report")</span>
    </div>
    <div class="BoxContent">
       @using (Html.BeginForm())
       {            
            <div class="FormWrapper">
                @Html.Hidden("action")
			    @Html.HiddenFor(e => e.ReportId)
			    @Html.HiddenFor(e => e.Owner)
			    @Html.Partial("_ShowMessage")     
                <div class="LineWrapper First SameLine">
                    <label>Report Name</label>                    
                    @Html.TextBoxFor(e => e.Name, new { id = "txtName", name = "txtName", @class = "Text" })
					@Html.ValidationMessageFor(e => e.Name) 
                </div>
                <div class="LineWrapper SameLine">
                    <label>Short Name</label>
                    @Html.TextBoxFor(e => e.ShortName, new { id = "txtShortName", @class = "Text" })
					@Html.ValidationMessageFor(e => e.ShortName)  
                </div>
                <div class="LineWrapper SameLine">
                    <label>Url</label>
                    @Html.TextBoxFor(e => e.Url, new { id = "txtUrl", @class = "Text" })
					@Html.ValidationMessageFor(e => e.Url)  
                </div>
                <div class="LineWrapper SameLine">
                    <label>Description</label>
                    @Html.TextAreaFor(e => e.Description, new { id = "txtDescription", @class = "Text" })
					@Html.ValidationMessageFor(e => e.Description) 
                </div>
                <div class="LineWrapper SameLine">
                    <label>Status</label>
                    <div class="WrapperSelectBox SelectForm">
                          @Html.DropDownListFor(e => e.Status, new SelectList(Base.StatusList(), "StatusId", "Name"))
                    </div>
                </div>
                <div class="LineWrapper SameLine">
                        <label>Category</label>
                        <div class="WrapperSelectBox SelectForm">
                             @Html.DropDownListFor(e => e.CategoryId, (SelectList)ViewBag.CategoryList)
                        </div>
                </div>
                <div class="LineWrapper SameLine">
                        <label>Assign to Level</label>
                        <div class="WrapperSelectBox SelectForm">
                             <select id="cboLevel" name="cboLevel">
						        <option value="0">--Select--</option>
						        @foreach (var item in (IEnumerable<EM_Report.Models.Organisation_Levels_Model>)ViewBag.Levels)
                                {
							        <option 
								        @if (ViewBag.AssignLevel == item.LevelId)
                                            { <text>selected="selected"</text>} 
								        value="@item.LevelId">@item.Name</option>
                                }
					        </select>                                                
                        </div>
                </div>
                @if (!IsNew())
                {
                    <div class="LineWrapper SameLine">
                        <label>Create Date</label>                        
                        @Html.TextBoxFor(e => e.Create_Date, new { @class = "Text", @readonly = true, @disabled = "disable" })
                    </div>
                    <div class="LineWrapper SameLine">
                        <label>Created By</label>                        
                        @Html.TextBoxFor(e => e.OwnerName, new { @class = "Text", @readonly = true, @disabled = "disable" })
                    </div>      
                }
            </div>
            <div class="CommandWrapper">                
                @if (Login.AuthorizeSystemPermission(ResourcesHelper.System_Report, ResourcesHelper.Permission_Add))
                {
				<a id="btnSave" class="ButtonSave" onclick="actionClick('save', false);">Save</a>
                }
                <a class="ButtonBack" href="@Url.Action("index", "report")">Back To List</a>
                @*@if (!IsNew())
                {
                <a class="ButtonAssignExternal" href="@Url.Action("externalgroup", "report", new { id = Model.ReportId })">Assign Report To External Groups</a>
                }*@
            </div>
       }
    </div>  
</div>