#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EM_Report.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EM_Reporting")]
	public partial class ReportModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCONTROL(CONTROL instance);
    partial void UpdateCONTROL(CONTROL instance);
    partial void DeleteCONTROL(CONTROL instance);
    partial void InsertUsers_Audit(Users_Audit instance);
    partial void UpdateUsers_Audit(Users_Audit instance);
    partial void DeleteUsers_Audit(Users_Audit instance);
    partial void InsertExternal_Group(External_Group instance);
    partial void UpdateExternal_Group(External_Group instance);
    partial void DeleteExternal_Group(External_Group instance);
    partial void InsertExternal_Groups_Audit(External_Groups_Audit instance);
    partial void UpdateExternal_Groups_Audit(External_Groups_Audit instance);
    partial void DeleteExternal_Groups_Audit(External_Groups_Audit instance);
    partial void InsertOrganisation_Level(Organisation_Level instance);
    partial void UpdateOrganisation_Level(Organisation_Level instance);
    partial void DeleteOrganisation_Level(Organisation_Level instance);
    partial void InsertOrganisation_Role(Organisation_Role instance);
    partial void UpdateOrganisation_Role(Organisation_Role instance);
    partial void DeleteOrganisation_Role(Organisation_Role instance);
    partial void InsertOrganisation_Roles_Audit(Organisation_Roles_Audit instance);
    partial void UpdateOrganisation_Roles_Audit(Organisation_Roles_Audit instance);
    partial void DeleteOrganisation_Roles_Audit(Organisation_Roles_Audit instance);
    partial void InsertOrganisationRole_Levels_Audit(OrganisationRole_Levels_Audit instance);
    partial void UpdateOrganisationRole_Levels_Audit(OrganisationRole_Levels_Audit instance);
    partial void DeleteOrganisationRole_Levels_Audit(OrganisationRole_Levels_Audit instance);
    partial void InsertPermission(Permission instance);
    partial void UpdatePermission(Permission instance);
    partial void DeletePermission(Permission instance);
    partial void InsertRELEASE_VERSION(RELEASE_VERSION instance);
    partial void UpdateRELEASE_VERSION(RELEASE_VERSION instance);
    partial void DeleteRELEASE_VERSION(RELEASE_VERSION instance);
    partial void InsertReport_Category(Report_Category instance);
    partial void UpdateReport_Category(Report_Category instance);
    partial void DeleteReport_Category(Report_Category instance);
    partial void InsertReport_Categories_Audit(Report_Categories_Audit instance);
    partial void UpdateReport_Categories_Audit(Report_Categories_Audit instance);
    partial void DeleteReport_Categories_Audit(Report_Categories_Audit instance);
    partial void InsertReport_External_Access(Report_External_Access instance);
    partial void UpdateReport_External_Access(Report_External_Access instance);
    partial void DeleteReport_External_Access(Report_External_Access instance);
    partial void InsertReport_External_Access_Audit(Report_External_Access_Audit instance);
    partial void UpdateReport_External_Access_Audit(Report_External_Access_Audit instance);
    partial void DeleteReport_External_Access_Audit(Report_External_Access_Audit instance);
    partial void InsertReport_Favorite(Report_Favorite instance);
    partial void UpdateReport_Favorite(Report_Favorite instance);
    partial void DeleteReport_Favorite(Report_Favorite instance);
    partial void InsertReport_Organisation_Level(Report_Organisation_Level instance);
    partial void UpdateReport_Organisation_Level(Report_Organisation_Level instance);
    partial void DeleteReport_Organisation_Level(Report_Organisation_Level instance);
    partial void InsertReport_Organisation_Roles_Audit(Report_Organisation_Roles_Audit instance);
    partial void UpdateReport_Organisation_Roles_Audit(Report_Organisation_Roles_Audit instance);
    partial void DeleteReport_Organisation_Roles_Audit(Report_Organisation_Roles_Audit instance);
    partial void InsertReport_Recently(Report_Recently instance);
    partial void UpdateReport_Recently(Report_Recently instance);
    partial void DeleteReport_Recently(Report_Recently instance);
    partial void InsertReport(Report instance);
    partial void UpdateReport(Report instance);
    partial void DeleteReport(Report instance);
    partial void InsertReports_Audit(Reports_Audit instance);
    partial void UpdateReports_Audit(Reports_Audit instance);
    partial void DeleteReports_Audit(Reports_Audit instance);
    partial void InsertReportUser(ReportUser instance);
    partial void UpdateReportUser(ReportUser instance);
    partial void DeleteReportUser(ReportUser instance);
    partial void InsertStatus(Status instance);
    partial void UpdateStatus(Status instance);
    partial void DeleteStatus(Status instance);
    partial void InsertSubscription(Subscription instance);
    partial void UpdateSubscription(Subscription instance);
    partial void DeleteSubscription(Subscription instance);
    partial void InsertSubscriptions_Audit(Subscriptions_Audit instance);
    partial void UpdateSubscriptions_Audit(Subscriptions_Audit instance);
    partial void DeleteSubscriptions_Audit(Subscriptions_Audit instance);
    partial void InsertSystem_Permission(System_Permission instance);
    partial void UpdateSystem_Permission(System_Permission instance);
    partial void DeleteSystem_Permission(System_Permission instance);
    partial void InsertSystem_Role_Permission(System_Role_Permission instance);
    partial void UpdateSystem_Role_Permission(System_Role_Permission instance);
    partial void DeleteSystem_Role_Permission(System_Role_Permission instance);
    partial void InsertSystem_Role_Permissions_Audit(System_Role_Permissions_Audit instance);
    partial void UpdateSystem_Role_Permissions_Audit(System_Role_Permissions_Audit instance);
    partial void DeleteSystem_Role_Permissions_Audit(System_Role_Permissions_Audit instance);
    partial void InsertSystem_Role(System_Role instance);
    partial void UpdateSystem_Role(System_Role instance);
    partial void DeleteSystem_Role(System_Role instance);
    partial void InsertSystemUser(SystemUser instance);
    partial void UpdateSystemUser(SystemUser instance);
    partial void DeleteSystemUser(SystemUser instance);
    partial void InsertTeam(Team instance);
    partial void UpdateTeam(Team instance);
    partial void DeleteTeam(Team instance);
    partial void InsertTeams_Audit(Teams_Audit instance);
    partial void UpdateTeams_Audit(Teams_Audit instance);
    partial void DeleteTeams_Audit(Teams_Audit instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertAddressBook(AddressBook instance);
    partial void UpdateAddressBook(AddressBook instance);
    partial void DeleteAddressBook(AddressBook instance);
    #endregion
		
		public ReportModelDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EM_ReportingConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ReportModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CONTROL> CONTROLs
		{
			get
			{
				return this.GetTable<CONTROL>();
			}
		}
		
		public System.Data.Linq.Table<Users_Audit> Users_Audits
		{
			get
			{
				return this.GetTable<Users_Audit>();
			}
		}
		
		public System.Data.Linq.Table<External_Group> External_Groups
		{
			get
			{
				return this.GetTable<External_Group>();
			}
		}
		
		public System.Data.Linq.Table<External_Groups_Audit> External_Groups_Audits
		{
			get
			{
				return this.GetTable<External_Groups_Audit>();
			}
		}
		
		public System.Data.Linq.Table<Organisation_Level> Organisation_Levels
		{
			get
			{
				return this.GetTable<Organisation_Level>();
			}
		}
		
		public System.Data.Linq.Table<Organisation_Role> Organisation_Roles
		{
			get
			{
				return this.GetTable<Organisation_Role>();
			}
		}
		
		public System.Data.Linq.Table<Organisation_Roles_Audit> Organisation_Roles_Audits
		{
			get
			{
				return this.GetTable<Organisation_Roles_Audit>();
			}
		}
		
		public System.Data.Linq.Table<OrganisationRole_Levels_Audit> OrganisationRole_Levels_Audits
		{
			get
			{
				return this.GetTable<OrganisationRole_Levels_Audit>();
			}
		}
		
		public System.Data.Linq.Table<Permission> Permissions
		{
			get
			{
				return this.GetTable<Permission>();
			}
		}
		
		public System.Data.Linq.Table<RELEASE_VERSION> RELEASE_VERSIONs
		{
			get
			{
				return this.GetTable<RELEASE_VERSION>();
			}
		}
		
		public System.Data.Linq.Table<Report_Category> Report_Categories
		{
			get
			{
				return this.GetTable<Report_Category>();
			}
		}
		
		public System.Data.Linq.Table<Report_Categories_Audit> Report_Categories_Audits
		{
			get
			{
				return this.GetTable<Report_Categories_Audit>();
			}
		}
		
		public System.Data.Linq.Table<Report_External_Access> Report_External_Accesses
		{
			get
			{
				return this.GetTable<Report_External_Access>();
			}
		}
		
		public System.Data.Linq.Table<Report_External_Access_Audit> Report_External_Access_Audits
		{
			get
			{
				return this.GetTable<Report_External_Access_Audit>();
			}
		}
		
		public System.Data.Linq.Table<Report_Favorite> Report_Favorites
		{
			get
			{
				return this.GetTable<Report_Favorite>();
			}
		}
		
		public System.Data.Linq.Table<Report_Organisation_Level> Report_Organisation_Levels
		{
			get
			{
				return this.GetTable<Report_Organisation_Level>();
			}
		}
		
		public System.Data.Linq.Table<Report_Organisation_Roles_Audit> Report_Organisation_Roles_Audits
		{
			get
			{
				return this.GetTable<Report_Organisation_Roles_Audit>();
			}
		}
		
		public System.Data.Linq.Table<Report_Recently> Report_Recentlies
		{
			get
			{
				return this.GetTable<Report_Recently>();
			}
		}
		
		public System.Data.Linq.Table<Report> Reports
		{
			get
			{
				return this.GetTable<Report>();
			}
		}
		
		public System.Data.Linq.Table<Reports_Audit> Reports_Audits
		{
			get
			{
				return this.GetTable<Reports_Audit>();
			}
		}
		
		public System.Data.Linq.Table<ReportUser> ReportUsers
		{
			get
			{
				return this.GetTable<ReportUser>();
			}
		}
		
		public System.Data.Linq.Table<Status> Status
		{
			get
			{
				return this.GetTable<Status>();
			}
		}
		
		public System.Data.Linq.Table<Subscription> Subscriptions
		{
			get
			{
				return this.GetTable<Subscription>();
			}
		}
		
		public System.Data.Linq.Table<Subscriptions_Audit> Subscriptions_Audits
		{
			get
			{
				return this.GetTable<Subscriptions_Audit>();
			}
		}
		
		public System.Data.Linq.Table<System_Permission> System_Permissions
		{
			get
			{
				return this.GetTable<System_Permission>();
			}
		}
		
		public System.Data.Linq.Table<System_Role_Permission> System_Role_Permissions
		{
			get
			{
				return this.GetTable<System_Role_Permission>();
			}
		}
		
		public System.Data.Linq.Table<System_Role_Permissions_Audit> System_Role_Permissions_Audits
		{
			get
			{
				return this.GetTable<System_Role_Permissions_Audit>();
			}
		}
		
		public System.Data.Linq.Table<System_Role> System_Roles
		{
			get
			{
				return this.GetTable<System_Role>();
			}
		}
		
		public System.Data.Linq.Table<SystemUser> SystemUsers
		{
			get
			{
				return this.GetTable<SystemUser>();
			}
		}
		
		public System.Data.Linq.Table<Team> Teams
		{
			get
			{
				return this.GetTable<Team>();
			}
		}
		
		public System.Data.Linq.Table<Teams_Audit> Teams_Audits
		{
			get
			{
				return this.GetTable<Teams_Audit>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<AddressBook> AddressBooks
		{
			get
			{
				return this.GetTable<AddressBook>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONTROL")]
	public partial class CONTROL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TYPE;
		
		private string _ITEM;
		
		private string _VALUE;
		
		private string _TEXT_VALUE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTYPEChanging(string value);
    partial void OnTYPEChanged();
    partial void OnITEMChanging(string value);
    partial void OnITEMChanged();
    partial void OnVALUEChanging(string value);
    partial void OnVALUEChanged();
    partial void OnTEXT_VALUEChanging(string value);
    partial void OnTEXT_VALUEChanged();
    #endregion
		
		public CONTROL()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TYPE
		{
			get
			{
				return this._TYPE;
			}
			set
			{
				if ((this._TYPE != value))
				{
					this.OnTYPEChanging(value);
					this.SendPropertyChanging();
					this._TYPE = value;
					this.SendPropertyChanged("TYPE");
					this.OnTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITEM", DbType="Char(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ITEM
		{
			get
			{
				return this._ITEM;
			}
			set
			{
				if ((this._ITEM != value))
				{
					this.OnITEMChanging(value);
					this.SendPropertyChanging();
					this._ITEM = value;
					this.SendPropertyChanged("ITEM");
					this.OnITEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALUE", DbType="VarChar(1024)")]
		public string VALUE
		{
			get
			{
				return this._VALUE;
			}
			set
			{
				if ((this._VALUE != value))
				{
					this.OnVALUEChanging(value);
					this.SendPropertyChanging();
					this._VALUE = value;
					this.SendPropertyChanged("VALUE");
					this.OnVALUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEXT_VALUE", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TEXT_VALUE
		{
			get
			{
				return this._TEXT_VALUE;
			}
			set
			{
				if ((this._TEXT_VALUE != value))
				{
					this.OnTEXT_VALUEChanging(value);
					this.SendPropertyChanging();
					this._TEXT_VALUE = value;
					this.SendPropertyChanged("TEXT_VALUE");
					this.OnTEXT_VALUEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users_Audit")]
	public partial class Users_Audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private string _UserName;
		
		private string _Password;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Address;
		
		private string _Email;
		
		private System.Nullable<short> _Status;
		
		private string _Phone;
		
		private System.Nullable<System.DateTime> _Online_Locked_Until_Datetime;
		
		private System.Nullable<short> _Online_No_Of_Login_Attempts;
		
		private System.Nullable<System.DateTime> _Last_Online_Login_Date;
		
		private System.Nullable<bool> _Is_System_User;
		
		private string _Action_Type;
		
		private System.Nullable<System.DateTime> _Action_Date;
		
		private System.Nullable<int> _Action_Owner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnOnline_Locked_Until_DatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOnline_Locked_Until_DatetimeChanged();
    partial void OnOnline_No_Of_Login_AttemptsChanging(System.Nullable<short> value);
    partial void OnOnline_No_Of_Login_AttemptsChanged();
    partial void OnLast_Online_Login_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnLast_Online_Login_DateChanged();
    partial void OnIs_System_UserChanging(System.Nullable<bool> value);
    partial void OnIs_System_UserChanged();
    partial void OnAction_TypeChanging(string value);
    partial void OnAction_TypeChanged();
    partial void OnAction_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAction_DateChanged();
    partial void OnAction_OwnerChanging(System.Nullable<int> value);
    partial void OnAction_OwnerChanged();
    #endregion
		
		public Users_Audit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(256)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(256)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(400)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(30)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Online_Locked_Until_Datetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Online_Locked_Until_Datetime
		{
			get
			{
				return this._Online_Locked_Until_Datetime;
			}
			set
			{
				if ((this._Online_Locked_Until_Datetime != value))
				{
					this.OnOnline_Locked_Until_DatetimeChanging(value);
					this.SendPropertyChanging();
					this._Online_Locked_Until_Datetime = value;
					this.SendPropertyChanged("Online_Locked_Until_Datetime");
					this.OnOnline_Locked_Until_DatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Online_No_Of_Login_Attempts", DbType="SmallInt")]
		public System.Nullable<short> Online_No_Of_Login_Attempts
		{
			get
			{
				return this._Online_No_Of_Login_Attempts;
			}
			set
			{
				if ((this._Online_No_Of_Login_Attempts != value))
				{
					this.OnOnline_No_Of_Login_AttemptsChanging(value);
					this.SendPropertyChanging();
					this._Online_No_Of_Login_Attempts = value;
					this.SendPropertyChanged("Online_No_Of_Login_Attempts");
					this.OnOnline_No_Of_Login_AttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Online_Login_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Last_Online_Login_Date
		{
			get
			{
				return this._Last_Online_Login_Date;
			}
			set
			{
				if ((this._Last_Online_Login_Date != value))
				{
					this.OnLast_Online_Login_DateChanging(value);
					this.SendPropertyChanging();
					this._Last_Online_Login_Date = value;
					this.SendPropertyChanged("Last_Online_Login_Date");
					this.OnLast_Online_Login_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_System_User", DbType="Bit")]
		public System.Nullable<bool> Is_System_User
		{
			get
			{
				return this._Is_System_User;
			}
			set
			{
				if ((this._Is_System_User != value))
				{
					this.OnIs_System_UserChanging(value);
					this.SendPropertyChanging();
					this._Is_System_User = value;
					this.SendPropertyChanged("Is_System_User");
					this.OnIs_System_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Type", DbType="NVarChar(50)")]
		public string Action_Type
		{
			get
			{
				return this._Action_Type;
			}
			set
			{
				if ((this._Action_Type != value))
				{
					this.OnAction_TypeChanging(value);
					this.SendPropertyChanging();
					this._Action_Type = value;
					this.SendPropertyChanged("Action_Type");
					this.OnAction_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Action_Date
		{
			get
			{
				return this._Action_Date;
			}
			set
			{
				if ((this._Action_Date != value))
				{
					this.OnAction_DateChanging(value);
					this.SendPropertyChanging();
					this._Action_Date = value;
					this.SendPropertyChanged("Action_Date");
					this.OnAction_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Owner", DbType="Int")]
		public System.Nullable<int> Action_Owner
		{
			get
			{
				return this._Action_Owner;
			}
			set
			{
				if ((this._Action_Owner != value))
				{
					this.OnAction_OwnerChanging(value);
					this.SendPropertyChanging();
					this._Action_Owner = value;
					this.SendPropertyChanged("Action_Owner");
					this.OnAction_OwnerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.External_Groups")]
	public partial class External_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _External_GroupId;
		
		private string _Name;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private string _Description;
		
		private EntitySet<Report_External_Access> _Report_External_Accesses;
		
		private EntitySet<ReportUser> _ReportUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExternal_GroupIdChanging(int value);
    partial void OnExternal_GroupIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public External_Group()
		{
			this._Report_External_Accesses = new EntitySet<Report_External_Access>(new Action<Report_External_Access>(this.attach_Report_External_Accesses), new Action<Report_External_Access>(this.detach_Report_External_Accesses));
			this._ReportUsers = new EntitySet<ReportUser>(new Action<ReportUser>(this.attach_ReportUsers), new Action<ReportUser>(this.detach_ReportUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_External_GroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int External_GroupId
		{
			get
			{
				return this._External_GroupId;
			}
			set
			{
				if ((this._External_GroupId != value))
				{
					this.OnExternal_GroupIdChanging(value);
					this.SendPropertyChanging();
					this._External_GroupId = value;
					this.SendPropertyChanged("External_GroupId");
					this.OnExternal_GroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="External_Group_Report_External_Access", Storage="_Report_External_Accesses", ThisKey="External_GroupId", OtherKey="External_GroupId")]
		public EntitySet<Report_External_Access> Report_External_Accesses
		{
			get
			{
				return this._Report_External_Accesses;
			}
			set
			{
				this._Report_External_Accesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="External_Group_ReportUser", Storage="_ReportUsers", ThisKey="External_GroupId", OtherKey="External_GroupId")]
		public EntitySet<ReportUser> ReportUsers
		{
			get
			{
				return this._ReportUsers;
			}
			set
			{
				this._ReportUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Report_External_Accesses(Report_External_Access entity)
		{
			this.SendPropertyChanging();
			entity.External_Group = this;
		}
		
		private void detach_Report_External_Accesses(Report_External_Access entity)
		{
			this.SendPropertyChanging();
			entity.External_Group = null;
		}
		
		private void attach_ReportUsers(ReportUser entity)
		{
			this.SendPropertyChanging();
			entity.External_Group = this;
		}
		
		private void detach_ReportUsers(ReportUser entity)
		{
			this.SendPropertyChanging();
			entity.External_Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.External_Groups_Audit")]
	public partial class External_Groups_Audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _External_GroupId;
		
		private string _Name;
		
		private string _Action_Type;
		
		private System.Nullable<System.DateTime> _Action_Date;
		
		private System.Nullable<int> _Action_Owner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnExternal_GroupIdChanging(int value);
    partial void OnExternal_GroupIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAction_TypeChanging(string value);
    partial void OnAction_TypeChanged();
    partial void OnAction_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAction_DateChanged();
    partial void OnAction_OwnerChanging(System.Nullable<int> value);
    partial void OnAction_OwnerChanged();
    #endregion
		
		public External_Groups_Audit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_External_GroupId", DbType="Int NOT NULL")]
		public int External_GroupId
		{
			get
			{
				return this._External_GroupId;
			}
			set
			{
				if ((this._External_GroupId != value))
				{
					this.OnExternal_GroupIdChanging(value);
					this.SendPropertyChanging();
					this._External_GroupId = value;
					this.SendPropertyChanged("External_GroupId");
					this.OnExternal_GroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Type", DbType="NVarChar(50)")]
		public string Action_Type
		{
			get
			{
				return this._Action_Type;
			}
			set
			{
				if ((this._Action_Type != value))
				{
					this.OnAction_TypeChanging(value);
					this.SendPropertyChanging();
					this._Action_Type = value;
					this.SendPropertyChanged("Action_Type");
					this.OnAction_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Action_Date
		{
			get
			{
				return this._Action_Date;
			}
			set
			{
				if ((this._Action_Date != value))
				{
					this.OnAction_DateChanging(value);
					this.SendPropertyChanging();
					this._Action_Date = value;
					this.SendPropertyChanged("Action_Date");
					this.OnAction_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Owner", DbType="Int")]
		public System.Nullable<int> Action_Owner
		{
			get
			{
				return this._Action_Owner;
			}
			set
			{
				if ((this._Action_Owner != value))
				{
					this.OnAction_OwnerChanging(value);
					this.SendPropertyChanging();
					this._Action_Owner = value;
					this.SendPropertyChanged("Action_Owner");
					this.OnAction_OwnerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organisation_Levels")]
	public partial class Organisation_Level : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LevelId;
		
		private string _Name;
		
		private System.Nullable<int> _Sort;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<short> _Status;
		
		private EntitySet<Organisation_Role> _Organisation_Roles;
		
		private EntitySet<Report_Organisation_Level> _Report_Organisation_Levels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLevelIdChanging(int value);
    partial void OnLevelIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    #endregion
		
		public Organisation_Level()
		{
			this._Organisation_Roles = new EntitySet<Organisation_Role>(new Action<Organisation_Role>(this.attach_Organisation_Roles), new Action<Organisation_Role>(this.detach_Organisation_Roles));
			this._Report_Organisation_Levels = new EntitySet<Report_Organisation_Level>(new Action<Report_Organisation_Level>(this.attach_Report_Organisation_Levels), new Action<Report_Organisation_Level>(this.detach_Report_Organisation_Levels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LevelId
		{
			get
			{
				return this._LevelId;
			}
			set
			{
				if ((this._LevelId != value))
				{
					this.OnLevelIdChanging(value);
					this.SendPropertyChanging();
					this._LevelId = value;
					this.SendPropertyChanged("LevelId");
					this.OnLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Level_Organisation_Role", Storage="_Organisation_Roles", ThisKey="LevelId", OtherKey="LevelId")]
		public EntitySet<Organisation_Role> Organisation_Roles
		{
			get
			{
				return this._Organisation_Roles;
			}
			set
			{
				this._Organisation_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Level_Report_Organisation_Level", Storage="_Report_Organisation_Levels", ThisKey="LevelId", OtherKey="LevelId")]
		public EntitySet<Report_Organisation_Level> Report_Organisation_Levels
		{
			get
			{
				return this._Report_Organisation_Levels;
			}
			set
			{
				this._Report_Organisation_Levels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organisation_Roles(Organisation_Role entity)
		{
			this.SendPropertyChanging();
			entity.Organisation_Level = this;
		}
		
		private void detach_Organisation_Roles(Organisation_Role entity)
		{
			this.SendPropertyChanging();
			entity.Organisation_Level = null;
		}
		
		private void attach_Report_Organisation_Levels(Report_Organisation_Level entity)
		{
			this.SendPropertyChanging();
			entity.Organisation_Level = this;
		}
		
		private void detach_Report_Organisation_Levels(Report_Organisation_Level entity)
		{
			this.SendPropertyChanging();
			entity.Organisation_Level = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organisation_Roles")]
	public partial class Organisation_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Organisation_RoleId;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<int> _LevelId;
		
		private EntitySet<ReportUser> _ReportUsers;
		
		private EntityRef<Organisation_Level> _Organisation_Level;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganisation_RoleIdChanging(int value);
    partial void OnOrganisation_RoleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnLevelIdChanging(System.Nullable<int> value);
    partial void OnLevelIdChanged();
    #endregion
		
		public Organisation_Role()
		{
			this._ReportUsers = new EntitySet<ReportUser>(new Action<ReportUser>(this.attach_ReportUsers), new Action<ReportUser>(this.detach_ReportUsers));
			this._Organisation_Level = default(EntityRef<Organisation_Level>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organisation_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Organisation_RoleId
		{
			get
			{
				return this._Organisation_RoleId;
			}
			set
			{
				if ((this._Organisation_RoleId != value))
				{
					this.OnOrganisation_RoleIdChanging(value);
					this.SendPropertyChanging();
					this._Organisation_RoleId = value;
					this.SendPropertyChanged("Organisation_RoleId");
					this.OnOrganisation_RoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelId", DbType="Int")]
		public System.Nullable<int> LevelId
		{
			get
			{
				return this._LevelId;
			}
			set
			{
				if ((this._LevelId != value))
				{
					if (this._Organisation_Level.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevelIdChanging(value);
					this.SendPropertyChanging();
					this._LevelId = value;
					this.SendPropertyChanged("LevelId");
					this.OnLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Role_ReportUser", Storage="_ReportUsers", ThisKey="Organisation_RoleId", OtherKey="Organisation_RoleId")]
		public EntitySet<ReportUser> ReportUsers
		{
			get
			{
				return this._ReportUsers;
			}
			set
			{
				this._ReportUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Level_Organisation_Role", Storage="_Organisation_Level", ThisKey="LevelId", OtherKey="LevelId", IsForeignKey=true)]
		public Organisation_Level Organisation_Level
		{
			get
			{
				return this._Organisation_Level.Entity;
			}
			set
			{
				Organisation_Level previousValue = this._Organisation_Level.Entity;
				if (((previousValue != value) 
							|| (this._Organisation_Level.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation_Level.Entity = null;
						previousValue.Organisation_Roles.Remove(this);
					}
					this._Organisation_Level.Entity = value;
					if ((value != null))
					{
						value.Organisation_Roles.Add(this);
						this._LevelId = value.LevelId;
					}
					else
					{
						this._LevelId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organisation_Level");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReportUsers(ReportUser entity)
		{
			this.SendPropertyChanging();
			entity.Organisation_Role = this;
		}
		
		private void detach_ReportUsers(ReportUser entity)
		{
			this.SendPropertyChanging();
			entity.Organisation_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organisation_Roles_Audit")]
	public partial class Organisation_Roles_Audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Organisation_RoleId;
		
		private string _Name;
		
		private string _Action_Type;
		
		private System.Nullable<System.DateTime> _Action_Date;
		
		private System.Nullable<int> _Action_Owner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrganisation_RoleIdChanging(int value);
    partial void OnOrganisation_RoleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAction_TypeChanging(string value);
    partial void OnAction_TypeChanged();
    partial void OnAction_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAction_DateChanged();
    partial void OnAction_OwnerChanging(System.Nullable<int> value);
    partial void OnAction_OwnerChanged();
    #endregion
		
		public Organisation_Roles_Audit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organisation_RoleId", DbType="Int NOT NULL")]
		public int Organisation_RoleId
		{
			get
			{
				return this._Organisation_RoleId;
			}
			set
			{
				if ((this._Organisation_RoleId != value))
				{
					this.OnOrganisation_RoleIdChanging(value);
					this.SendPropertyChanging();
					this._Organisation_RoleId = value;
					this.SendPropertyChanged("Organisation_RoleId");
					this.OnOrganisation_RoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Type", DbType="NVarChar(50)")]
		public string Action_Type
		{
			get
			{
				return this._Action_Type;
			}
			set
			{
				if ((this._Action_Type != value))
				{
					this.OnAction_TypeChanging(value);
					this.SendPropertyChanging();
					this._Action_Type = value;
					this.SendPropertyChanged("Action_Type");
					this.OnAction_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Action_Date
		{
			get
			{
				return this._Action_Date;
			}
			set
			{
				if ((this._Action_Date != value))
				{
					this.OnAction_DateChanging(value);
					this.SendPropertyChanging();
					this._Action_Date = value;
					this.SendPropertyChanged("Action_Date");
					this.OnAction_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Owner", DbType="Int")]
		public System.Nullable<int> Action_Owner
		{
			get
			{
				return this._Action_Owner;
			}
			set
			{
				if ((this._Action_Owner != value))
				{
					this.OnAction_OwnerChanging(value);
					this.SendPropertyChanging();
					this._Action_Owner = value;
					this.SendPropertyChanged("Action_Owner");
					this.OnAction_OwnerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganisationRole_Levels_Audit")]
	public partial class OrganisationRole_Levels_Audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LevelId;
		
		private string _Name;
		
		private System.Nullable<int> _Sort;
		
		private string _Action_Type;
		
		private System.Nullable<System.DateTime> _Action_Date;
		
		private System.Nullable<int> _Action_Owner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLevelIdChanging(int value);
    partial void OnLevelIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    partial void OnAction_TypeChanging(string value);
    partial void OnAction_TypeChanged();
    partial void OnAction_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAction_DateChanged();
    partial void OnAction_OwnerChanging(System.Nullable<int> value);
    partial void OnAction_OwnerChanged();
    #endregion
		
		public OrganisationRole_Levels_Audit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelId", DbType="Int NOT NULL")]
		public int LevelId
		{
			get
			{
				return this._LevelId;
			}
			set
			{
				if ((this._LevelId != value))
				{
					this.OnLevelIdChanging(value);
					this.SendPropertyChanging();
					this._LevelId = value;
					this.SendPropertyChanged("LevelId");
					this.OnLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Type", DbType="NVarChar(50)")]
		public string Action_Type
		{
			get
			{
				return this._Action_Type;
			}
			set
			{
				if ((this._Action_Type != value))
				{
					this.OnAction_TypeChanging(value);
					this.SendPropertyChanging();
					this._Action_Type = value;
					this.SendPropertyChanged("Action_Type");
					this.OnAction_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Action_Date
		{
			get
			{
				return this._Action_Date;
			}
			set
			{
				if ((this._Action_Date != value))
				{
					this.OnAction_DateChanging(value);
					this.SendPropertyChanging();
					this._Action_Date = value;
					this.SendPropertyChanged("Action_Date");
					this.OnAction_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Owner", DbType="Int")]
		public System.Nullable<int> Action_Owner
		{
			get
			{
				return this._Action_Owner;
			}
			set
			{
				if ((this._Action_Owner != value))
				{
					this.OnAction_OwnerChanging(value);
					this.SendPropertyChanging();
					this._Action_Owner = value;
					this.SendPropertyChanged("Action_Owner");
					this.OnAction_OwnerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permissions")]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PermissionId;
		
		private string _Name;
		
		private System.Nullable<short> _Status;
		
		private string _Description;
		
		private EntitySet<System_Role_Permission> _System_Role_Permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermissionIdChanging(int value);
    partial void OnPermissionIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Permission()
		{
			this._System_Role_Permissions = new EntitySet<System_Role_Permission>(new Action<System_Role_Permission>(this.attach_System_Role_Permissions), new Action<System_Role_Permission>(this.detach_System_Role_Permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_System_Role_Permission", Storage="_System_Role_Permissions", ThisKey="PermissionId", OtherKey="PermissionId")]
		public EntitySet<System_Role_Permission> System_Role_Permissions
		{
			get
			{
				return this._System_Role_Permissions;
			}
			set
			{
				this._System_Role_Permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_System_Role_Permissions(System_Role_Permission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_System_Role_Permissions(System_Role_Permission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RELEASE_VERSION")]
	public partial class RELEASE_VERSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Release_Version_No;
		
		private string _Object_Code;
		
		private string _Object_Version_No;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _Owner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRelease_Version_NoChanging(string value);
    partial void OnRelease_Version_NoChanged();
    partial void OnObject_CodeChanging(string value);
    partial void OnObject_CodeChanged();
    partial void OnObject_Version_NoChanging(string value);
    partial void OnObject_Version_NoChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    #endregion
		
		public RELEASE_VERSION()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Release_Version_No", DbType="Char(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Release_Version_No
		{
			get
			{
				return this._Release_Version_No;
			}
			set
			{
				if ((this._Release_Version_No != value))
				{
					this.OnRelease_Version_NoChanging(value);
					this.SendPropertyChanging();
					this._Release_Version_No = value;
					this.SendPropertyChanged("Release_Version_No");
					this.OnRelease_Version_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object_Code", DbType="Char(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Object_Code
		{
			get
			{
				return this._Object_Code;
			}
			set
			{
				if ((this._Object_Code != value))
				{
					this.OnObject_CodeChanging(value);
					this.SendPropertyChanging();
					this._Object_Code = value;
					this.SendPropertyChanged("Object_Code");
					this.OnObject_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object_Version_No", DbType="Char(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Object_Version_No
		{
			get
			{
				return this._Object_Version_No;
			}
			set
			{
				if ((this._Object_Version_No != value))
				{
					this.OnObject_Version_NoChanging(value);
					this.SendPropertyChanging();
					this._Object_Version_No = value;
					this.SendPropertyChanged("Object_Version_No");
					this.OnObject_Version_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Categories")]
	public partial class Report_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryId;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<Report> _Reports;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Report_Category()
		{
			this._Reports = new EntitySet<Report>(new Action<Report>(this.attach_Reports), new Action<Report>(this.detach_Reports));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Category_Report", Storage="_Reports", ThisKey="CategoryId", OtherKey="CategoryId")]
		public EntitySet<Report> Reports
		{
			get
			{
				return this._Reports;
			}
			set
			{
				this._Reports.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reports(Report entity)
		{
			this.SendPropertyChanging();
			entity.Report_Category = this;
		}
		
		private void detach_Reports(Report entity)
		{
			this.SendPropertyChanging();
			entity.Report_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Categories_Audit")]
	public partial class Report_Categories_Audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CategoryId;
		
		private string _Name;
		
		private string _Action_Type;
		
		private System.Nullable<System.DateTime> _Action_Date;
		
		private System.Nullable<int> _Action_Owner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAction_TypeChanging(string value);
    partial void OnAction_TypeChanged();
    partial void OnAction_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAction_DateChanged();
    partial void OnAction_OwnerChanging(System.Nullable<int> value);
    partial void OnAction_OwnerChanged();
    #endregion
		
		public Report_Categories_Audit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Type", DbType="NVarChar(50)")]
		public string Action_Type
		{
			get
			{
				return this._Action_Type;
			}
			set
			{
				if ((this._Action_Type != value))
				{
					this.OnAction_TypeChanging(value);
					this.SendPropertyChanging();
					this._Action_Type = value;
					this.SendPropertyChanged("Action_Type");
					this.OnAction_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Action_Date
		{
			get
			{
				return this._Action_Date;
			}
			set
			{
				if ((this._Action_Date != value))
				{
					this.OnAction_DateChanging(value);
					this.SendPropertyChanging();
					this._Action_Date = value;
					this.SendPropertyChanged("Action_Date");
					this.OnAction_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Owner", DbType="Int")]
		public System.Nullable<int> Action_Owner
		{
			get
			{
				return this._Action_Owner;
			}
			set
			{
				if ((this._Action_Owner != value))
				{
					this.OnAction_OwnerChanging(value);
					this.SendPropertyChanging();
					this._Action_Owner = value;
					this.SendPropertyChanged("Action_Owner");
					this.OnAction_OwnerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_External_Access")]
	public partial class Report_External_Access : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportId;
		
		private int _External_GroupId;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntityRef<External_Group> _External_Group;
		
		private EntityRef<Report> _Report;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIdChanging(int value);
    partial void OnReportIdChanged();
    partial void OnExternal_GroupIdChanging(int value);
    partial void OnExternal_GroupIdChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Report_External_Access()
		{
			this._External_Group = default(EntityRef<External_Group>);
			this._Report = default(EntityRef<Report>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					if (this._Report.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_External_GroupId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int External_GroupId
		{
			get
			{
				return this._External_GroupId;
			}
			set
			{
				if ((this._External_GroupId != value))
				{
					if (this._External_Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExternal_GroupIdChanging(value);
					this.SendPropertyChanging();
					this._External_GroupId = value;
					this.SendPropertyChanged("External_GroupId");
					this.OnExternal_GroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="External_Group_Report_External_Access", Storage="_External_Group", ThisKey="External_GroupId", OtherKey="External_GroupId", IsForeignKey=true)]
		public External_Group External_Group
		{
			get
			{
				return this._External_Group.Entity;
			}
			set
			{
				External_Group previousValue = this._External_Group.Entity;
				if (((previousValue != value) 
							|| (this._External_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._External_Group.Entity = null;
						previousValue.Report_External_Accesses.Remove(this);
					}
					this._External_Group.Entity = value;
					if ((value != null))
					{
						value.Report_External_Accesses.Add(this);
						this._External_GroupId = value.External_GroupId;
					}
					else
					{
						this._External_GroupId = default(int);
					}
					this.SendPropertyChanged("External_Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Report_External_Access", Storage="_Report", ThisKey="ReportId", OtherKey="ReportId", IsForeignKey=true)]
		public Report Report
		{
			get
			{
				return this._Report.Entity;
			}
			set
			{
				Report previousValue = this._Report.Entity;
				if (((previousValue != value) 
							|| (this._Report.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report.Entity = null;
						previousValue.Report_External_Accesses.Remove(this);
					}
					this._Report.Entity = value;
					if ((value != null))
					{
						value.Report_External_Accesses.Add(this);
						this._ReportId = value.ReportId;
					}
					else
					{
						this._ReportId = default(int);
					}
					this.SendPropertyChanged("Report");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_External_Access_Audit")]
	public partial class Report_External_Access_Audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ReportId;
		
		private int _External_GroupId;
		
		private string _Action_Type;
		
		private System.Nullable<System.DateTime> _Action_Date;
		
		private System.Nullable<int> _Action_Owner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnReportIdChanging(int value);
    partial void OnReportIdChanged();
    partial void OnExternal_GroupIdChanging(int value);
    partial void OnExternal_GroupIdChanged();
    partial void OnAction_TypeChanging(string value);
    partial void OnAction_TypeChanged();
    partial void OnAction_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAction_DateChanged();
    partial void OnAction_OwnerChanging(System.Nullable<int> value);
    partial void OnAction_OwnerChanged();
    #endregion
		
		public Report_External_Access_Audit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="Int NOT NULL")]
		public int ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_External_GroupId", DbType="Int NOT NULL")]
		public int External_GroupId
		{
			get
			{
				return this._External_GroupId;
			}
			set
			{
				if ((this._External_GroupId != value))
				{
					this.OnExternal_GroupIdChanging(value);
					this.SendPropertyChanging();
					this._External_GroupId = value;
					this.SendPropertyChanged("External_GroupId");
					this.OnExternal_GroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Type", DbType="NVarChar(50)")]
		public string Action_Type
		{
			get
			{
				return this._Action_Type;
			}
			set
			{
				if ((this._Action_Type != value))
				{
					this.OnAction_TypeChanging(value);
					this.SendPropertyChanging();
					this._Action_Type = value;
					this.SendPropertyChanged("Action_Type");
					this.OnAction_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Action_Date
		{
			get
			{
				return this._Action_Date;
			}
			set
			{
				if ((this._Action_Date != value))
				{
					this.OnAction_DateChanging(value);
					this.SendPropertyChanging();
					this._Action_Date = value;
					this.SendPropertyChanged("Action_Date");
					this.OnAction_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Owner", DbType="Int")]
		public System.Nullable<int> Action_Owner
		{
			get
			{
				return this._Action_Owner;
			}
			set
			{
				if ((this._Action_Owner != value))
				{
					this.OnAction_OwnerChanging(value);
					this.SendPropertyChanging();
					this._Action_Owner = value;
					this.SendPropertyChanged("Action_Owner");
					this.OnAction_OwnerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Favorite")]
	public partial class Report_Favorite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ReportId;
		
		private int _UserId;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnReportIdChanging(int value);
    partial void OnReportIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    #endregion
		
		public Report_Favorite()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="Int NOT NULL")]
		public int ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Organisation_Levels")]
	public partial class Report_Organisation_Level : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportId;
		
		private int _LevelId;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntityRef<Organisation_Level> _Organisation_Level;
		
		private EntityRef<Report> _Report;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIdChanging(int value);
    partial void OnReportIdChanged();
    partial void OnLevelIdChanging(int value);
    partial void OnLevelIdChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Report_Organisation_Level()
		{
			this._Organisation_Level = default(EntityRef<Organisation_Level>);
			this._Report = default(EntityRef<Report>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					if (this._Report.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelId", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int LevelId
		{
			get
			{
				return this._LevelId;
			}
			set
			{
				if ((this._LevelId != value))
				{
					if (this._Organisation_Level.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevelIdChanging(value);
					this.SendPropertyChanging();
					this._LevelId = value;
					this.SendPropertyChanged("LevelId");
					this.OnLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Level_Report_Organisation_Level", Storage="_Organisation_Level", ThisKey="LevelId", OtherKey="LevelId", IsForeignKey=true)]
		public Organisation_Level Organisation_Level
		{
			get
			{
				return this._Organisation_Level.Entity;
			}
			set
			{
				Organisation_Level previousValue = this._Organisation_Level.Entity;
				if (((previousValue != value) 
							|| (this._Organisation_Level.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation_Level.Entity = null;
						previousValue.Report_Organisation_Levels.Remove(this);
					}
					this._Organisation_Level.Entity = value;
					if ((value != null))
					{
						value.Report_Organisation_Levels.Add(this);
						this._LevelId = value.LevelId;
					}
					else
					{
						this._LevelId = default(int);
					}
					this.SendPropertyChanged("Organisation_Level");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Report_Organisation_Level", Storage="_Report", ThisKey="ReportId", OtherKey="ReportId", IsForeignKey=true)]
		public Report Report
		{
			get
			{
				return this._Report.Entity;
			}
			set
			{
				Report previousValue = this._Report.Entity;
				if (((previousValue != value) 
							|| (this._Report.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report.Entity = null;
						previousValue.Report_Organisation_Levels.Remove(this);
					}
					this._Report.Entity = value;
					if ((value != null))
					{
						value.Report_Organisation_Levels.Add(this);
						this._ReportId = value.ReportId;
					}
					else
					{
						this._ReportId = default(int);
					}
					this.SendPropertyChanged("Report");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Organisation_Roles_Audit")]
	public partial class Report_Organisation_Roles_Audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ReportId;
		
		private int _LevelId;
		
		private string _Action_Type;
		
		private System.Nullable<System.DateTime> _Action_Date;
		
		private System.Nullable<int> _Action_Owner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnReportIdChanging(int value);
    partial void OnReportIdChanged();
    partial void OnLevelIdChanging(int value);
    partial void OnLevelIdChanged();
    partial void OnAction_TypeChanging(string value);
    partial void OnAction_TypeChanged();
    partial void OnAction_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAction_DateChanged();
    partial void OnAction_OwnerChanging(System.Nullable<int> value);
    partial void OnAction_OwnerChanged();
    #endregion
		
		public Report_Organisation_Roles_Audit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="Int NOT NULL")]
		public int ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelId", DbType="Int NOT NULL")]
		public int LevelId
		{
			get
			{
				return this._LevelId;
			}
			set
			{
				if ((this._LevelId != value))
				{
					this.OnLevelIdChanging(value);
					this.SendPropertyChanging();
					this._LevelId = value;
					this.SendPropertyChanged("LevelId");
					this.OnLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Type", DbType="NVarChar(50)")]
		public string Action_Type
		{
			get
			{
				return this._Action_Type;
			}
			set
			{
				if ((this._Action_Type != value))
				{
					this.OnAction_TypeChanging(value);
					this.SendPropertyChanging();
					this._Action_Type = value;
					this.SendPropertyChanged("Action_Type");
					this.OnAction_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Action_Date
		{
			get
			{
				return this._Action_Date;
			}
			set
			{
				if ((this._Action_Date != value))
				{
					this.OnAction_DateChanging(value);
					this.SendPropertyChanging();
					this._Action_Date = value;
					this.SendPropertyChanged("Action_Date");
					this.OnAction_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Owner", DbType="Int")]
		public System.Nullable<int> Action_Owner
		{
			get
			{
				return this._Action_Owner;
			}
			set
			{
				if ((this._Action_Owner != value))
				{
					this.OnAction_OwnerChanging(value);
					this.SendPropertyChanging();
					this._Action_Owner = value;
					this.SendPropertyChanged("Action_Owner");
					this.OnAction_OwnerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Recently")]
	public partial class Report_Recently : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ReportId;
		
		private int _UserId;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnReportIdChanging(int value);
    partial void OnReportIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    #endregion
		
		public Report_Recently()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="Int NOT NULL")]
		public int ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reports")]
	public partial class Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportId;
		
		private int _CategoryId;
		
		private string _Name;
		
		private string _ShortName;
		
		private string _Url;
		
		private string _Description;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<Report_External_Access> _Report_External_Accesses;
		
		private EntitySet<Report_Organisation_Level> _Report_Organisation_Levels;
		
		private EntitySet<Subscription> _Subscriptions;
		
		private EntityRef<Report_Category> _Report_Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIdChanging(int value);
    partial void OnReportIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Report()
		{
			this._Report_External_Accesses = new EntitySet<Report_External_Access>(new Action<Report_External_Access>(this.attach_Report_External_Accesses), new Action<Report_External_Access>(this.detach_Report_External_Accesses));
			this._Report_Organisation_Levels = new EntitySet<Report_Organisation_Level>(new Action<Report_Organisation_Level>(this.attach_Report_Organisation_Levels), new Action<Report_Organisation_Level>(this.detach_Report_Organisation_Levels));
			this._Subscriptions = new EntitySet<Subscription>(new Action<Subscription>(this.attach_Subscriptions), new Action<Subscription>(this.detach_Subscriptions));
			this._Report_Category = default(EntityRef<Report_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Report_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(300)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Report_External_Access", Storage="_Report_External_Accesses", ThisKey="ReportId", OtherKey="ReportId")]
		public EntitySet<Report_External_Access> Report_External_Accesses
		{
			get
			{
				return this._Report_External_Accesses;
			}
			set
			{
				this._Report_External_Accesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Report_Organisation_Level", Storage="_Report_Organisation_Levels", ThisKey="ReportId", OtherKey="ReportId")]
		public EntitySet<Report_Organisation_Level> Report_Organisation_Levels
		{
			get
			{
				return this._Report_Organisation_Levels;
			}
			set
			{
				this._Report_Organisation_Levels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Subscription", Storage="_Subscriptions", ThisKey="ReportId", OtherKey="ReportId")]
		public EntitySet<Subscription> Subscriptions
		{
			get
			{
				return this._Subscriptions;
			}
			set
			{
				this._Subscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Category_Report", Storage="_Report_Category", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public Report_Category Report_Category
		{
			get
			{
				return this._Report_Category.Entity;
			}
			set
			{
				Report_Category previousValue = this._Report_Category.Entity;
				if (((previousValue != value) 
							|| (this._Report_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Category.Entity = null;
						previousValue.Reports.Remove(this);
					}
					this._Report_Category.Entity = value;
					if ((value != null))
					{
						value.Reports.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("Report_Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Report_External_Accesses(Report_External_Access entity)
		{
			this.SendPropertyChanging();
			entity.Report = this;
		}
		
		private void detach_Report_External_Accesses(Report_External_Access entity)
		{
			this.SendPropertyChanging();
			entity.Report = null;
		}
		
		private void attach_Report_Organisation_Levels(Report_Organisation_Level entity)
		{
			this.SendPropertyChanging();
			entity.Report = this;
		}
		
		private void detach_Report_Organisation_Levels(Report_Organisation_Level entity)
		{
			this.SendPropertyChanging();
			entity.Report = null;
		}
		
		private void attach_Subscriptions(Subscription entity)
		{
			this.SendPropertyChanging();
			entity.Report = this;
		}
		
		private void detach_Subscriptions(Subscription entity)
		{
			this.SendPropertyChanging();
			entity.Report = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reports_Audit")]
	public partial class Reports_Audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ReportId;
		
		private int _CategoryId;
		
		private string _Name;
		
		private string _ShortName;
		
		private string _Url;
		
		private System.Nullable<short> _Status;
		
		private string _Action_Type;
		
		private System.Nullable<System.DateTime> _Action_Date;
		
		private System.Nullable<int> _Action_Owner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnReportIdChanging(int value);
    partial void OnReportIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnAction_TypeChanging(string value);
    partial void OnAction_TypeChanged();
    partial void OnAction_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAction_DateChanged();
    partial void OnAction_OwnerChanging(System.Nullable<int> value);
    partial void OnAction_OwnerChanged();
    #endregion
		
		public Reports_Audit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="Int NOT NULL")]
		public int ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(300)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Type", DbType="NVarChar(50)")]
		public string Action_Type
		{
			get
			{
				return this._Action_Type;
			}
			set
			{
				if ((this._Action_Type != value))
				{
					this.OnAction_TypeChanging(value);
					this.SendPropertyChanging();
					this._Action_Type = value;
					this.SendPropertyChanged("Action_Type");
					this.OnAction_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Action_Date
		{
			get
			{
				return this._Action_Date;
			}
			set
			{
				if ((this._Action_Date != value))
				{
					this.OnAction_DateChanging(value);
					this.SendPropertyChanging();
					this._Action_Date = value;
					this.SendPropertyChanged("Action_Date");
					this.OnAction_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Owner", DbType="Int")]
		public System.Nullable<int> Action_Owner
		{
			get
			{
				return this._Action_Owner;
			}
			set
			{
				if ((this._Action_Owner != value))
				{
					this.OnAction_OwnerChanging(value);
					this.SendPropertyChanging();
					this._Action_Owner = value;
					this.SendPropertyChanged("Action_Owner");
					this.OnAction_OwnerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportUsers")]
	public partial class ReportUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private System.Nullable<bool> _Is_External_User;
		
		private System.Nullable<int> _TeamId;
		
		private System.Nullable<int> _Organisation_RoleId;
		
		private System.Nullable<int> _External_GroupId;
		
		private EntityRef<External_Group> _External_Group;
		
		private EntityRef<Organisation_Role> _Organisation_Role;
		
		private EntityRef<Team> _Team;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnIs_External_UserChanging(System.Nullable<bool> value);
    partial void OnIs_External_UserChanged();
    partial void OnTeamIdChanging(System.Nullable<int> value);
    partial void OnTeamIdChanged();
    partial void OnOrganisation_RoleIdChanging(System.Nullable<int> value);
    partial void OnOrganisation_RoleIdChanged();
    partial void OnExternal_GroupIdChanging(System.Nullable<int> value);
    partial void OnExternal_GroupIdChanged();
    #endregion
		
		public ReportUser()
		{
			this._External_Group = default(EntityRef<External_Group>);
			this._Organisation_Role = default(EntityRef<Organisation_Role>);
			this._Team = default(EntityRef<Team>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_External_User", DbType="Bit")]
		public System.Nullable<bool> Is_External_User
		{
			get
			{
				return this._Is_External_User;
			}
			set
			{
				if ((this._Is_External_User != value))
				{
					this.OnIs_External_UserChanging(value);
					this.SendPropertyChanging();
					this._Is_External_User = value;
					this.SendPropertyChanged("Is_External_User");
					this.OnIs_External_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="Int")]
		public System.Nullable<int> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					if (this._Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organisation_RoleId", DbType="Int")]
		public System.Nullable<int> Organisation_RoleId
		{
			get
			{
				return this._Organisation_RoleId;
			}
			set
			{
				if ((this._Organisation_RoleId != value))
				{
					if (this._Organisation_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganisation_RoleIdChanging(value);
					this.SendPropertyChanging();
					this._Organisation_RoleId = value;
					this.SendPropertyChanged("Organisation_RoleId");
					this.OnOrganisation_RoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_External_GroupId", DbType="Int")]
		public System.Nullable<int> External_GroupId
		{
			get
			{
				return this._External_GroupId;
			}
			set
			{
				if ((this._External_GroupId != value))
				{
					if (this._External_Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExternal_GroupIdChanging(value);
					this.SendPropertyChanging();
					this._External_GroupId = value;
					this.SendPropertyChanged("External_GroupId");
					this.OnExternal_GroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="External_Group_ReportUser", Storage="_External_Group", ThisKey="External_GroupId", OtherKey="External_GroupId", IsForeignKey=true)]
		public External_Group External_Group
		{
			get
			{
				return this._External_Group.Entity;
			}
			set
			{
				External_Group previousValue = this._External_Group.Entity;
				if (((previousValue != value) 
							|| (this._External_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._External_Group.Entity = null;
						previousValue.ReportUsers.Remove(this);
					}
					this._External_Group.Entity = value;
					if ((value != null))
					{
						value.ReportUsers.Add(this);
						this._External_GroupId = value.External_GroupId;
					}
					else
					{
						this._External_GroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("External_Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Role_ReportUser", Storage="_Organisation_Role", ThisKey="Organisation_RoleId", OtherKey="Organisation_RoleId", IsForeignKey=true)]
		public Organisation_Role Organisation_Role
		{
			get
			{
				return this._Organisation_Role.Entity;
			}
			set
			{
				Organisation_Role previousValue = this._Organisation_Role.Entity;
				if (((previousValue != value) 
							|| (this._Organisation_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation_Role.Entity = null;
						previousValue.ReportUsers.Remove(this);
					}
					this._Organisation_Role.Entity = value;
					if ((value != null))
					{
						value.ReportUsers.Add(this);
						this._Organisation_RoleId = value.Organisation_RoleId;
					}
					else
					{
						this._Organisation_RoleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organisation_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_ReportUser", Storage="_Team", ThisKey="TeamId", OtherKey="TeamId", IsForeignKey=true)]
		public Team Team
		{
			get
			{
				return this._Team.Entity;
			}
			set
			{
				Team previousValue = this._Team.Entity;
				if (((previousValue != value) 
							|| (this._Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Team.Entity = null;
						previousValue.ReportUsers.Remove(this);
					}
					this._Team.Entity = value;
					if ((value != null))
					{
						value.ReportUsers.Add(this);
						this._TeamId = value.TeamId;
					}
					else
					{
						this._TeamId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Team");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReportUser", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ReportUser = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ReportUser = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status")]
	public partial class Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _StatusId;
		
		private string _Name;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIdChanging(short value);
    partial void OnStatusIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Status()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subscriptions")]
	public partial class Subscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _ReportId;
		
		private string _SubscriptionID;
		
		private System.Nullable<int> _Owner;
		
		private string _Description;
		
		private System.Nullable<short> _Status;
		
		private string _ScheduleID;
		
		private System.Nullable<short> _ScheduleType;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntityRef<Report> _Report;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIdChanging(System.Nullable<int> value);
    partial void OnReportIdChanged();
    partial void OnSubscriptionIDChanging(string value);
    partial void OnSubscriptionIDChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnScheduleIDChanging(string value);
    partial void OnScheduleIDChanged();
    partial void OnScheduleTypeChanging(System.Nullable<short> value);
    partial void OnScheduleTypeChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Subscription()
		{
			this._Report = default(EntityRef<Report>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="Int")]
		public System.Nullable<int> ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					if (this._Report.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SubscriptionID
		{
			get
			{
				return this._SubscriptionID;
			}
			set
			{
				if ((this._SubscriptionID != value))
				{
					this.OnSubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionID = value;
					this.SendPropertyChanged("SubscriptionID");
					this.OnSubscriptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", DbType="VarChar(50)")]
		public string ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleType", DbType="SmallInt")]
		public System.Nullable<short> ScheduleType
		{
			get
			{
				return this._ScheduleType;
			}
			set
			{
				if ((this._ScheduleType != value))
				{
					this.OnScheduleTypeChanging(value);
					this.SendPropertyChanging();
					this._ScheduleType = value;
					this.SendPropertyChanged("ScheduleType");
					this.OnScheduleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Subscription", Storage="_Report", ThisKey="ReportId", OtherKey="ReportId", IsForeignKey=true)]
		public Report Report
		{
			get
			{
				return this._Report.Entity;
			}
			set
			{
				Report previousValue = this._Report.Entity;
				if (((previousValue != value) 
							|| (this._Report.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report.Entity = null;
						previousValue.Subscriptions.Remove(this);
					}
					this._Report.Entity = value;
					if ((value != null))
					{
						value.Subscriptions.Add(this);
						this._ReportId = value.ReportId;
					}
					else
					{
						this._ReportId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Report");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subscriptions_Audit")]
	public partial class Subscriptions_Audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ReportId;
		
		private string _SubscriptionID;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<short> _Status;
		
		private string _ScheduleID;
		
		private string _Action_Type;
		
		private System.Nullable<System.DateTime> _Action_Date;
		
		private System.Nullable<int> _Action_Owner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnReportIdChanging(int value);
    partial void OnReportIdChanged();
    partial void OnSubscriptionIDChanging(string value);
    partial void OnSubscriptionIDChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnScheduleIDChanging(string value);
    partial void OnScheduleIDChanged();
    partial void OnAction_TypeChanging(string value);
    partial void OnAction_TypeChanged();
    partial void OnAction_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAction_DateChanged();
    partial void OnAction_OwnerChanging(System.Nullable<int> value);
    partial void OnAction_OwnerChanged();
    #endregion
		
		public Subscriptions_Audit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="Int NOT NULL")]
		public int ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubscriptionID
		{
			get
			{
				return this._SubscriptionID;
			}
			set
			{
				if ((this._SubscriptionID != value))
				{
					this.OnSubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionID = value;
					this.SendPropertyChanged("SubscriptionID");
					this.OnSubscriptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", DbType="VarChar(50)")]
		public string ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Type", DbType="NVarChar(50)")]
		public string Action_Type
		{
			get
			{
				return this._Action_Type;
			}
			set
			{
				if ((this._Action_Type != value))
				{
					this.OnAction_TypeChanging(value);
					this.SendPropertyChanging();
					this._Action_Type = value;
					this.SendPropertyChanged("Action_Type");
					this.OnAction_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Action_Date
		{
			get
			{
				return this._Action_Date;
			}
			set
			{
				if ((this._Action_Date != value))
				{
					this.OnAction_DateChanging(value);
					this.SendPropertyChanging();
					this._Action_Date = value;
					this.SendPropertyChanged("Action_Date");
					this.OnAction_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Owner", DbType="Int")]
		public System.Nullable<int> Action_Owner
		{
			get
			{
				return this._Action_Owner;
			}
			set
			{
				if ((this._Action_Owner != value))
				{
					this.OnAction_OwnerChanging(value);
					this.SendPropertyChanging();
					this._Action_Owner = value;
					this.SendPropertyChanged("Action_Owner");
					this.OnAction_OwnerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.System_Permissions")]
	public partial class System_Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _System_PermissionId;
		
		private string _Name;
		
		private System.Nullable<short> _Status;
		
		private EntitySet<System_Role_Permission> _System_Role_Permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystem_PermissionIdChanging(int value);
    partial void OnSystem_PermissionIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    #endregion
		
		public System_Permission()
		{
			this._System_Role_Permissions = new EntitySet<System_Role_Permission>(new Action<System_Role_Permission>(this.attach_System_Role_Permissions), new Action<System_Role_Permission>(this.detach_System_Role_Permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_PermissionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int System_PermissionId
		{
			get
			{
				return this._System_PermissionId;
			}
			set
			{
				if ((this._System_PermissionId != value))
				{
					this.OnSystem_PermissionIdChanging(value);
					this.SendPropertyChanging();
					this._System_PermissionId = value;
					this.SendPropertyChanged("System_PermissionId");
					this.OnSystem_PermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="System_Permission_System_Role_Permission", Storage="_System_Role_Permissions", ThisKey="System_PermissionId", OtherKey="System_PermissionId")]
		public EntitySet<System_Role_Permission> System_Role_Permissions
		{
			get
			{
				return this._System_Role_Permissions;
			}
			set
			{
				this._System_Role_Permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_System_Role_Permissions(System_Role_Permission entity)
		{
			this.SendPropertyChanging();
			entity.System_Permission = this;
		}
		
		private void detach_System_Role_Permissions(System_Role_Permission entity)
		{
			this.SendPropertyChanging();
			entity.System_Permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.System_Role_Permissions")]
	public partial class System_Role_Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _System_RoleId;
		
		private int _PermissionId;
		
		private int _System_PermissionId;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<System_Permission> _System_Permission;
		
		private EntityRef<System_Role> _System_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystem_RoleIdChanging(int value);
    partial void OnSystem_RoleIdChanged();
    partial void OnPermissionIdChanging(int value);
    partial void OnPermissionIdChanged();
    partial void OnSystem_PermissionIdChanging(int value);
    partial void OnSystem_PermissionIdChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public System_Role_Permission()
		{
			this._Permission = default(EntityRef<Permission>);
			this._System_Permission = default(EntityRef<System_Permission>);
			this._System_Role = default(EntityRef<System_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int System_RoleId
		{
			get
			{
				return this._System_RoleId;
			}
			set
			{
				if ((this._System_RoleId != value))
				{
					if (this._System_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSystem_RoleIdChanging(value);
					this.SendPropertyChanging();
					this._System_RoleId = value;
					this.SendPropertyChanged("System_RoleId");
					this.OnSystem_RoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_PermissionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int System_PermissionId
		{
			get
			{
				return this._System_PermissionId;
			}
			set
			{
				if ((this._System_PermissionId != value))
				{
					if (this._System_Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSystem_PermissionIdChanging(value);
					this.SendPropertyChanging();
					this._System_PermissionId = value;
					this.SendPropertyChanged("System_PermissionId");
					this.OnSystem_PermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_System_Role_Permission", Storage="_Permission", ThisKey="PermissionId", OtherKey="PermissionId", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.System_Role_Permissions.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.System_Role_Permissions.Add(this);
						this._PermissionId = value.PermissionId;
					}
					else
					{
						this._PermissionId = default(int);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="System_Permission_System_Role_Permission", Storage="_System_Permission", ThisKey="System_PermissionId", OtherKey="System_PermissionId", IsForeignKey=true)]
		public System_Permission System_Permission
		{
			get
			{
				return this._System_Permission.Entity;
			}
			set
			{
				System_Permission previousValue = this._System_Permission.Entity;
				if (((previousValue != value) 
							|| (this._System_Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._System_Permission.Entity = null;
						previousValue.System_Role_Permissions.Remove(this);
					}
					this._System_Permission.Entity = value;
					if ((value != null))
					{
						value.System_Role_Permissions.Add(this);
						this._System_PermissionId = value.System_PermissionId;
					}
					else
					{
						this._System_PermissionId = default(int);
					}
					this.SendPropertyChanged("System_Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="System_Role_System_Role_Permission", Storage="_System_Role", ThisKey="System_RoleId", OtherKey="System_RoleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public System_Role System_Role
		{
			get
			{
				return this._System_Role.Entity;
			}
			set
			{
				System_Role previousValue = this._System_Role.Entity;
				if (((previousValue != value) 
							|| (this._System_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._System_Role.Entity = null;
						previousValue.System_Role_Permissions.Remove(this);
					}
					this._System_Role.Entity = value;
					if ((value != null))
					{
						value.System_Role_Permissions.Add(this);
						this._System_RoleId = value.System_RoleId;
					}
					else
					{
						this._System_RoleId = default(int);
					}
					this.SendPropertyChanged("System_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.System_Role_Permissions_Audit")]
	public partial class System_Role_Permissions_Audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _System_RoleId;
		
		private int _PermissionId;
		
		private int _System_PermissionId;
		
		private System.Nullable<short> _Status;
		
		private string _Action_Type;
		
		private System.Nullable<System.DateTime> _Action_Date;
		
		private System.Nullable<int> _Action_Owner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSystem_RoleIdChanging(int value);
    partial void OnSystem_RoleIdChanged();
    partial void OnPermissionIdChanging(int value);
    partial void OnPermissionIdChanged();
    partial void OnSystem_PermissionIdChanging(int value);
    partial void OnSystem_PermissionIdChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnAction_TypeChanging(string value);
    partial void OnAction_TypeChanged();
    partial void OnAction_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAction_DateChanged();
    partial void OnAction_OwnerChanging(System.Nullable<int> value);
    partial void OnAction_OwnerChanged();
    #endregion
		
		public System_Role_Permissions_Audit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_RoleId", DbType="Int NOT NULL")]
		public int System_RoleId
		{
			get
			{
				return this._System_RoleId;
			}
			set
			{
				if ((this._System_RoleId != value))
				{
					this.OnSystem_RoleIdChanging(value);
					this.SendPropertyChanging();
					this._System_RoleId = value;
					this.SendPropertyChanged("System_RoleId");
					this.OnSystem_RoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="Int NOT NULL")]
		public int PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_PermissionId", DbType="Int NOT NULL")]
		public int System_PermissionId
		{
			get
			{
				return this._System_PermissionId;
			}
			set
			{
				if ((this._System_PermissionId != value))
				{
					this.OnSystem_PermissionIdChanging(value);
					this.SendPropertyChanging();
					this._System_PermissionId = value;
					this.SendPropertyChanged("System_PermissionId");
					this.OnSystem_PermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Type", DbType="NVarChar(50)")]
		public string Action_Type
		{
			get
			{
				return this._Action_Type;
			}
			set
			{
				if ((this._Action_Type != value))
				{
					this.OnAction_TypeChanging(value);
					this.SendPropertyChanging();
					this._Action_Type = value;
					this.SendPropertyChanged("Action_Type");
					this.OnAction_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Action_Date
		{
			get
			{
				return this._Action_Date;
			}
			set
			{
				if ((this._Action_Date != value))
				{
					this.OnAction_DateChanging(value);
					this.SendPropertyChanging();
					this._Action_Date = value;
					this.SendPropertyChanged("Action_Date");
					this.OnAction_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Owner", DbType="Int")]
		public System.Nullable<int> Action_Owner
		{
			get
			{
				return this._Action_Owner;
			}
			set
			{
				if ((this._Action_Owner != value))
				{
					this.OnAction_OwnerChanging(value);
					this.SendPropertyChanging();
					this._Action_Owner = value;
					this.SendPropertyChanged("Action_Owner");
					this.OnAction_OwnerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.System_Roles")]
	public partial class System_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _System_RoleId;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<System_Role_Permission> _System_Role_Permissions;
		
		private EntitySet<SystemUser> _SystemUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystem_RoleIdChanging(int value);
    partial void OnSystem_RoleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public System_Role()
		{
			this._System_Role_Permissions = new EntitySet<System_Role_Permission>(new Action<System_Role_Permission>(this.attach_System_Role_Permissions), new Action<System_Role_Permission>(this.detach_System_Role_Permissions));
			this._SystemUsers = new EntitySet<SystemUser>(new Action<SystemUser>(this.attach_SystemUsers), new Action<SystemUser>(this.detach_SystemUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int System_RoleId
		{
			get
			{
				return this._System_RoleId;
			}
			set
			{
				if ((this._System_RoleId != value))
				{
					this.OnSystem_RoleIdChanging(value);
					this.SendPropertyChanging();
					this._System_RoleId = value;
					this.SendPropertyChanged("System_RoleId");
					this.OnSystem_RoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="System_Role_System_Role_Permission", Storage="_System_Role_Permissions", ThisKey="System_RoleId", OtherKey="System_RoleId")]
		public EntitySet<System_Role_Permission> System_Role_Permissions
		{
			get
			{
				return this._System_Role_Permissions;
			}
			set
			{
				this._System_Role_Permissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="System_Role_SystemUser", Storage="_SystemUsers", ThisKey="System_RoleId", OtherKey="System_RoleId")]
		public EntitySet<SystemUser> SystemUsers
		{
			get
			{
				return this._SystemUsers;
			}
			set
			{
				this._SystemUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_System_Role_Permissions(System_Role_Permission entity)
		{
			this.SendPropertyChanging();
			entity.System_Role = this;
		}
		
		private void detach_System_Role_Permissions(System_Role_Permission entity)
		{
			this.SendPropertyChanging();
			entity.System_Role = null;
		}
		
		private void attach_SystemUsers(SystemUser entity)
		{
			this.SendPropertyChanging();
			entity.System_Role = this;
		}
		
		private void detach_SystemUsers(SystemUser entity)
		{
			this.SendPropertyChanging();
			entity.System_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemUsers")]
	public partial class SystemUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _System_RoleId;
		
		private EntityRef<System_Role> _System_Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnSystem_RoleIdChanging(int value);
    partial void OnSystem_RoleIdChanged();
    #endregion
		
		public SystemUser()
		{
			this._System_Role = default(EntityRef<System_Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_RoleId", DbType="Int NOT NULL")]
		public int System_RoleId
		{
			get
			{
				return this._System_RoleId;
			}
			set
			{
				if ((this._System_RoleId != value))
				{
					if (this._System_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSystem_RoleIdChanging(value);
					this.SendPropertyChanging();
					this._System_RoleId = value;
					this.SendPropertyChanged("System_RoleId");
					this.OnSystem_RoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="System_Role_SystemUser", Storage="_System_Role", ThisKey="System_RoleId", OtherKey="System_RoleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public System_Role System_Role
		{
			get
			{
				return this._System_Role.Entity;
			}
			set
			{
				System_Role previousValue = this._System_Role.Entity;
				if (((previousValue != value) 
							|| (this._System_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._System_Role.Entity = null;
						previousValue.SystemUsers.Remove(this);
					}
					this._System_Role.Entity = value;
					if ((value != null))
					{
						value.SystemUsers.Add(this);
						this._System_RoleId = value.System_RoleId;
					}
					else
					{
						this._System_RoleId = default(int);
					}
					this.SendPropertyChanged("System_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SystemUser", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SystemUser = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SystemUser = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teams")]
	public partial class Team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeamId;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<short> _Status;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private EntitySet<ReportUser> _ReportUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeamIdChanging(int value);
    partial void OnTeamIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Team()
		{
			this._ReportUsers = new EntitySet<ReportUser>(new Action<ReportUser>(this.attach_ReportUsers), new Action<ReportUser>(this.detach_ReportUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_ReportUser", Storage="_ReportUsers", ThisKey="TeamId", OtherKey="TeamId")]
		public EntitySet<ReportUser> ReportUsers
		{
			get
			{
				return this._ReportUsers;
			}
			set
			{
				this._ReportUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReportUsers(ReportUser entity)
		{
			this.SendPropertyChanging();
			entity.Team = this;
		}
		
		private void detach_ReportUsers(ReportUser entity)
		{
			this.SendPropertyChanging();
			entity.Team = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teams_Audit")]
	public partial class Teams_Audit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _TeamId;
		
		private string _Name;
		
		private string _Action_Type;
		
		private System.Nullable<System.DateTime> _Action_Date;
		
		private System.Nullable<int> _Action_Owner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTeamIdChanging(int value);
    partial void OnTeamIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAction_TypeChanging(string value);
    partial void OnAction_TypeChanged();
    partial void OnAction_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAction_DateChanged();
    partial void OnAction_OwnerChanging(System.Nullable<int> value);
    partial void OnAction_OwnerChanged();
    #endregion
		
		public Teams_Audit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="Int NOT NULL")]
		public int TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Type", DbType="NVarChar(50)")]
		public string Action_Type
		{
			get
			{
				return this._Action_Type;
			}
			set
			{
				if ((this._Action_Type != value))
				{
					this.OnAction_TypeChanging(value);
					this.SendPropertyChanging();
					this._Action_Type = value;
					this.SendPropertyChanged("Action_Type");
					this.OnAction_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Action_Date
		{
			get
			{
				return this._Action_Date;
			}
			set
			{
				if ((this._Action_Date != value))
				{
					this.OnAction_DateChanging(value);
					this.SendPropertyChanging();
					this._Action_Date = value;
					this.SendPropertyChanged("Action_Date");
					this.OnAction_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Owner", DbType="Int")]
		public System.Nullable<int> Action_Owner
		{
			get
			{
				return this._Action_Owner;
			}
			set
			{
				if ((this._Action_Owner != value))
				{
					this.OnAction_OwnerChanging(value);
					this.SendPropertyChanging();
					this._Action_Owner = value;
					this.SendPropertyChanged("Action_Owner");
					this.OnAction_OwnerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _UserName;
		
		private string _Password;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Address;
		
		private string _Email;
		
		private System.Nullable<short> _Status;
		
		private string _Phone;
		
		private System.Nullable<System.DateTime> _Online_Locked_Until_Datetime;
		
		private System.Nullable<short> _Online_No_Of_Login_Attempts;
		
		private System.Nullable<System.DateTime> _Last_Online_Login_Date;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<int> _Owner;
		
		private System.Nullable<int> _UpdatedBy;
		
		private bool _Is_System_User;
		
		private EntityRef<ReportUser> _ReportUser;
		
		private EntityRef<SystemUser> _SystemUser;
		
		private EntitySet<AddressBook> _AddressBooks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnStatusChanging(System.Nullable<short> value);
    partial void OnStatusChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnOnline_Locked_Until_DatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOnline_Locked_Until_DatetimeChanged();
    partial void OnOnline_No_Of_Login_AttemptsChanging(System.Nullable<short> value);
    partial void OnOnline_No_Of_Login_AttemptsChanged();
    partial void OnLast_Online_Login_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnLast_Online_Login_DateChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnOwnerChanging(System.Nullable<int> value);
    partial void OnOwnerChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnIs_System_UserChanging(bool value);
    partial void OnIs_System_UserChanged();
    #endregion
		
		public User()
		{
			this._ReportUser = default(EntityRef<ReportUser>);
			this._SystemUser = default(EntityRef<SystemUser>);
			this._AddressBooks = new EntitySet<AddressBook>(new Action<AddressBook>(this.attach_AddressBooks), new Action<AddressBook>(this.detach_AddressBooks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(256)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(256)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(400)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt")]
		public System.Nullable<short> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(30)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Online_Locked_Until_Datetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Online_Locked_Until_Datetime
		{
			get
			{
				return this._Online_Locked_Until_Datetime;
			}
			set
			{
				if ((this._Online_Locked_Until_Datetime != value))
				{
					this.OnOnline_Locked_Until_DatetimeChanging(value);
					this.SendPropertyChanging();
					this._Online_Locked_Until_Datetime = value;
					this.SendPropertyChanged("Online_Locked_Until_Datetime");
					this.OnOnline_Locked_Until_DatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Online_No_Of_Login_Attempts", DbType="SmallInt")]
		public System.Nullable<short> Online_No_Of_Login_Attempts
		{
			get
			{
				return this._Online_No_Of_Login_Attempts;
			}
			set
			{
				if ((this._Online_No_Of_Login_Attempts != value))
				{
					this.OnOnline_No_Of_Login_AttemptsChanging(value);
					this.SendPropertyChanging();
					this._Online_No_Of_Login_Attempts = value;
					this.SendPropertyChanged("Online_No_Of_Login_Attempts");
					this.OnOnline_No_Of_Login_AttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Online_Login_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Last_Online_Login_Date
		{
			get
			{
				return this._Last_Online_Login_Date;
			}
			set
			{
				if ((this._Last_Online_Login_Date != value))
				{
					this.OnLast_Online_Login_DateChanging(value);
					this.SendPropertyChanging();
					this._Last_Online_Login_Date = value;
					this.SendPropertyChanged("Last_Online_Login_Date");
					this.OnLast_Online_Login_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="Int")]
		public System.Nullable<int> Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_System_User", DbType="Bit NOT NULL")]
		public bool Is_System_User
		{
			get
			{
				return this._Is_System_User;
			}
			set
			{
				if ((this._Is_System_User != value))
				{
					this.OnIs_System_UserChanging(value);
					this.SendPropertyChanging();
					this._Is_System_User = value;
					this.SendPropertyChanged("Is_System_User");
					this.OnIs_System_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReportUser", Storage="_ReportUser", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public ReportUser ReportUser
		{
			get
			{
				return this._ReportUser.Entity;
			}
			set
			{
				ReportUser previousValue = this._ReportUser.Entity;
				if (((previousValue != value) 
							|| (this._ReportUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportUser.Entity = null;
						previousValue.User = null;
					}
					this._ReportUser.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("ReportUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SystemUser", Storage="_SystemUser", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public SystemUser SystemUser
		{
			get
			{
				return this._SystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser.Entity = null;
						previousValue.User = null;
					}
					this._SystemUser.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("SystemUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AddressBook", Storage="_AddressBooks", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<AddressBook> AddressBooks
		{
			get
			{
				return this._AddressBooks;
			}
			set
			{
				this._AddressBooks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AddressBooks(AddressBook entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_AddressBooks(AddressBook entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddressBook")]
	public partial class AddressBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _BusinessPhone;
		
		private string _HomePhone;
		
		private string _MobilePhone;
		
		private string _Address;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBusinessPhoneChanging(string value);
    partial void OnBusinessPhoneChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public AddressBook()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessPhone", DbType="NVarChar(30)")]
		public string BusinessPhone
		{
			get
			{
				return this._BusinessPhone;
			}
			set
			{
				if ((this._BusinessPhone != value))
				{
					this.OnBusinessPhoneChanging(value);
					this.SendPropertyChanging();
					this._BusinessPhone = value;
					this.SendPropertyChanged("BusinessPhone");
					this.OnBusinessPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(30)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVarChar(30)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(256)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AddressBook", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.AddressBooks.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.AddressBooks.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
